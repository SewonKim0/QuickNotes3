{"cs\\css.txt":"Design: Principles\n\tStyle: (colors, atmosphere, attention)\n\tConsistency: Match other colors & styles\n\tAlignment: With other components\nDesign: Styles\n\tSewonKim: Compressed sections, navbar, simple components\n\tModern: Dark & simple sections, quality components, spaced\n\tArtistic: Monocolored components, dynamic background / animations, spaced\n\tGame: Three.js game, fixed UI\nDesign: Layouts\n\tSeparated Elements: convolution\n\tSections: Distinct rows\n\t\tScroll Introduction: Fade in & move up\n\t\tSections Scroll: One-by-one appearance\n\n\t\tAutoplaying video section\n\t\tVertical sections\n\tScroll Slideshow\n\t\tPersistent comp: stays fixed depending on scroll area\n\t\tthree.js\n\nDesign: Button\n\tFloating Button: Border only\n\t\tHover: Internal & border animation\n\t2Color Button: light bg, dark text/icon\n\t\tHover: Internal animation, alternate colors\n\tFloating Icon: Monocolor\n\t\tHover: Glow\n\t\tClick: Transition animation\n\t\tBobbing animation\nDesign: Text\n\tLifelike Text\n\t\tText Introduction: Wave in / type in\nDesign: List / Grid\n\tGlow List: Separate display for curr selected\n\t\tHover: glow effect\n\tConveyor List: Move elements in conveyor loop\n\n\tIcon List/Grid: Icon & name in each cell\n\tImage Link Grid: Image & title in each cell\n\t\tHover: Expand\nDesign: Navbar\n\tFloating Navbar: Foggy bg w icon\n\tSide Text Vertical Nav: Header for each cell\nDesign: Slider\n\tVideo Slider: Slide through dynamic contents\n\tPills Slider: Pill tabs below content display\nDesign: Container\n\t3D Container: Shader, 3d separatism\n\tTranslucent Container: Gradient & fog\n\t\tContainer: Expanding animation\nDesign: Background\n\tPattern Background: Svg patterns\n\tImg/Gif Background: With floating comps\nDesign: Others\n\tIntro\n\tMusic\n\tPage Change: Intro animation to hide change\n\tInteractive sfx: button click\n\tCursor: following dot, following glow\n\tSmooth Scroll\n\nDesign Resources\n\tCSS Awards: https://www.cssdesignawards.com/\n\tAnimation Guide: https://motion.zajno.com/\n\n---------------------------------------------------------------------------\n\nSvg: Editor\n\thttps://app.haikei.app/\nSvg: Elements\n\t<svg width height>\n\t\t<rect x y width height fill />\n\t\t<line stroke stroke-width x1 y1 x2 y2 />\n\t\t<circle cx cy r fill />\n\t\t<ellipse cs cy rx ry fill transform=\"rotate(degrees cx cy)\" />\n\t\t<polygon points=\"x1,y1 x2,y2 ...\" fill stroke stroke-width />\n\t\t<text x y  />\nSvg: Gradient\n\tDefine Gradients:\n\t\t<defs>\n\t\t\tLinear: <linearGradient id=\"gradientID\">\n\t\t\t\t<stop offset=\"0%\" stop-color= />\n\t\t\tCircular: <radialGradient id cx=\"50%\" cy=\"50%\" r=\"50%\" fx=\"50%\" fy=\"50%\">\n\t\t\t\t<stop ... />\n\tUse: fill=\"url(#gradientID)\"\nSvg: Mask\n\t<mask id=\"maskID\">\n\t\t<circle ... />\n\tUse Mask: <rect mask=\"url(#maskID)\" />\n\nCSS: Pointer\n\tMouse Ignore: pointer-events: none;\nCSS: Variables\n\tCreate: :root { --var: val; }\n\tAccess: var(--var)\nCSS: Media Query\n\t@media screen and (min-width: 800px) {}\nCSS: Flexbox\n\tContainer\n\t\tflex-wrap: wrap;\n\tElement\n\t\tflex: growProportion shrinkProportion length;\n\nCSS: Responsive Img\n\tFit Container: object-fit: cover;\n\tFit Container Pos: object-position: posX posY;\n\tClamp: width: clamp(min, default, max);\n\tAspect Ratio: aspect-ratio: proportionX / proportionY;\nCSS: List\n\t<li> No Dots: list-style: none;\nCSS: Navbar\n\tSmooth Scroll: * { scroll-behavior: smooth; }\n\tScroll Margin: scroll-margin-top: 4rem; //on target\nCSS: Slider\n\tDisplay: (overflow: hidden)\n\tList: (display: flex, transition: transform)\n\tElement: (flex: 0 0 100%)\n\t//Move elements by changing transform: translate of List\n\nCSS: Color\n\tbackground: linear-gradient(to bottom, color1, color2, ...);\nCSS: Position / Dimensions\n\tMove By Self-Dimensions: transform: translate(-50%, -50%);\nCSS: Containers\n\tShadow Outwards: box-shadow: offsetX offsetY blur-radius spread-radius color;\n\tShadow Inwards: box-shadow: inset ...;\n\tBackground Blur: backdrop-filter: blur(10px);\n\n\tPadding Inwards: box-sizing: border-box;\n\nCSS: Animation\n\ttransition: property duration timing-func delay;\n\ttransition-property: property1, ...;\n\n\tCreate: @keyframes animName { 0% {} 100% {} }\n\tUse: animation: animName 2s linear alternate;\n\n------------------------------------------------------------------------\n\nScroll Animation\n\t// JS\n\tTrack Element Visibility: new IntersectionObserver(func(observeList))\n\t\tobserveList.forEach(...)\n\t\t\tIs Visible: observeEntry.isIntersecting\n\t\t\tGet Element: observeEntry.target\n\t\tAdd Element: .observe(element)\n\nMouse Follower\n\t// JS\n\tMouse Coordinates: window.addEventListener(\"mousemove\", func(e))\n\t\tPosX: e.clientX\n\t\tPosY: e.clientY\n\tMouse Left Page: window.addEventListener(\"mouseout\", func(e))\n\t\tif (!e.relatedTarget || e.relatedTarget === null) { //hide follower }\n\t\t//show follower on mousemove event above\n\n\t// CSS\n\tDont Affect Mouse: pointer-events: none;\n\nSVG Trace Animation\n\t// JS\n\tframer-motion: { motion }\n\n\t<motion.path\n\t\tinitial={{ pathLength: 0 }}\n\t\tanimate={{ pathLength: 1 }}\n\t/>\n\nExpanding Svg Animation\n\t// CSS\n\tsvg:hover {\n\t\ttransform: scale(1.1);\n\t\ttransition: transform 0.3s ease;\n\t}\n\nWave Text Animation\n\t// React\n\t<div> style(relPos)\n\t\t<div> class(upper) style(absPos, translate(-50%, 0), horizontalFlex)\n\t\t\t{\"text\".split(\"\").map((textChar, textIndex) => {\n\t\t\t\treturn <p style(transitionDelay: {textIndex * 40})>\n\t\t\t})}\n\t\t<div> class(lower) ...\n\t\t\t...\n\t// CSS\n\t.upper > p {\n\t\ttransform-origin: top center;\n\t\ttransform: scaleY(1);\n\t\ttransition: transform 0.3s ease-in-out;\n\t} //on animation: change to scaleY(0)\n\n\t.lower > p {\n\t\ttransform-origin: bottom center;\n\t\ttransform: scaleY(0);\n\t\ttransition: transform 0.3s ease-in-out;\n\t} //on animation: change to scaleY(1)\n\nScroll Event\n\t// JS\n\tEvent: document.body.onscroll = func\n\tGet Scroll Pos: document.body.getBoundingClientRect().top\n\nExpanding Circle Button\n\t// React\n\t<button\n\t\tonMouseEnter={(e) => {\n\t\t\tlet buttonLeft = buttonRef.current.offsetLeft\n\t\t\tlet buttonTop = buttonRef.current.offsetTop\n\t\t\t//set svg left by state: (e.clientX - buttonLeft)\n\t\t\t//set svg top by state: (e.clientY - buttonTop)\n\t\t\t//set svg width by state: (buttonRef.current.offsetWidth * 2.5)\n\t\t\t//set svg height by state: (buttonRef.current.offsetWidth * 2.5)\n\t\t}}\n\t\tonMouseLeave={() => { ... }}\n\t>\n\t\t<svg style={{ width height left top }}>\n\t\t\t<circle cx=\"50%\" cy=\"50%\" r=\"50%\" fill />\n\t// CSS\n\tbutton { overflow: hidden, relPos }\n\tsvg { absPos, transform: translate(-50%, -50%),\n\t\ttransition-property: width, height;\n\t\ttransition-duration: 0.5s;\n\t\ttransition-timing-function: ease-in;\n\t}\n\n----------------------------------------------------------------------\n\nFramer Motion: Motion Element\n\tframer-motion: { motion }\n\n\t<motion.div\n\t\tAnimation: animate={{ \"prop\": val }}\n\t\tAnimation Multiframes: animate={{ \"prop\": [frameVals] }}\n\t\tAnimation Config: transition={{ type: \"tween\", duration: 3, delay: 3, repeat: Infinity }}\n\n\t\tInitial: initial={ ... }\n\t\tHoverAnimation: whileHover={ ... }\n\t\tDrag: drag dragConstraints={{ left: 50 }} whileDrag={ ... }\n\t\tWindow Visible: whileInView={ ... }\n\t>\nFramer Motion: Variants\n\tDefine Animation Set: { animationName: { prop: \"val\" } } -> animationSet\n\tAnimate Subtree: <motion.ul\n\t\tanimate=\"animationName\"\n\t\tvariants={animationSet}\n\t>\n\t\t<motion.li variants={ ... }>\n\nthree: html\n\tCanvas: <canvas id=></canvas>\nthree: * as THREE (https://threejs.org/docs/)\n\tWindow Width: window.innerWidth -> number\n\tWindow Height: window.innerHeight -> number\n\n\tScene: new THREE.Scene() -> scene\n\t\tAdd Obj: .add(obj)\n\t\tBackground: .background(new THREE.TextureLoader().load(\"imgPath\"))\n\tCamera: new THREE.PerspectiveCamera(\n\t\tfieldView, aspectRatio, nearClip, farClip\n\t) -> camera\n\t\t.position.x -> number\n\t\t.position.y -> number\n\t\t.position.z -> number\n\t\tDirection: .lookAt(new THREE.Vector3(x, y, z))\n\tOrbitControls: new THREE.OrbinControls(camera, canvasElement) -> controls\n\t\tUpdate: .update()\n\tRenderer: new THREE.WebGLRenderer({ canvas: canvasElement }) -> renderer\n\t\tSize: setSize(x, y)\n\t\tSet Bg Color: .setClearColor(hexColor)\n\t\tShadow Enabled: .shadowMap.enabled -> bool\n\n\t\tRender: .render(scene, camera)\n\t\tRecursive Render:\n\t\t\tfunc() {\n\t\t\t\t//render\n\t\t\t\t//update camera\n\t\t\t\trequestAnimationFrame(func())\n\t\t\t}\nthree: Objects\n\tObj:\n\t\tPosX: .position.x -> number\n\t\tRotationX: .rotation.x -> number //radians\n\t\tCast Shadow: .castShadow -> bool\n\t\tReceive Shadow: .receiveShadow -> bool\n\n\t\tAdd Obj: .add(obj)\n\t\tObj Name: obj.name -> str\n\t\tGet Obj: scene.getObjectByName(str) -> obj\n\tGeometry:\n\t\tBox: new THREE.BoxGeometry(x, y, z) -> geometry\n\t\tPlane: new THREE.PlaneGeometry(width, depth)\n\t\tSphere: new THREE.SphereGeometry(size, x, y)\n\tMaterial:\n\t\tSelf Lighting: new THREE.MeshBasicMaterial({ color: color })\n\t\tStandard: new THREE.MeshStandardMaterial({ color: color })\n\t\tPlane: new THREE.MeshBasicMaterial({ color: color, side: THREE.DoublePane() })\n\t\tNot Luminated: new THREE.MeshPhongMaterial({ color: color })\n\n\tMesh: new THREE.Mesh(geometry, material)\n\tPlane:\n\n\tFog: new THREE.FogExp2(hexColor, float density) -> fog\n\t\tAdd Fog: scene.fog = fog\n\tPoint Light: new THREE.PointLight(color, intensity) -> light\n\t\tAdd Obj: .add(obj)\n\t\tShadow Enabled: .castShadow -> bool\n\tSpot Light: new THREE.SpotLight(color, intensity) -> light\n\t\tEdge Fuzz: .penumbra -> number\n\n\tGroup: new THREE.Group()\n\t\tAdd Obj: .add(obj)","cs\\python.txt":"Concepts\n\tMutable: Can modify\n\tImmutable: Can only replace\nSyntax\n\tTernary: trueVal if Condition else falseVal\n\n\tfuncName = lambda params: returnVal\n\tval = funcName(params)\nException\n\traise Error(\"msg\")\nMath\n\tAbs Val: abs(num)\n\tMax Int: sys.maxsize\nRandom\n\trandom.randint(a, b) -> int [a, b]\nSorting\n\tsorted(list, key=compFunc)\n\nString\n\tSplit: .split(delimiter) -> list[str]\n\tIndex Of: .find(str) -> int\n\tContains: substr in str -> bool\n\t\n\tStr -> Int: int(str) -> int\nList\n\tlist = [-1] * n\n\tlist = [[-1] * n1 for _ in range(n)]\n\n\tlist.sort()\n\tlist[:] -> cloneList\nDict\n\tdict = {}\n\tdict[key] -> val\n\tdel dict[key]\n\tkey in dict -> bool\n\tdict.copy -> clone\n\tfor key in dict:\nStack\n\tstack = []\n\t\t.append(val)\n\t\t.pop()\nQueue: from collections import deque\n\tqueue = deque() // [back, front]\n\t\t.append(val) //front, .popleft() -> back, queue[0] -> back\n\t\t.appendLeft() //back, queue[-1] -> front, .pop() -> front\n\t\tlen(queue)\n\t\tqueue.clear()\nSet\n\tset = set()\n\t\t.add(val)\n\t\t.remove(val)\n\t\tval in set -> bool\n\t\t.clear()\nPriorityQueue\n\timport heapq //minheap, dupes allowed\n\t\tpq = []\n\t\theapq.heappush(pq, val)\n\t\theapq.heappop(pq) -> top\n\t\theapq.nsmallest(1, pq)[0] -> top\n\t\tpq[len(pq) - 1]\n\t\theapq.heapify(list) //convert to heap\n\theap[list/tuple]: lexicographical comparison\n\nnumpy\n\tCreate Arr: .zeros(tuple shape) -> arr\n\tCreate Arr From List: .array(list) -> arr\n\t\tAccess: [i]\n\t\tAccess Multi Dim: [i, i1]\n\t\tDimCount: .ndim -> int\n\t\tGet Dims: .shape -> tuple\n\t\tAdd Dim Front: arr[np.newaxis, :] -> arr\n\t\tAdd Dim End: np.expand_dims(arr, axis=-1) -> arr\n\t\tRemove Dim: np.squeeze(arr, axis=int)\n\t\tClone: .copy() -> arr\n\t\tIterate All Dims: for val in np.nditer(arr):\n\t\tCombine: np.append(arr1, arr2, axis=dim) -> arr\n\tnp.save(file.npy, arr)\n\tnp.load(file.npy) -> arr\ntime\n\tWait: .sleep(secs)\n\tCurr Time (secs): .time()\nthreading\n\t.Thread(target=func) -> Thread\n\t\tStart: .start()\n\t\tWait for end: .join()\nos\n\tCreate/Use: open(file, \"r\" | \"w\")\n\t\t.read() -> str | bytes[]\n\t\t.write(str)\n\t\t.close()\n\n\tExists: os.path.exists(file) -> bool\n\tIs Dir: os.path.isdir(path) -> bool\n\n\tDir Children: .listdir(dir) -> str[]\n\tCombine: os.path.join(path, pathEnd) -> str\n\nPIL.Image\n\tFileGet: .open(imgPath) -> img\n\tFrom Np Arr: .fromarray(ndarray) -> img\nPIL.Image.Image\n\tDisplay: .show()\n\tPixels: .load()\n\t\tAccess / Edit: [x, y] -> tuple\n\tDimensions: .size -> (w, h)\n\ntkinter\n\tRoot: .Tk()\n\t\tDimensions: .geometry(\"WxH\") .geometry(\"+X+Y\")\n\t\tTopMost: .attributes(\"-topmost\", True)\n\t\tHeadless: .overridereddirect(True)\n\n\t\tClose Event: .protocol(\"WM_DELETE_WINDOW\", func)\n\t\tEvent Handler: .after(delay, func)\n\t\tStart: .mainloop()\n\t.Label(parent, text=)\n\t.Button(parent, text=)\n\t\tClick Event: .config(command=func)\n\t.Frame(parent, bg=)\n\t\tChildren: .winfo_children() -> list\n\n\tMethods\n\t\tPlace: .pack()\n\t\tGrid: .grid(row=, column=)\n\t\tGrid Dims: .grid_size() -> (x, y)\n\t\tGrid Occupation: .grid_slaves(y, x) -> int\n\n\t\tSetConfig: .configure(attribute)\n\t\tGetConfig : .cget(str attribute)\n\t\tRgb->Hex: \"#{:02x}{:02x}{:02x}\".format(*tupleColor)\n\tAttributes\n\t\tBg: str background\n\t\tColor: str fg\n\n\t\tborder-width: highlightthickness\n\t\tborder-color: highlightbackground\nmatplotlib.pyplot\n\tClick Listener: .connect(\"button_press_event\", func(event))\n\t\tevent.button == 1\n\t\tevent,xdata\n\t\tevent.ydata\n\tInsert Img: .imshow(ndarray)\n\n\tInsert Line: .plot(list, label=\"name\")\n\tX Name: .xlabel(string name)\n\tY Name: .ylabel(string name)\n\tInsert Names: .legend()\n\n\tTitle: .title(str)\n\tDisplay: .show()\n\nkeyboard\n\tListener: .on_press(func(event))\n\t\tevent.name == \"ctrl\"\n\n\tStop: .unhook_all()\n\tMainloop: .wait(\"esc\")\npynput.mouse\n\tListener: .Listener(on_click=func(x, y, button, pressed))\n\t\t.start()\n\t\t.stop()\n\t\tbutton == mouse.Button.left\n\npyinstaller\n\tCreate Exe: python -m PyInstaller file.py\n\t\tAdd Other File: --add-data \"relPath;.\"\n\ntensorflow\n\tCreate: .python.keras.Sequential(layers[]) -> model\n\t\tFinish: .compile(str loss, str optimizer, metrics[]\n\t\tTrain: .fit(input, output, int epochs, int batch_size) -> dict\n\t\t\tAccuracy: .history[\"accuracy\"] -> list[float] epochs\n\t\t\tLoss: .history[\"loss\"] -> list[float]\n\t\tPredict: .predict(input) -> output\n\t\tEvaluate: .evaluate(input, output) -> (loss, acc)\n\t\tDisplay: print(model.summary())\n\t\tSave: .save(\"path\")\n\tLoad: .python.keras.models.load_model(\"path\") -> model\n\ntensorflow.python.keras: Layers\n\tInput: .Input(tuple shape)\n\tDense: .layers.Dense(int units, str activation)\n\tFlatten: .models.Flatten(tuple input_shape)\n\tConv: .layers.Conv2D(outputSize, kernelShape, activation=, input_shape=) //local patterns\n\tPooling: .layers.MaxPooling2D(poolSize) //compress optimization\n\ntensorflow: Functions\n\tactivation\n\t\t\"relu\": hidden\n\t\t\"sigmoid\": binary\n\t\t\"softmax\": categorization\n\t\t\"linear\": object box\n\tloss\n\t\t\"sparse_categorical_crossentropy\": categorization\n\t\t\"mean_squared_error\": optimizer\n\toptimizer\n\t\t\"adam\"\n\tmetrics\n\t\t\"accuracy\"","QuickNotes3\\quicknotes3-website.txt":"Tasks","cs\\php.txt":"Variables\n\tCreate: $var = val;\n\tToString: var_dump($var)\n\tSet Undef: unset($var)\n\tIs Undef: isset($var)\nConditionals\n\tTrue | Default: $val ?: default\n\tNull | Default: $val ?? default\nLoops\n\tfor ($i = 0; $i < 5; i++) {}\n\tforeach ($arr as $val) {}\n\tforeach ($table as $key => $val) {}\nFunctions\n\tfunction funcName() {}\nOOP\n\tCreate: $obj = new ClassName()\n\tObj->Prop: $obj->prop\n\tObj->Static: $obj::prop\n\nString\n\tConcatenation: str1 . str2\n\tReplace: str_replace(find, replace, str)\n\tTrim: trim(str) -> str //trim spaces & escape chars\nArray\n\tCreate: $arr = [val1, ...]\n\tAccess: $arr[index] -> val\n\tAdd: $arr[] = val\n\tLen: count($arr) -> int\nTable\n\tCreate: $table = [ key => val ]\n\tAccess: $table[key] -> val\n\tAdd: $table[key] = val\n\tRemove: unset($table[key])\n\tContains: array_key_exists(key, $table)\n\nWordpress: Post\n\tGet Title: get_the_title() -> str\n\tGet Post: get_post(postId) -> post\n\tSet Curr Post: $post -> post\n\tSet Post Data: setup_postdata($post)\n\tReset Post Data: wp_reset_postdata()\n\n\tPosts Query: get_posts([ ... ])\n\t\tPost Type: post_type & post_status: publish\n\t\tPages: posts_per_page & paged: pageIndex\n\t\tOrdering: meta_key: propName & orderby: meta_value & order: ASC\n\t\tFilter Comparison: meta_query: [ key: propName & value: compareTo & compare: >= ]\n\t\tFilter Category: tax_query: [ taxonomy: tribe_events_cat & field: slug & terms: categories[] ]\n\tPosts Query: new WP_Query([ ... ])\n\t\tSet $post: ->the_post() //goes to next\n\t\tHas Next: ->have_posts()\n\t\tPage Count: ->max_num_pages -> int\n\nWordpress: ACF\n\tGet Field: get_field(slug, postID?) -> table\nWordpress: Events\n\tEvent Date: tribe_events_event_schedule_details() -> str\nWordpress: File Download\n\tBy Url: <a href=\"urlToFile\"></a>\n\n\tIn Php: header(\"Content-Type: FILE_TYPE\")\n\theader('Content-Disposition: attachment; filename=\"FILE_NAME\";')\n\tWrite File: ob_end_clean()\n\tfopen(\"php://output\", \"w\") -> stream\n\tfwrite(stream, text)\n\tfclose(stream)\n\tob_flush()\n\texit()\n\n\tBy Javascript: <a\n\t\thref: #\n\t\tdownload: filename\n\t\tdata-VAR_NAME\n\tAccess Data: element.getAttribute(\"data-VAR_NAME\")\n\n\tDownload: new Blob([text], { type: \"text/plain\" }) -> blob\n\tURL.createObjectURL(blob) -> url\n\tdocument.createElement(\"a\") -> element\n\t\tSet Url: .href: url\n\t\tSet Download: .setAttribute(\"download\", filename)\n\t\tActivate: .click()\n\nWordpress: Paging\n\tCreate Page: /* Template Name: Page Name */ //in php\n\tAdd New Page -> Page Attributes -> Template //in wpadmin page\nWordpress: Routing\n\tUse Template: get_template_part(path, null, table args)\n\t\tIn Template: $args[key]\n\tChange Url: wp_redirect(url)\n\tBase Url: $args[\"base\"] -> relUrl%_%\n\n\tAdd QueryVar: add_filter(\"query_vars\", \"funcName\") //in functions.php\n\t\tfunction funcName($qvars)\n\t\t\t$qvars[] = \"varName\"\n\t\t\treturn $qvars\n\tApply QueryVar: ?queryVar=value //for url end\n\tGet QueryVar: get_query_var(\"queryVar\") -> str\n\nWordpress: Javascript\n\tAdd JS File: wp_enqueue_script(\n\t\t\"name\", get_template_directory_uri(), \"jsPath\",\n\t\t[prereqNames], versionNum, true\n\t) //in functions.php, update versionNum\n\tIs Page: is_page(\"pageType\") -> bool\n\tIs Single Post: is_singular(\"postType\") -> bool\n\tIs Category: in_category(\"categorySlug\") -> bool\n\nWordpress: Sanity\n\tText Only: esc_html()\n\tAttributes: esc_attr()\n\tUrl: esc_url()\n\tAllow Some HTML: wp_kses_post()\n\nBootstrap: Icons\n\t<i class=\"bi bi-iconName\"></i>\n\nBootstrap: Nav Tabs\n\t<ul> class(nav nav-tabs) role(tablist)\n\t\t<li> class(nav-item)\n\t\t\t<button> \n\t\t\tid class(nav-link active)\n\t\t\tdata-bs-toggle(tab)\n\t\t\tdata-bs-target(#targetID)\n\t\t\tdata-href(#urlID) aria-controls(urlID)\n\t\t\ttype(button) role(tab)\n\n\t<div> class(tab-content)\n\t\t<div> id class(tab-pane fade show active)\n\t\trole(tabpanel) aria-labelledby(tabID)\n\nBootstrap: Carousel Slider\n\t<div carousel carousel-dark slide>\n\tid\n\tdata-bs-ride: carousel\n\t\t<ul carousel-inner>\n\t\t\t<li carousel-item active>\n\n\t\tButton: <button carousel-control-prev>\n\t\ttype: button\n\t\tdata-bs-target: #carouselID\n\t\tdata-bs-slide: prev\n\t\t\t<span carousel-control-prev-icon>\n\t\t\taria-hidden: true\n\nBootstrap: Modal\n\tOpen Button: <button btn btn-primary>\n\ttype: button\n\tdata-toggle: modal\n\tdata-target: #modalID\n\n\tModal: <div modal fade>\n\tid\n\trole: dialog\n\ttabindex: -1\n\taria-hidden: true\n\t\t<div modal-dialog>\n\t\trole: document\n\t\t\t<div modal-content>\n\t\t\t\t<div modal-header>\n\t\t\t\t\tExit Button: <button close>\n\t\t\t\t\ttype: button\n\t\t\t\t\tdata-dismiss: modal\n\t\t\t\t\taria-label: Close\n\t\t\t\t\t\t<span> &times; </span>\n\t\t\t\t\t\taria-hidden: true\n\t\t\t\t<div modal-body>","cs\\javascript.txt":"Math\n\tMax Int: Number.MAX_SAFE_INTEGER\n\tMin: .min(num1, ...) -> number\n\tAbs: .abs(num) -> number\n\tFloat -> Int: .floor(float) -> int\n\nString\n\tLen: .length\n\tSubstr: .substring(start, end) -> str[start, end)\n\tSplit: .split(delimiter) -> arr[str]\n\tContains: .includes(str) -> bool\n\tIndexOf: .indexOf(str) -> int .lastIndexOf(str) -> int\n\tNo Lead/End Space: .trim() -> str\n\tInterpolation: `$(var)`\n\n\tParseInt: parseInt(str) -> int\n\tParseFloat: parseFloat(str) -> float\n\tStr -> Int: .charCodeAt(index) -> int\n\tInt -> Str: .fromCharCode(int) -> str\nArray\n\tlet arr = []\n\tlet arr = new Array(len)\n\t\tAccess / Edit: [i]\n\t\tLen: .length\n\t\tAdd: .push(val)\n\t\tContains: .includes(val) -> bool\n\t\tIndexOf: .indexOf(val) -> number\n\t\tClone: [...arr] -> clone\n\t\tSort: .sort(compareFunc(compare, compareTo));\n\t\tForEach: .forEach(func(element))\n\t\tMap: .map((val) => {newVal}) -> arr\n\t\tFilter: .filter(func(val) -> bool) -> arr //only include true\nObject\n\tlet obj = {}\n\t\tAdd / Access / Edit: [\"key\"] = val\n\t\tContains Key: key in obj\n\t\tRemove: delete obj[\"key\"]\n\t\tIteration: for (let key in obj) {}\n\t\tClone: {...obj} -> clone\n\t\tMap: Object.entries(obj) -> array[[key, val]]\n\t\t\t.map(([key, val]) => {})\nEnum\n\tCreate: export const EnumName = { KEY: 0, ... }\n\tAccess: EnumName.KEY -> number\n\nStack\n\tlet stack = []\n\t\tPush: .push(val)\n\t\tPop: .pop() -> val\n\t\tTop: [stack.length - 1]\nOOP\n\tclass ClassName {\n\t\tProps: private propName;\n\t\tConstructor: constructor(params} {}\n\t\tGet: get propName() {}\n\t\tSet: set propName(val) {}\n\t\tMethod: public methodName(params) {}\nInheritance\n\tclass subClass extends superClass {}\nAsynchronous\n\tasync funcName() {} -> promise //undef til ready\n\t\treturn new Promise(function(resolve, reject) {});\n\t\t\tresolve(res) //accept\n\t\t\treject(err) //decline\n\t\t.then(func(data), func(err))\n\tWait Res: await funcName()\n\tWait Multi: await Promise.all(list[promise]) -> list[res]\nExceptions\n\ttry {\n\t} catch (errType) {\n\t} finally {}\n\n\tclass ErrorName extends Error {\n\t\tconstructor(msg) { super(msg); }\n\tthrow new ErrorName(msg);\n\nTypeScript\n\tAssign: varName: datatype = val\n\tFunction: function funcName(param: datatype): returnType {}\n\tFunction Type: func: (param: paramType) => returnType\n\tObj: interface interfaceName { keyName: valType; optionalName: valType; }\n\tObj Any Key: { [key: keyType]: valType; }\n\tType Alias: type TypeName = string | number\n\tEnum Create: enum EnumType { Key1, ... }\n\tEnum Access: EnumType.Key1\n\n------------------------------------------------------------------------------------\n\nWeb: Elements\n\tGet Element: document.querySelector(\"cssSelector\") -> element\n\tGet Element: document.getElementById(\"ID\") -> element\n\t\tParent: .parentNode -> element\n\t\tChildren: E\n\t\tAdd Child: .appendChild(element)\n\t\tClasses: .classList\n\t\t\tAdd: .add(\"class\")\n\t\t\tRemove: .remove(\"class\")\n\t\t\tToggle: .toggle(\"class\")\n\t\t\tContains: .contains(\"class\")\n\t\tStyles: .style.propName -> str\n\n\t\tHTML: .innerHTML -> str\n\t\tText: .innerText -> str\nWeb: Events\n\tAdd Event: element.addEventListener(\"eventName\", func(event))\n\t\tGet Element: event.target -> element\n\nJQuery\n\tAccess Element: $(\"selector\") -> element\n\t\tAdd Event: .click(func(e)) //dont use arrow func\n\t\t\tAccess Self: $(this)\n\t\tToggle Class: .toggleClass(\"className\")\nJQuery: Ajax\n\tE\n\n-------------------------------------------------------------------------------\n\nNode\n\tPackage.json: npm init -y\n\tInstall: npm install lib\n\tGet Version: npm show lib version\nImport / Export\n\timport { item } from \"path\";\n\texport item;\npackage.json\n\tEntryPoint: .main\n\tScripts: .scripts -> { \"name\": \"code\" }\n\tKeywords: .keywords -> list\n\tDependencies: .dependencies -> { \"name\": \"version\" }\n\t\t.devDependencies\n\tApi Server: .proxy -> str\n\nWait\n\tsetTimeout(func, int ms)\nfs\n\tRead: .readFileSync(file, \"utf-8\") -> str | Buffer\n\tRead Async: .readFile(file, \"utf-8\", func(err, data))\n\tWrite: .writeFileSync(file, str text, configObj)\n\tWrite Async: .writeFile(file, str text, configObj, func(err))\n\t\tAppend Mode: configObj.flag: \"a\"\n\n\tBuffer -> Json: JSON.parse(Buffer.toString())\nnavigator.clipboard\n\tCopy To Clipboard: .writeText(str) -> promise<>\nDownload File\n\tCreate Url:\n\t\tnew Blob([data], { type: \"text/plain\" }) -> blob\n\t\tURL.createObjectURL(blob) -> url\n\tDownload By <a>:\n\t\tdocument.createElement(\"a\") -> element\n\t\t\tSet URL: .href = url\n\t\t\tSet Filename: .setAttribute(\"download\", \"filename\")\n\t\t\tDownload: .click()\nPlay Audio\n\tSetup: document.createElement(\"audio\") -> audio\n\t\tSet URL: .src = \"audioPath\"\n\t\tVolume: .volume -> float\n\t\tEnded Event: .onEnded -> func\n\t\tReset Time: .currentTime = 0\n\t\tPlay: .play()\n\nAWS S3: Video Storage\n\t//go to AWS s3 website & create bucket\n\t//Go to IAM > Users by finding \"Users\" in search bar\n\t//Add user: (attach policies directly, AmazonS3FullAccess)\n\t//Select new user, go to \"Security credentials\" -> \"Access keys\"\n\t//Create access key: (Application running outside AWS)\n\t//Save \"Access key\" & \"Secret access key\" somewhere\n\tnpm install aws-sdk\n\n\tCredentials -> Env Vars:\n\t\tLocal Set: set ACCESS_KEY=accessKey //in command prompt, only lasts a session\n\t\tVercel Set: Vercel Proj Page -> Settings -> Environment Variables -> (Add ACCESS_KEY)\n\t\tGet: process.env.ACCESS_KEY -> accessKey //in js\n\t\t\n\t\tView Env Vars: set\n\tConnect:\n\t\t\"aws-sdk\": AWS\n\t\tAWS.config.update({\n\t\t\taccessKeyId: \"\"\n\t\t\tsecretAccessKey: \"\"\n\t\t\tregion: \"regionSlug\"\n\t\t})\n\t\tnew AWS.S3() -> s3\n\tGet Video URL:\n\t\ts3.getSignedUrl(\"getObject\", {\n\t\t\tBucket: \"bucketName\",\n\t\t\tKey: \"objectKey\".\n\t\t\tExpires: secs\n\t\t}) -> url\n\n---------------------------------------------------------------------------\n\nReact: Create React\n\tCreate Proj: npx create-react-app <projName> //in powershell\n\tInstall Dependencies: npm install\n\tRun: npm start\nReact: Github Deploy\n\tnpm install gh-pages --save-dev\n\t//in package.json:\n\t\t\"homepage\": \"http://<username>.github.io/<reposName>\"\n\t//in package.json in \"scripts\":\n\t\t\"predeploy\": \"npm run build\",\n\t\t\"deploy\": \"gh-pages -d build\"\n\tgit init\n\tgit add .\n\tgit commit -m \"first commit\"\n\tgit branch -M main\n\tgit remote add origin <reposURL>.git\n\tgit push -u origin main\n\tnpm run deploy\nReact: Proj Format\n\tpublic: static assets, htmls\n\tsrc: source code\n\nReact: Import / Export\n\timport defaultItem from \"lib\"\n\t\texport default function MainFunc() {}\n\timport { item } from \"lib\"\n\t\texport function MainFunc() {}\n\timport \"cssFile\"\nReact: Components\n\tDefine Comp: CompName(obj props) {}\n\t\tChildren: props.children -> list\n\t\tClasses: props.className -> str\n\t\tStyles: props.style -> obj\n\tCompName.defaultProps = obj\nReact: Conditional Rendering\n\t{bool && <element>}\n\nReact: useState\n\tCreate: const [varName, updateFunc] = useState(defaultVal)\n\tUpdate: updateFunc(newVal)\n\tUpdate: updateFunc((currVal) => {}) //ref types: always create new\nReact: useRef\n\tCreate: const ref = useRef(default);\n\t\tValue: .current -> val\n\tSet Ref: element.ref={ref}\n\tSet Ref Callback: element.ref={func(element)}\n\n\tRef List: const ref = useRef([])\n\tAdd Ref List: element.ref={func(element)}\n\t\tref.current.push(element)\nReact: useEffect\n\tCreate: useEffect(func -> closeFunc, [stateVars]) //runs on comp add/remove & stateChange\n\t//can use DOM manipulation inside\n\nReact: createContext & useContext\n\tCreate: export const ContextName = createContext(default) //outside comp\n\tGive:\n\t\t<context.Provider value={val}>\n\t\t\t<compName /> //share with comp\n\tAccess:\n\t\timport { ContextName } from \"parentFile\"\n\t\tuseContext(context) -> val\n\nReact: public\n\tAccess From Comp: process.env.PUBLIC_URL + \"/\"\n\tAccess From Css: url(\"/public/\")\n\tAccess From Html: \"%PUBLIC_URL%/\"\n\nReact: fetch\n\tfetch(\"url\", reqObj) -> promise\n\t\t.then(func(res)) //run on req done\n\t\t\tres.json() -> promise\n\t\t\tres.ok -> bool\n\t\t\tres.status -> int\n\t\t.catch(func(error)) //run on err\n\n\t\tMethod: reqObj.method: \"GET\"\n\t\tReq Body: reqObj.body -> str\nReact: axios\n\tSetup: .create({ baseURL: base })\n\t\tGet .get(url) -> promise(res)\n\t\t\tRes Data: res.data -> any\n\t\tPost: .post(url, obj body) -> promise(res)\n\nReact: Routing\n\t//wont work in gh-pages. use HashRouter\n\t//in index.js\n\treact-dom/client: { createRoot }\n\treact-router-dom: { createBrowserRouter, RouterProvider, Link }\n\n\tCreate Router: createBrowserRouter([\n\t\t{ path: \"/path\", element: <Comp /> }\n\t]) -> router\n\tUse Router: createRoot(document.getElementById(\"root\")).render(\n\t\t<RouterProvider router={router} />\n\t)\n\tLink: <Link to=\"/path\"> Text </Link>\nReact: Redirect\n\treact-router-dom: { useNavigate }\n\n\tSetup: const navigate = useNavigate() //in comp start\n\t\tRedirect: (\"relUrl\")\nReact: HashRouter\n\t//in index.js\n\treact-dom/client: ReactDOM\n\treact-router-dom: { HashRouter, Routes, Route }\n\t\n\tCreate HashRouter:\n\t\t<HashRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"url\" element={<Comp />} />\n\tUse HashRouter:\n\t\tReactDOM.createRoot(document.getElementById(\"root\")) -> root\n\t\t\t.render(hashRouter)\n\nReact: Icons\n\tInstall: npm install react-icons --save\n\tImport: import { IconName } from \"react-icons/dirName\"\n\nReact: Typescript\n\tInput Element: HTMLInputElement\n\tComp Children: React.ReactNode\n\tUseState: useState<T>(default)\n\tUseState Setter: React.Dispatch<React.SetStateAction<T>>\n\tUseRef: useRef<TargetType>\n\nNext: Create Proj\n\tCreate: npx create-next-app@latest\n\tRun: npm run dev\nNext: Vercel Deploy\n\tGithub: Select allowed repositories https://vercel.com/new\n\nNext: CSS Modules\n\tClass Only: CssName.module.css\n\tAccess Public: url(\"/\") //in css\n\t\n\tImport Module: import styles from \"modulePath\"\n\tUse Class: element.className={styles.className}\nNext: API\n\tCreate Endpt: In (/pages/api/index.js)\n\tCall Endpt: fetch(\"/api\")\n\n\texport default function HandlerName(req, res) => {}\n\t\tGet Method: req.method -> str\n\t\tReq Body: req.body -> any\n\n\t\tSet Status: res.status(code)\n\t\tReturn Json: res.json({})\n\t\tReturn Text: res.send(str)\n\n\tGet Root Dir: process.cwd()\n\nNext: Rendering\n\tBuild Time: export async function getStaticProps()\n\t\treturn { props: { key: val } }\n\tReq Time: export async function getServerSideProps()\nNext: Components\n\tClient Comp: \"use client\" //on top\nNext: Fetch\n\tDisable Cache: await fetch(url, { cache: \"no-store\" })\n\nNext: Routing\n\tRoute Content: page.js\n\tRoute Layout: layout.js //applies to children\n\t\texport default function Layout({ page }) {}\n\tAPI Routes: pages/api/index.js\n\tDynamic API Routes: [param].js\n\t\tGet Param: req.query -> param\nNext: Dynamic Pages\n\tDynamic Route: [paramName]\n\texport default function Page({ params })\n\t\tparams.paramName\n\nNext: Head (next/head)\n\t<Head></Head>\nNext: Link (next/link)\n\t<Link href=\"url\"> Text </Link>\nNext: Image (next/image)\n\t<Image src alt />\n\nNext: useRouter (next/navigation)\n\tuseRouter()\n\t\tGo Url: .push(url)\nNext: API Video\n\tServer (fs from \"fs\")\n\t\tGet Vid: fs.readFileSync(process.cwd() + \"/path\") -> video\n\t\tSet Format: res.setHeader(\"Content-Type\", \"video/mp4\")\n\t\tSend: res.send(video)\n\t\tAllow Large Data: export const config = { api: { responseLimit: false } }\n\tClient\n\t\tGet Vid: res.blob() -> promise<blob>\n\t\tCreate Url: URL.createObjectURL(blob) -> url\n\nNext: Errors\n\tComponents Not Rendering: Usage of wrong page.tsx\n\tTypeError: __webpack_modules__: Delete .next directory & npm install\n\tdoes not satisfy constraint [x: string]: never: Only export interfaces\n\tProps [x: string: never] error: Disable typescript strictness\n\t\tIn next.config.js: module.exports = { typescript: { ignoreBuildErrors: true } }\n\nExpress & React -> Firebase\n\t/client: create react app\n\t/server: add express (install & package.json)\n\tRemove Repo: remove and copy client dir\n\t/client/package.json: set proxy to server localhost\n\t/server/server.js: set localhost\n\t/server/package.json: set main to server.js\n\n\tCreate firebase project\n\tCreate web app\n\tGo to build/hosting -> get started\n\tInstall firebase: npm install -g firebase-tools\n\tLogin: firebase login\n\n\tIn /server: create firebase.json\n\tIn /server: firebase init\n\tConfigs (functions, use existing, public, no, no)\n\tIn /server/functions/package.json: set main\n\tIn /server/functions/server.js: const functions = require(\"firebase-functions\")\n\tIn /server/functions/server.js: exports.api = functions.https.onRequest(app)\n\tIn /server/functions/server.js: remove app.listen()\n\tIn /server: firebase deploy\n\n\tIn /client: firebase init\n\tConfig (1st hosting, use existing, build, no, no, no)\n\tIn /client: npm run build\n\tIn /client firebase deploy\n\t\n\tnpm install cors\n\tIn /server/functions/server.js: const cors = require(\"cors\");\n\tIn /server/functions/server.js: app.use(cors())\n\nexpress\n\texpress()\n\t\tAssign Client: .use(\n\t\t\texpress.static(path.join(__dirname, path))\n\t\t)\n\t\tGet: .get(\"/endpt\", func(req, res))\n\t\t\tres.status(code).send(\"msg\")\n\t\t\tres.send(data)\n\t\tMiddleware: .use(path, func(req, res, next))\n\t\t\tGo Next Middleware: next()\n\t\tStart: .listen(portNum)\n\nmongodb.MongoClient\n\tnew MongoClient(url)\n\t\tConnect: .connect() //async\n\t\tDb: .db(dbName)\n\t\t\tCollection: .collection(collectionName)\n\t\t\t\tGet Entry: .findOne(obj query) //async\n\t\t\t\t\tField: [\"key\"] -> val\n\t\t\t\tAll Entries: .find({}).toArray() //async\n\t\t\t\tAdd: .insertOne(obj) //async\n\t\t\t\tEdit: .updateOne(obj query, obj update) //async\n\t\t\t\t\tupdate.$set: { \"key\": \"val\" }\n\t\tClose: .close()\n\nHTML\n\t<button> (onClick)\n\t<input> (onChange, onFocus)\n\t\tinput.size={strLen} //must be >= 1\n\t<video> (onTimeUpdate, onEnded)\n\t\t.currentTime\n\t\t.duration //total time\n\t\t\tInitializes as NaN, check with isNaN()\n\t<input type=\"range\"> (onChange)\n\t\t.value //(0-100)","jobs\\documents.txt":"Resume: General 8-10\n\thttps://docs.google.com/document/d/1j_BkZ4BtdzSt0oE4azpq6vGh8z_h_b0eOAU_eEdq6jw/edit\n\nResume: Web / Mobile 8-11\n\thttps://docs.google.com/document/d/1m6ZuiEATsDiRJCxIIBvHKuOObOHg3phl-e6SSzqQvyg/edit\n\nResume: App Dev 8-11\n\thttps://docs.google.com/document/d/1XCYprWEwIw2e_Ct8-KD6ViX1NrBqK6YexfpN7BU2kq4/edit\n\nCover Letter: General 7-20\n\thttps://docs.google.com/document/d/1G13WDXBgoN9LryOQsj5f6xu5Od3YBy3i_sgXgNQnY5c/edit\n\nCover Letter: Frontend 8-4\n\thttps://docs.google.com/document/d/1KafvZzGzve6iq-7HqpGluNXyA890O0sU0WNGfmxY5ts/edit","jobs\\resources.txt":"Job Search:\n\tHandshake\n\t\thttps://nyu.joinhandshake.com/stu\n\n\tLevels\n\t\thttps://www.levels.fyi/?compar\n\n\tIndeed\n\t\thttps://www.indeed.com/\n\n\tLinkedin\n\t\thttps://www.linkedin.com/jobs/\n\n\tIdealist\n\t\thttps://www.idealist.org/en\n\n\tBuiltinny\n\t\thttps://www.builtinnyc.com/\n\n\tNYU Experiental Learning\n\t\thttps://www.nyu.edu/students/student-information-and-resources/career-development-and-jobs/find-a-job-or-internship/experiential-learning.html\n\nDocuments\n\tHandshake Documents Guide\n\t\thttps://nyu.joinhandshake.com/stu/articles/12279\n\n\tVMock Resume\n\t\thttps://www.vmock.com/dashboard/resume\n\n\tSample Resumes\n\t\thttps://docs.google.com/document/d/1XTGT4QmCwtRcgVhbKvQVajm_YA3MMo5uGsR_PqRAZqo/edit\n\n\tCover Letter Guide: https://docs.google.com/document/d/1BgZqHN0Fs5NlOZ1nAcAVQlOmjuTDBBBydM2FeXbdMmg/edit\n\nInterview\n\tHandshake Appointment (Mock Interviews)\n\t\thttps://nyu.joinhandshake.com/stu/appointments\n\n\tNYU Big Interview\n\t\thttps://nyu.biginterview.com/members/dashboard\n\n\tInterview Guide Doc\n\t\thttps://docs.google.com/document/d/1VL5uv_gnDtOpNdMg4Nu2Acm3jWx0OeKWYVw8ELTMyu8/edit\n\nNetworking\n\tViolet Network: https://violetnetwork.nyu.edu/hub/nyuwide/home-v3\n\n\tNetworking guide: https://docs.google.com/document/d/1GFJZBm14wX8EbbjtDVmMsgPM2X8owBug-v6nEmAnokk/edit#heading=h.okqxu4164l9j\n\n\tIndustry Guide: https://docs.google.com/document/d/1O92Yqboo_4Vlrp7nbvcFi6O2hJttKIbchmxa1UrCNrc/edit\n\nEvents\n\tHandshake NYU\n\t\thttps://nyu.joinhandshake.com/stu/events?collection=ALL&eventFormat=HYBRID&sort=RELEVANCE&date=ALL\n\nHackathons\n\tDevpost\n\t\thttps://devpost.com/settings/notifications","cs\\shell.txt":"Powershell: Comments\n\t# comment\nPowershell: Cmdlets\n\thttps://www.powershellgallery.com/\nPowershell: Run\n\tAllow Execution: Set-ExecutionPolicy RemoteSigned //in admin mode\n\tExecute: ./file\n\nPowershell: Variables\n\tCreate: $var = \"val\"\n\tAccess: $var\n\tGet Type: $var.GetType().FullName\n\n\tData Types: (str, int, float, $true, $null)\n\tOperators: (-eq -ne -gt -lt -ge -le)\nPowershell: Pipelines\n\tPipe: Cmdlet1 | Cmdlet2 //output1 -> input2\nPowershell: If & For\n\tIf: if (-not (condition)) {}\n\tFor: for ($i = 1; $i -le 5; $i++) {}\n\tForeach: foreach ($item in $collection) {}\nPowershell: Input\n\tInput: Read-Host -Prompt \"msg\" -> str\nPowershell: Exit\n\texit EXITCODE\n\nPowershell: String\n\tLen: .Length -> int\n\tEquals: STR1 -eq STR2 -> bool\n\tString Embed: \"$($var)\"\nPowershell: Array\n\tCreate: @(\"item1\", ...)\n\t\tAccess: [index]\nPowershell: Hashtable\n\tCreate: @{ \"key\" = \"val\" ... }\n\t\tAccess: [\"key\"]\n\nPowershell: File\n\tFile Read: Get-Content -Path PATH -> str\n\tFile Write: Set-Content -Path PATH -Value STR\nPowershell: Json\n\tStr -> Json: ConvertFrom-Json -InputObject STR -> json\n\t\tAdd Pair: | Add-Member -MemberType NoteProperty -Name KEY, -Value VAL\n\t\tAccess / Edit Val: .KEY\n\tJson -> Str: ConvertTo-Json -InputObject JSON -depth MAXDEPTH\n\nMakeFile: Print\n\tPrint Outside Target: $(info val)\nMakeFile: Variables\n\tCreate: var = val\n\tCreate: var := val\n\tAccess: $(var)\n\tCall Cmds: $(COMMAND) -> return\nMakeFile: Globals\n\tCurr Dir: $(PWD)\n\tMake Target: $@\n\tMake Flags: $(MFLAGS)\n\nMakeFile: If\n\tifeq (val1, val2) ...\n\t\tDefined: ifdef var\n\telse ...\n\tendif\nMakeFile: Loops\n\t$(foreach element, list, cmd)\nMakeFile: Lists\n\tCreate: list := val1 ...\n\tFilter: $(filter-out remove, list)\nMakeFile: Strings\n\tReplace: $(subst find, replace, str) -> str\n\tReplace: $(patsubst pattern, replace, str) -> str\n\t\t%: any str\n\tPathTop Only: $(notdir PATH)\n\nMakeFile: Import\n\tPaste: include makePath\n\tCall: $(MAKE) -C makeDir\n\tCall Perl: $(shell perlPath -f arg)\n\tCall In CLI: make -f PATH TARGET\n\tCreate Env Var For Children: export var\nMakeFile: Targets\n\tTarget: targetName: dependency1, ...\nMakeFile: Commands\n\t-: Ignore errs\n\t@: Do not display cmd\n\t\\: Shell cmd newLine\n\t;\\: Shell cmd end\n\tGet Shell Output: $(shell CMD) -> output\n\tGet Shell Output: `CMD` -> output\nMakeFile: Errors\n\t*** missing separator: indentation/formatting error\n\nShell: Output\n\tPrint: echo val\n\tPrint In Makefile: echo val ;\\\nShell: Variables\n\tCreate: var = val\n\tAccess: $var\n\tAccess In Makefile: $$var\nShell: Redirection & Pipes\n\tFile -> Input: cmd < file\n\tOutput -> File: cmd >> file\n\tOutput -> Input: cmd1 | cmd2\nShell: If\n\tif test_command; then ...\n\t\tEq: val1 = val2\n\t\tDir Exists: -d path\n\t\tSymLink Exists: -h path\n\telse ...\n\tfi\n\n\tIn Makefile: if [[ test_command ]] ; then \\\n\telse \\\n\tfi ;\\\nShell: Loops\n\tfor val in ${list} do ...\n\tdone\nShell: Strings\n\tConcatenation: str1str2\n\tInterpolation: \"${var}\"\n\tWildcard: *\"str\"*\nShell: Array\n\tCreate: arr = (val1 ...)\n\tAccess: ${arr[index]}\nShell: Table\n\tCreate: declare -A table\n\tSet: table[key] = val\n\tGet: ${table[key]}\nShell: Commands\n\tCreate SymLink: ln -s filePath linkPath\n\tGet Perl Output: $(shell perlPath -all cmdLineArg)\n\tReplace: sed \n\tForeach Children Recursive: find DIR -type f -exec CMD({}: file)\n\tFind In List Containing Substr: grep \"substr\"\n\tList Filter: $(filter-out removeVal list) -> newList\n\nPerl: Input / Output\n\tSet Env Var (Shell): key=\"val\" perl file.pl\n\n\tGet Env Var: $ENV{\"key\"} -> val\n\tGet Env Var: use Env qw(envName)\n\tGet Cmd Line Arg: @ARGV -> array\n\tGet Cmd Line Arg: shift -> arg1 //move to next arg after\n\tOutput: print str;\n\tThrow Error: die \"msg\"\nPerl: Variables\n\tCreate: my $var = val\n\tAccess: $var\nPerl: Strings\n\tInterpolation: \"$str\"\n\tLiteral String: 'str'\n\tReplace: $str =~ s/FIND/REPLACE/\n\tArray Join: join(delimiter, @arr)\n\tRemove End Newline: chomp $str\nPerl: Array\n\tCreate: my @arr = ()\nPerl: Table\n\tCreate: my %table = (key1, val1, key2, val2, ...)\n\nPerl: Conditionals\n\tUnless: unless (falseCondition) {}\n\tIf: if (trueCondition) {}\n\t\tEquals: obj1 eq obj2\n\t\tRegex Equals: $str =~ expression\n\tElse If: elsif (trueCondition) {}\nPerl: Loops\n\tForEach: foreach $val (@arr) {}\n\nPerl: Commands\n\tCall Cmd: `CMD` -> output\n\nAnt: Build File\n\tProject: <project name= default=\"compile\"> </project>\n\t\tTarget: <target name=\"compile\" depends=\"clean\"> </target>\n\t\t\tCreate Dir: <mkdir dir= />\n\t\t\tDelete Dir: <delete dir= />\n\t\t\tCompile Java: <javac\n\t\t\t\tsrcdir=\"path\"\n\t\t\t\tdestdir=\"path\"\n\t\t\t\tincludes=\"pattern\"\n\t\t\t\texecutable=\"javacPath\"\n\t\t\t\tclasspath=\"dependenciesPath\"\n\t\t\t/>\n\n\t\t\tPrint: <echo message=\"msg\" />\n\t\t\tGet File List: <fileset dir=\"path\" includes=\"patterns\" />\n\t\t\tRecursive Delete: <deltree dir=\"path\" />\n\n\tCreate Prop: <property name=\"propName\" value=\"val\" />\n\tLoad Props: <property file=\"file.properties\" />\n\tAccess: \"${propName}\"\nAnt: Flags\n\tSpecify BuildFile: -buildfile file\n\tSearch Upwards For BuildFile: -find file\n\tSet Var: -Dprop_name=value\n\tLess Info: -quiet\n\tMore Info: -verbose\n\tDebug Info: -debug\n\tSilent: -silent\n\tPrint All Targets: -projecthelp\n\nAnt-Contrib\n\tImport In BuildFile: <taskdef resource=\"propsFile\">\n\t\t<classpath> </classpath>\n\t\t\t<pathelement location=\"jarFile\" />","secure\\passes.txt":"Important Pass\n\tBlackTeslaCar137!\nUnimportant Pass\n\tBlackPiano0#6\nOld Passes\n\tBlackmgial5%\n\nSantander\n\tCard Number: 5129 9152 6743 0613\n\tUsername: sak9725@nyu.edu\n\tPassword: BlackTeslaCar8642!\nRobinhood\n\tEmergency Code: 252649253609\nTIAA\n\tUser ID: sewonkim0\nOrange Theory\n\tUsername: sewonkim0black@gmail.com\n\tPassword: BlackPiano0#6\nUbuntu\n\tUsername: sewonkim\n\tPassword: BlackPiano0#6\nFAFSA\n\tBackup Code: NQSPYXR3U34Y\nJuwon Kim Collegeboard\n\tSecurity Phrase: \"Lurks\"\n\tPassword: <School Password>#\nMinecraft\n\tUsername: Jinhuchung101@outlook.com\n\tPassword: jhc10272004\nSynapse\n\tUsername: xJames\n\tPassword: sewonkim0","QuickNotes3\\audio-canvas.txt":"Tasks\n\tHomepage design\n\t\tGet contents: (\n\t\t\tIntro: (slogan) (music streaming/distribution/composition)\n\t\t\tAbout: (music streaming, upload no cost, privacy/security, develop)\n\t\t\tAlbum view preview\n\t\t\tVideo view preview\n\t\t\tComing soon: editor\n\t\t\tDevelopers: mini profile\n\t\t)\n\t\tPlan: (\n\t\t\tNavbar: (About, Albums, Videos, Editor, More)\n\t\t\tIntro: img bg (Create, Share, Listen)\n\t\t\tAbout: left navbar + display (video, title, description), starry background\n\t\t\tAlbum: Interactive diagram, unfolding animation\n\t\t\tEditor: Coming Soon! flat.io credit\n\t\t\t\tSvg background\n\t\t\tProfile: (\n\t\t\t\tImage, name, socials\n\t\t\t\tbio, other projs icon grid\n\t\t\t)\n\t\t)\n\t\tGet Style: (artistic/modern)\n\t\tLayout: (sections, navbar)\n\tHomepage Implement\n\t\tFinish intro section\n\t\t\tResolve browser extra width bug\n\t\timplement smooth scroll\n\n\t\tCreate page transition (sliding paper)\n\n\tCleanup code:\n\t\tSplit up functionalities\n\n\tsetup display\n\t\teighth bar implementation\n\t\t\tGroup: Create implementation (8, 16, 32)\n\t\t\t\tMust be (8, 16, 32)\n\t\t\t\tCannot link if next (isLeader)\n\t\t\tGroup: get curr & next pt positions\n\t\t\tCreate svg\n\n\tfilm videos (eve anoko secret, delayed opening)\n\tedit & compress videos\n\tstore on aws s3\n\tupdate videos.json\n\n\tsetup input","jobs\\tracker.txt":"Resume: General 8-10\n\thttps://docs.google.com/document/d/1j_BkZ4BtdzSt0oE4azpq6vGh8z_h_b0eOAU_eEdq6jw/edit\n\nResume: Web / Mobile 8-21\n\thttps://docs.google.com/document/d/1m6ZuiEATsDiRJCxIIBvHKuOObOHg3phl-e6SSzqQvyg/edit\n\nResume: App Dev 8-11\n\thttps://docs.google.com/document/d/1XCYprWEwIw2e_Ct8-KD6ViX1NrBqK6YexfpN7BU2kq4/edit\n\nCover Letter: General 7-20\n\thttps://docs.google.com/document/d/1G13WDXBgoN9LryOQsj5f6xu5Od3YBy3i_sgXgNQnY5c/edit\n\nCover Letter: Frontend 8-4\n\thttps://docs.google.com/document/d/1KafvZzGzve6iq-7HqpGluNXyA890O0sU0WNGfmxY5ts/edit\n\nDemanded Knowledge\n\tWeb fundamentals\n\tJavascript detailed system\nDemanded Skills\n\tSwift, SwiftUL\n\tReact Native\n\tLAMP stack development?\nDemanded Projects\n\tPython / AI\n\tMobile\n\tJava application design\n\nNot Applied\n\tHandshake\n\t\thttps://nyu.joinhandshake.com/stu/saved_jobs\n\tLinkedin\n\t\thttps://www.linkedin.com/my-items/saved-jobs/\n\tIndeed\n\t\thttps://myjobs.indeed.com/saved\n\tLevels.fyi\n\t\tCarrier: https://www.levels.fyi/jobs/company/carrier/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=117528852126671558\n\t\tPalantir: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=139629633516511942\n\t\tJPMorgan: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=131475758095704774\n\t\tMastercard: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=137536852719477446\n\t\ti-Link: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=15&standardLevels=internship%2Centry&jobId=85444456032936646\n\t\tStark Tech: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=15&standardLevels=internship%2Centry&jobId=115924345760424646\n\t\tExtreme Reach: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=15&standardLevels=internship%2Centry&jobId=137421414064890566\n\tOthers\n\t\tLBMC intern: https://lbmcpc.applytojob.com/apply/noNEgK7Oj4/IT-Audit-Internship-Winter-2024?source=LINKR\n\nApplied\n\tHandshake\n\t\tReact developer\n\t\tParamount: SWE\n\t\tShopTaki: AI\n\t\tShopTaki: FrontEnd\n\t\tUrsaTech: SWE\n\t\tPIMCO: Analysi: https://nyu.joinhandshake.com/stu/jobs/8108533?utm_source=job_recommendation_mailer&utm_medium=email&utm_campaign=email\n\t\tLifeSci Intern: https://nyu.joinhandshake.com/stu/jobs/6926996\nhttps://lifesci.nyc/student-application#apply\n\t\tInvictech Mobile Dev: https://nyu.joinhandshake.com/stu/jobs/8012397\n\t\tCenturion SWD: https://nyu.joinhandshake.com/stu/jobs/7305406\n\t\tEitacies Java Dev: https://nyu.joinhandshake.com/stu/jobs/7894468\n\tLinkedin\n\t\tRevature SWE: https://www.linkedin.com/jobs/view/3676889251/?refId=EdxkrBW4nL69%2BtkwiiGOiA%3D%3D&midToken=AQEsq2Y0KbXSYQ&midSig=3am0vV7vCcjWU1&trk=eml-email_jobs_weekly_saved_jobs_01-saved_jobs-1-wsjr%7Eother%7Esaved%7Ejobs%7Eview%7Ejob%7Ecta&trkEmail=eml-email_jobs_weekly_saved_jobs_01-saved_jobs-1-wsjr%7Eother%7Esaved%7Ejobs%7Eview%7Ejob%7Ecta-null-gkt2k2%7Ellbfably%7E9j-null-jobs%7Eview\n\tIndeed\n\t\tJPMorgan Intern: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?jobId=131475758095704774&standardLevels=internship%2Centry\n\t\thttps://jpmc.fa.oraclecloud.com/hcmUI/CandidateExperience/en/sites/CX_1001/my-profile\n\t\tPepsiCo: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=5&standardLevels=internship%2Centry&jobId=142485628928303814\n\t\tBerkeley Front-End https://www.indeed.com/viewjob?from=app-tracker-saved-applybtn&hl=en&jk=94a3b8ada0dcaa26&tk=1h7ouc0nvh4cs800\n\t\tTMC C#: https://www.indeed.com/viewjob?from=app-tracker-saved-applybtn&hl=en&jk=c8970bf8c339d89b&tk=1h7ouc0nvh4cs800\n\tLevels.fyi\n\t\tRamp: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=76301864779293382\n\tNYU Email\n\t\tPark Proj https://mail.google.com/mail/u/1/#search/park/FMfcgzGtwWGfJPFFLfVfbMSTlpwvKhJK\n\t\tRob Research\n\nInterview\n\tNYU IT Java: https://nyu.joinhandshake.com/stu/postings?page=1&per_page=25&sort_direction=desc&sort_column=default&query=Student%20Developer","cs\\main.txt":"Beautiful Formula\n\tImprovements: (wash & moisterize, earlierWake, coldEyes)\n\tMorning exercise & shower\n\tHair: Balanced length & normal\n\nMotivation\n\tProgression\n\tOrientation\n\tUrgency\n\tPanopticon\nContent Addiction\n\tPrevention: Keep phone away\n\tPrevention: Willpower\n\tPrevention: Jump back to task\n\tCause: Tiredness / disorientation\n\tMitigation: Conscious immediate escape\n\nDebug: Passtive Techniques\n\tCause Unknown: conscious zooming\nDebug: Active Techniques\n\tLack Of Info\n\t\tPrint pts\n\t\tResearch error msg\n\tDeletion Test\n\t\tFind location & cause\n\tRecreate Error\n\t\tEliminate distractions\n\t\tApproach original\n\tUnconscious Assumption\n\t\tSeparate parts\n\t\tWiggle all parts\n\tSurrender\n\t\tAccept workarounds\nDebug: Cognitive Errors\n\tDiversion: attention to diff\n\tHalt: unable to progress zooming\n\tAssumption: misinformation about code\n\nProject\n\tModules wireframe draw\n\tTask List: Split into sprints\n\tPreplanning Formula:\n\t\tOpen-minded\n\t\tTolerant\n\t\tSplit into parts","jobs\\interview data.txt":"DATA\n\nSRI Data\n\tPersonal\n\t\tWhat made you do CS?\n\t\tWhy did you pick SRI?\n\t\tTell me about resume (hackathon)\n\tTechnical\n\t\tTell me about yourself\n\t\tExperience with web dev (front-end, react)\n\t\tExperience with resume items (tensorflow, mongoDB)\n\t\t\tHow may mongo differ with SQL?\n\nNYU Java IT Data: Mistakes\n\tPersonal\n\t\tTell me about yourself\n\tTechnical\n\t\tExperience with SQL\n\n\t\tStringbuilder vs stringbuffer\n\t\tnew String() memory\n\t\tDiff between \"\" & new String()\n\n\t\tEmpty name .java file allowed?\n\t\t.class files: platform independent?\n\t\tJava: Types of memory\n\t\tAll class loader types\n\n\t\tJava: Other libs/frameworks\n\t\tJava 1.8: Added features\n\t\tJDBC database types\n\n\t\tConcept Explanation: Messy Wording\n\t\tCode explanation\n\n-----------------------------------------------------------------------------------------\nMAIN\n\nGeneral: Tell us about yourself / why CS\n\tintro, past\n\tclarinet, musical exp for others: joy, NJMEA\n\tHard coding, it is art, ideas and inspirations\n\tBack on stage, look forward to performing\n\t\tHi, my name is Sewon Kim and it is a pleasure meeting you. First, I would like to tell you a little bit about my past as a musician because I believe it is significant to who I am today.\n\t\tEver since I was a kid, I was fascinated in playing the clarinet. Creating musical expressions with my instrument gave me an irreplaceable sense of joy. Because of this, I actively engaged in musical performance, and even competed with other top clarinet players in my state at the NJMEA all-state auditions.\n\t\tTo me, computer science is more than hard coding; it is a form of art, full of ideas and inspirations. Computer science makes me feel like I'm back on the stage with my clarinet once again. And as a software engineer, I look forward to performing with all of you.\n\nApplication Dev: Tell us about yourself / why CS\n\tIntro\n\n\tArt of creation\n\tClarinet -> joy for musical experiences\n\n\tLike music: App dev more than hard coding\n\tArt: Innovations & ideas -> seamless experience\n\n\tWould be excited about enhancing tech for NYU community\n\tEager to bring perspective & philosophy; asset & team player\n\t\tHi, my name is Sewon and it is a pleasure meeting you today.\n\t\tFrom a young age, I've always been captivated by the art of creation. My journey began with learning how to play the clarinet, where I picked up a joy for creating musical experiences for my audience.\n\n\t\tIn the same way, I believe that application development is more than just hard coding. Much like musical performance, it is a form of art, built of ideas and innovations coming together to craft a seamless experience for the user.\n\n\t\tI would be excited about the opportunity to enhance the technology experience for the NYU community. I am eager to bring my unique perspective & philosophy to your amazing team and I hope to become a great asset & team player at NYU IT.\n\nApp Dev: What experiences make you suitable for this?\n\tCreated Quicknotes3 for myself\n\tHelped me in academic\n\n\tFelt rewarded: cause my creation had innovative\n\tDesire: Help NYU community, give them the experience\n\nTell me about your experience with (Skill)\n\tREST: Express.js & Next.js for video/audio\n\tDatabase: MongoDB & SQLite for metadata & music\nTell me about your (Experience)\n\tHackNYU: Facilitate communication in study groups\n\t\tWeb-based social media: Flask / MongoDB\n\n--------------------------------------------------------------------------------\nPERSONAL\n\nWhat are your strengths and weaknesses?\n\tCollaboration, musician ensembles and hackathon\n\t\tteamwork: Beyond yourself\n\t\tNot only do my part, but also allow others to join in\n\twell-documented, planning shared understanding\nA time I failed\n\tI was overwhelmed with coursework\n\tLearned: Set priorities and organize my schedule\n\t\tDepend on external resources instead of trying to overcome my problems solely through my own effort\n\t\tSmart work > hard work\nWhat makes an ideal team? What makes me an ideal player?\n\tAn ideal team has a clear sense of direction and fully utilizes every member's abilities towards that end. Each member must consider the bigger picture of the team project with as much consideration as they would do with their individual role.\n\t\tMy ability to understand and work in conjunction with other people\n\t\tMy role as a doer, handle the things that others are not necessarily willing to do\n\nHow do you handle pressure?\n\t\tPressure is a double-edged blade\n\tPut emotional biases aside\n\tFocus on the task at hand\nWhat makes you special?\n\tI do not place limits\n\tWhen I wanted to play the clarinet, parents and friends doubted me telling me that those who aren't born with natural talent cannot succeed\n\t\tWhen we're faced with obstacles that exceed our expectations, we tend to get discouraged\n\t\tI have exceled at exceeding the second step\nHow would other people describe you?\n\tMy peers and professors in the field of computer science tell me that I have a good sense of consideration for other people. I make this possible through methods of practical teamwork, such as well-documented code, vigorous code testing, and planning projects with teams from a higher level of view.\n\tHowever, I have a tendency to be overly abiding to conventions, especially when engineering computer algorithms. In order to overcome this shortcoming, I will work to expand my horizons by being more tolerant to new, unfamiliar ideas.\n\nTell me about your most significant accomplishment.\n\nWhat experiences do you have that makes you fit for this role?\n\nWhy did you decide to intern at this company?\n\tI am inspired by SRI's deep history of innovation and non-profit vision\n\tI am aware that your company was responsible for the development of Apple's siri along with the iris security scanner\n\tWould like to apply my knowledge of computer science in order to take part in the various projects within this company.\n\nSituation in which attention to detail was important\n\tOne instance was my development of an application called pyaimbot\n\tRun-time stringent application, attention to optimization was critical to the working program\n\nWhat are your strengths and weaknesses?\n\tStrength: A good team player\n\tAs a musician who has played in group ensembles in the past,\n\tI've grown into software engineer who can integrate with the team\n\tEx 1: Well-documented, readable code\n\tEx 2: Investment to familiarize with codebase\n\tEx 3: Notify & update others when critical decisions\n\n\tStrength: Adaptability\n\n\tWeakness: overly immersed in work -> trouble transitioning\n\tSolution: Organized schedules of tasks\n\n\tWeakness: underestimate time & effort required to complete tasks\n\tSolution: breaking down tasks & workloads into smaller bits\n\nWhat experiences do you have that makes you fit for this role?\n\tA notable experience of mine that makes me fit for this role is my creation of a web application that provides students with a practical and intuitive method of taking notes for their coursework. This application improves the studying habits of all students alike, exponentially boosting their studying capabilities.\n\tSimilarly, I have also worked with a group of 3 computer scientists to create a social media that allows its users to create and engage in study groups, using python's web application framework Flask and Mongo Database.\n\tI believe my experiences are well in conjunction with SRI International's vision creating practical, innovative solutions towards real world problems. Going forward, I would like to join this train of innovation, am become a useful asset of your software engineering team.\n\n--------------------------------------------------------------\nGENERIC TECHNICAL\n\nWhat programming languages are you proficient in? Which is your favorite and why?\n\tMost proficient in Java, C#, Python, Javascript.\n\tFav is java: balance between abstraction and necessary knowledge\n\tI like its object oriented nature, for adding structure and maintainability to code bases and promoting code reusability.\nFav programming language\n\tAdept at many, C#\n\tRich library support (GUI, file) -> efficiency, practicality\n\tOOP (unique, sublime getters/setters) -> intuitive and informative abstraction\n\tStrongly typed nature -> reduce runtime errors\n\nWhat is OOP?\n\tProgramming paradigm that uses objects to represent real world entities\n\tOOP encapsulates the object's implementations of properties and functionalities, often in the form of data fields & methods\nWhat is inheritance?\n\tInheritance: Allows for classes to be derived from another\n\tDerived class can define its own distinguishing characteristics\nWhat is polymorphism?\n\tPolymorphism: objs take on forms of different classes while still taking on characteristics of the original class\n\tCompile Time Polymorphism: Method overloading\n\tRun Time Polymorphism: Method overriding\nWhat is a class? A super-class?\n\tClass: blueprint for objects, defining their characteristics\n\tSuperclass: Class to inherit characteristics from, including fields and functionalities\nWhat is a default constructor? What is a conversion constructor?\n\tDefault constructor: No args\n\tConversion constructor: convert instance of one class to another\nWhat is multiple inheritance? What are its advantages and disadvantages?\n\tSubclass inherits from more than one superclass.\n\tAdvantage: allows classes to inherit characteristics of multiple\n\tDisadvantage: naming collisions\nHow are C and C++ different? Which do you prefer?\n\tC++ object oriented, C procedural\n\tPrefer C++ because OOP unlike functional, can maintain state and functionality within an organized container\n\tAbstract otherwise complex programs\n\n-----------------------------------------------------------------------------------\nWEB QUESTIONS\n\nWhat happens when you enter a URL into a browser\n\tDNS lookup: URL -> ip address\n\tHTTP: Browser -> Server\n\tWebpage Content: Server -> Browser\n\n-----------------------------------------------------------------------------------\nJAVA QUESTIONS\n\nExperience with JEE\n\tRESTful APIs with JAX-RS at company project\n\tDocumentation with distributed systems\nExperience with REST API / Databases\n\tREST: Express, next.js serverless func: web application serverside support\n\tDatabase: Music streaming project; video binary storage, metadata (MongoDB, SQLite, AWS s3)\nExperience with HTML, JS, CSS\n\tSRI Full Stack: used in tandem with PHP, frontend material (bootstrap, SASS, jquery)\n\tProjects: React, css modules\nExperience with Postman & ServiceNow\n\tPostman: Overcome difficulties of API testing with express\n\tServiceNow: Used similar JIRA at SRI\nExperience with application development\n\tQuicknotes3: C# windows forms, handled my own demands\n\t\tBoth perspectives (developer, client): insight into SWE\nWhich java proj did you enjoy the most?\n\tAVL BST: Only taught the theory, couldn't hold my curiosity\n\t\tLearning process felt rewarding\n\nHow to prevent method overriding\n\tfinal keyword\nDiff between abs class & interface\n\t1 abs class, multiple interfaces\n\tinheritance, functionality contractor\nChecked vs Unchecked Exception\n\tChecked: Beyond control, anticipated\n\tUnchecked: Programming error, unexpected\nDiff between Runnable & Callable interfaces\n\tRunnable: return void\n\tCallable: return generic type\nHow to ensure thread safety\n\tImmutable objs\n\tsynchronized keyword: 1 at a time\n\tLocks: prevent simultaneous access\nTell me the states in a thread lifecycle\n\tNEW: thread created\n\tRUNNABLE: start() run\n\tBLOCKED: waiting for lock\n\tWAITING: waiting for diff thread\n\tTIMED_WAITING\n\tTERMINATED: run() completes\nWhat are optional types?\n\tOptional class: placeholder for null, avoid null check\nDiff between stack & heap mem\n\tStack: method lifetime, faster\n\tHeap: ref in stack, garbage collected\nWhat are wrapper classes?\n\tPrimitives -> Objs\n\tUtility methods\n\nDiff between List & Set\n\tList: ordered, positional access\n\tSet: unordered, no dupes\nWhy use ConcurrentHashMap\n\tMultithreaded, doesnt lock\nDiff between ArrayList & Vector\n\tArrayList: not thread-safe\n\tVector: time overhead\n\nTell me about APIs in java\n\tImportable functionalities\n\t(java.lang, java.util, java.io)\nWhat is the java memory model?\n\tShared vars in multithreading\n\tUse main mem: for latest updates\n\t(synchronized, volatile)\nExplain the java class loader\n\tDynamically load classes\n\tLinks binaries\nUsed a request dispatcher?\nTell me about JRE, JVM, JDK, JIT, hotspot\n\tJRE: Minimal kit, JVM, API\n\tJDK: Tools for java (javac, java, jar)\n\tJVM: Run java bytecode (platform-independent)\n\tJIT: bytecode -> machine code\n\tHotSpot: Optimizer, compiles if peak performance\n\nExplain Singleton pattern\n\tClass: 1 instance, use that only\n\tprivate constructor, static instance access\nExplain Factory pattern\n\tInterface & subclasses: interface variable has dynamic type\nExplain Observer pattern\n\tInterface: require update method, update subclasses accordingly","QuickNotes3\\nyu-it-job-prep.txt":"Post\n\thttps://nyu.joinhandshake.com/stu/postings?page=1&per_page=25&sort_direction=desc&sort_column=default&query=Student%20Developer\n\nQualities\n\tTechnical: Java, JEE, HTML, JS, CSS, REST API, Postman, ServiceNow, application, database\n\tRoles: troubleshooting, developing, test web apps\n\tSoft: Teamwork, customer support, community helping\n\nInformation\n\tNYU IT -> BPA\n\tPhilosophy: Serve NYU community by upholding tech & data\n\t\tPractiality: Improve user experience by testing the application user perspective\n\nEnd Questions\n\tContemplating a 5hr/week tutoring job; 15 or 20 hrs a week?\n\tWhat others skills should I learn prior?\n\nTell me about yourself / Why CS?\n\tIntro\n\n\tArt of creation\n\tClarinet -> joy for musical experiences\n\n\tLike music: App dev more than hard coding\n\tArt: Innovations & ideas -> seamless experience\n\n\tWould be excited about enhancing tech for NYU community\n\tEager to bring perspective & philosophy; asset & team player\n\t\tHi, my name is Sewon and it is a pleasure meeting you today.\n\t\tFrom a young age, I've always been captivated by the art of creation. My journey began with learning how to play the clarinet, where I picked up a joy for creating musical experiences for my audience.\n\n\t\tIn the same way, I believe that application development is more than just hard coding. Much like musical performance, it is a form of art, built of ideas and innovations coming together to craft a seamless experience for the user.\n\n\t\tI would be excited about the opportunity to enhance the technology experience for the NYU community. I am eager to bring my unique perspective & philosophy to your amazing team and I hope to become a great asset & team player at NYU IT.\nWhy us? / What experiences make you suitable for this?\n\tCreated Quicknotes3 for myself\n\tHelped me in academic\n\n\tFelt rewarded: cause my creation had innovative\n\tDesire: Help NYU community, give them the experience\nTell me about your experience with (Skill)\n\tJava: SRI project (Java/C++/Typescript)\n\t\tLarge codebase: maintaining & documenting\n\t\tGradle/Ant/Docker buildtool\n\tJEE: Java API for server functionality\n\tREST / Database: AudioCanvas\n\t\tREST: Express.js & Next.js for video/audio\n\t\tDatabase: MongoDB & SQLite for metadata & music\nTell me about your (Experience)\n\tHackNYU: Facilitate communication in study groups\n\t\tWeb-based social media: Flask / MongoDB\n\n-----------------------------------------------------------\nGENERIC TECHNICALS\n\nWhat programming languages are you proficient in? Which is your favorite and why?\n\tMost proficient in Java, C#, Python, Javascript.\n\tFav is java: balance between abstraction and necessary knowledge\n\tI like its object oriented nature, for adding structure and maintainability to code bases and promoting code reusability.\nWhat is OOP?\n\tProgramming paradigm that uses objects to represent real world entities\n\tOOP encapsulates the object's implementations of properties and functionalities, often in the form of data fields & methods\nWhat is inheritance?\n\tInheritance: Allows for classes to be derived from another\n\tDerived class can define its own distinguishing characteristics (overriding)\nWhat is polymorphism?\n\tPolymorphism: objs take on forms of different classes while still taking on characteristics of the original class\n\tCompile Time Polymorphism: Method overloading\n\tRun Time Polymorphism: Method overriding\nWhat is a class? A super-class?\n\tClass: blueprint for objects, defining their characteristics\n\tSuperclass: Class to inherit characteristics from, including fields and functionalities\nWhat is a default constructor? What is a conversion constructor?\n\tDefault constructor: No args\n\tConversion constructor: convert instance of one class to another\nWhat is multiple inheritance? What are its advantages and disadvantages?\n\tSubclass inherits from more than one superclass.\n\tAdvantage: allows classes to inherit characteristics of multiple\n\tDisadvantage: naming collisions\nHow are C and C++ different? Which do you prefer?\n\tC++ object oriented, C procedural\n\tPrefer C++ because OOP unlike functional, can maintain state and functionality within an organized container\n\tAbstract otherwise complex programs\n\n----------------------------------------------------------------------\nSPECIFIC TECHNICALS\n\nExperience with JEE\n\tRESTful APIs with JAX-RS at company project\n\tDocumentation with distributed systems\nExperience with REST API / Databases\n\tREST: Express, next.js serverless func: web application serverside support\n\tDatabase: Music streaming project; video binary storage, metadata (MongoDB, SQLite, AWS s3)\nExperience with HTML, JS, CSS\n\tSRI Full Stack: used in tandem with PHP, frontend material (bootstrap, SASS, jquery)\n\tProjects: React, css modules\nExperience with Postman & ServiceNow\n\tPostman: Overcome difficulties of API testing with express\n\tServiceNow: Used similar JIRA at SRI\nExperience with application development\n\tQuicknotes3: C# windows forms, handled my own demands\n\t\tBoth perspectives (developer, client): insight into SWE\nWhich java proj did you enjoy the most?\n\tAVL BST: Only taught the theory, couldn't hold my curiosity\n\t\tLearning process felt rewarding\n\nHow to prevent method overriding\n\tfinal keyword\nDiff between abs class & interface\n\t1 abs class, multiple interfaces\n\tinheritance, functionality contractor\nChecked vs Unchecked Exception\n\tChecked: Beyond control, anticipated\n\tUnchecked: Programming error, unexpected\nDiff between Runnable & Callable interfaces\n\tRunnable: return void\n\tCallable: return generic type\nHow to ensure thread safety\n\tImmutable objs\n\tsynchronized keyword: 1 at a time\n\tLocks: prevent simultaneous access\nTell me the states in a thread lifecycle\n\tNEW: thread created\n\tRUNNABLE: start() run\n\tBLOCKED: waiting for lock\n\tWAITING: waiting for diff thread\n\tTIMED_WAITING\n\tTERMINATED: run() completes\nWhat are optional types?\n\tOptional class: placeholder for null, avoid null check\nDiff between stack & heap mem\n\tStack: method lifetime, faster\n\tHeap: ref in stack, garbage collected\nWhat are wrapper classes?\n\tPrimitives -> Objs\n\tUtility methods\n\nDiff between List & Set\n\tList: ordered, positional access\n\tSet: unordered, no dupes\nWhy use ConcurrentHashMap\n\tMultithreaded, doesnt lock\nDiff between ArrayList & Vector\n\tArrayList: not thread-safe\n\tVector: time overhead\n\nTell me about APIs in java\n\tImportable functionalities\n\t(java.lang, java.util, java.io)\nWhat is the java memory model?\n\tShared vars in multithreading\n\tUse main mem: for latest updates\n\t(synchronized, volatile)\nExplain the java class loader\n\tDynamically load classes\n\tLinks binaries\nUsed a request dispatcher?\nTell me about JRE, JVM, JDK, JIT, hotspot\n\tJRE: Minimal kit, JVM, API\n\tJDK: Tools for java (javac, java, jar)\n\tJVM: Run java bytecode (platform-independent)\n\tJIT: bytecode -> machine code\n\tHotSpot: Optimizer, compiles if peak performance\n\nExplain Singleton pattern\n\tClass: 1 instance, use that only\n\tprivate constructor, static instance access\nExplain Factory pattern\n\tInterface & subclasses: interface variable has dynamic type\nExplain Observer pattern\n\tInterface: require update method, update subclasses accordingly","cs\\java.txt":"Resources\n\tDocs: https://docs.oracle.com/en/java/javase/19/docs/api/index.html\n\nAccess Modifiers\n\tPublic: Access anywhere\n\tProtected: Same package & subclass\n\tPackage-Private (default): Same package\n\tPrivate: Inner helper class\n\n\t//from outsider class\n\tInner: outer.new Inner()\n\tStatic Inner: new Outer.Inner()\n\tMethod Inner: //create in method, access in method\nGarbage Collection\n\tCollected When: No strong references / unreachable\n\tFinalizer: //run on garbage collection\n\t\t@Override\n\t\tprotected void finalize() { ... }\n\n\tStrong Ref: Exists as variable\n\tWeak Ref: Ref to strongRef\n\tSoft Ref: Ref to strongRef, collected if mem needed\n\tPhantom Ref: ???\n\nInstance Initialization\n\tclass Class {\n\t\t{ ... } //runs first to initialize fields\nStatic Initializaton\n\tclass Class {\n\t\tstatic { ... } //runs first to initialize static fields\n\nInitialization: Runs\n\tStatic: Run once\n\tInstance: Run on constructor\nInitialization: Inheritance\n\tOrdering: (\n\t\tparentStatic\n\t\tchildStatic\n\t\tparentInstance\n\t\tchildInstance\n\t\tother code\n\t)\n\nAbstract Class\n\tabstract class Class {\n\t\tabstract void abstractMethod(params);\n\nInheritance\n\tOverride:\n\t\t@Override\n\t\tpublic void method() { ... }\n\tAccess Superclass: super\n\t\n\t//One superclass, multi interfaces\n\n\tString || Super Requirement: <? super String>\n\tSub Requirement: <? extends String>\n\tCall Super Constructor: super() //if not called, default constructor will be used\nInheritance: Overriding\n\t//Final: cannot be overridden\n\t//More Restrictive Access: cannot be overridden\n\tMethods: Called by run-time type\n\tFields / StaticMethods: Called by compile-time type\nInheritance: Inner Classes\n\tInner: Access to outer\n\t\tAccess From Outer: new Inner()\n\t\tAccess From Outside: new Outer.Inner()\n\tStatic inner: Access to statics in outer\n\t\tAccess From Outer/Outside: Inner.method()\n\n\tInner inherits Outer: Inherits all members of outer\n\t//Inner not affected by outer's inheritance\n\n\tOutsider inherits Outer.Inner: //constructor\n\t\tpublic Outsider(Outer outer) { outer.super(); }\nPolymorphism: method & data field rules\n\tCompile-Time Polymorphism: Method overloading\n\tRun-Time Polymorphism: Method overriding\n\tMethods: Priority to subclass (object type)\n\tField Hiding: Overriding of data field\n\t\tPriority to subclass (var type)\n\nInterface\n\tpublic interface Interface {\n\t\tint CONSTANT = 3; //public, static, final\n\t\tvoid method(params); //public, abstract\n\t\tdefault void method(params) { ... }\n\t\tstatic void method() { ... } //belongs to interface\n\n\t//no constructors or initializers\n\t//Private field: not allowed\n\t//More retrictive access: cannot be overridden\n\n\tFields: Static & final by default\n\tDefault: If not implemented, use default\n\nThreading\n\tThread (java.util)\n\n\tpublic class ThreadClass extends Thread {\n\t\tpublic ThreadClass() { ... }\n\n\t\t@Override\n\t\tpublic void run() { ... }\n\n\tSetup: new Thread(func()) -> thread\n\tSetup: new ThreadClass() -> thread\n\t\tStart Thread: .start() //will activate run()\n\t\tWait For Thread End: .join()\n\t\tRunning: .isAlive() -> bool\nThreading: Locks\n\tSync Method: public synchronized void method() { ... } //one thread at a time\n\tSync Block:\n\t\tprivate final Object lock = new Object()\n\t\tsynchronized (lock) { ... } //one thread at a time\n\n\tReentrantLock (java.util.concurrent.locks)\n\t\tnew ReentrantLock();\n\t\t\tLock: .lock(); //wait til lock acquired\n\t\t\tUnlock: .unlock(); //unlock\n\t\ttry { ... } //code here; protect from exceptions\n\t\tfinally { lock.unlock(); }\n\tCondition\n\t\tnew Condition(reentrantLock)\n\t\t\tWait For Signal: .await() //give way to other threads\n\t\t\tThrow Signal: .signal()\n\n\tThread safety\n\t\tAtomic Variables: Thread safe vars\n\t\tImmutable Objects\n\t\tThread-local variables: Local to each thread\n\t\tConcurrent data structures\n\t\tSynchronization / reentrant locks\n\n-----------------------------------------------------------------------\n\nImport\n\t//only import if in diff package\n\tpackage packagePath;\n\timport packagePath.ClassName;\n\ninterface Consumer<T>\n\tCreate: param -> { ... }\n\ninterface Iterable<T>\n\t.iterator() -> itr\n\t\tHas Next: .hasNext() -> bool\n\t\tGet Next: .next() -> T\n\tForEach: for (T val : iterable) { ... }\ninterface Collection<T>\n\t.add(T val)\n\t.remove(T val)\n\t.contains(T val) -> bool\n\t.size() -> int\n\tAdd All: Collections.addAll(collection, item1, ...)\n\tTo Array: .toArray(new T[0])\ninterface List<T>\n\tAccess: .get(int index) -> T val\n\tAdd At Index: .add(int index, T val)\n\tIndex Of: .indexOf(T val)\n\tSubList: .subList(int start, int end) -> list //end exclusive\n\nnew ArrayList<T>() (java.util)\n\tAccess: .get(index) -> val\n\tEdit: .set(index, val)\n\tAdd: .add(val)\n\tRemove: .remove(index)\n\tContains: .contains(val) -> bool\n\tLength: .size() -> int\n\n\tStream Convert: ArrayList.stream() -> Stream\n\t\tFilter: .filter(func -> bool) //only trues allowed\n\t\tSum: .sum() -> int sum //only with int streams\nnew PriorityQueue<T>()\n\tEnqueue: .offer(val)\n\tDequeue: .poll() -> val //removes top\n\tTop: .peek() -> val\n\tLength: .size() -> int\nnew HashSet<T>()\n\tAdd: .add(val)\n\tRemove: .remove(val)\n\tContains: .contains(val) -> bool\n\tLength: .size() -> int\n\tCombine: .addAll(set)\nnew HashMap<K, V>()\n\tAccess: .get(key) -> val //null if doesnt exist\n\tAdd: .put(key, val)\n\tRemove: .remove(key)\n\tContains: .containsKey(key) -> bool\n\n-------------------------------------------------------------------\n\nStringBuilder (java.lang)\n\tnew StringBuilder() -> sb\n\t\tAdd: .append(string)\n\t\tGet Str: .toString() -> string\n\nScanner (java.util)\n\tnew Scanner(System.in)\n\t\tInt: .nextInt() -> int\n\t\tString: nextLine() -> str\n\t\tContinue: .nextLine() //use after each read\n\nFile (java.io)\n\tnew File(path) -> file\n\t\tGet Path: .getPath() -> string\n\t\tGet Name: .getName() -> string\n\t\tIs File: .isFile() -> bool\n\t\tChildren: .list() -> string[] //names, not paths\n\t\tCreate Directory: .mkdir() -> bool //false if failed\n\nFileReader (java.io)\n\tRead Setup: new FileReader(path) -> fileReader\n\t\tRead: .read() -> int //char as int; -1 if no chars left\n\t\tClose: .close()\n\tWrite Setup: new FileWriter(path) -> fileWriter\n\t\tWrite: .write(string)\n\nSwing\n\t* (javax.swing)\n\t* (java.awt.event)\n\tFlowLayout (java.awt)\n\t\n\tCreate Window: new JFrame(\"Title\") -> frame\n\t\tAdd Comp: .add(comp)\n\t\tShow: .setVisible(true)\n\t\tSize: .setSize(w, h)\n\t\tLayout: .setLayout(layout) //flexbox\n\t\tStop On Close: .setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)\n\tPanel: new JPanel() -> panel\n\t\tAdd Comp: .add(comp)\n\n\tLabel: new JLabel(\"text\") -> label\n\tInput: new JTextField(charCount) -> textField\n\t\tSet Value: .setText(string)\n\t\tGet Value: .getText() -> string\n\t\tSelect Event: .addFocusListener(new FocusListener() {\n\t\t\t@Override\n\t\t\tpublic void focusGained(FocusEvent e) { ... }\n\t\t\t@Override\n\t\t\tpublic void focusLost(FocusEvent e) { ... }\n\tButton: new JButton(\"text\") -> button\n\t\tClick Event: .addActionListener(func(e))\n\tFile Input: new JFileChooser() -> chooser\n\t\t.showOpenDialog(frame) -> int code\n\t\tif (code == JFileChooser.APPROVE_OPTION) {\n\t\t\tchooser.getSelectedFile() -> File\n\t\tAllow Directories: .setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES)\n\n\tFlowLayout: new FlowLayout() //horizontal\n\tBoxLayout: new BoxLayout(parentComp, BoxLayout.Y_AXIS) //vertical\n\nExecutor\n\tExecutors.newSingleThreadExecutor()\n\t\t.submit(func() -> res) -> Future<resType>\n\t\t.shutdown()\nFuture<T>\n\t.get() -> T //waits til available\n\nCompletableFuture<T>\n\t.supplyAsync(func() -> res)\n\t\t.thenApplyAsync(func(res) -> CompletableFuture)\n\t\t.thenAcceptAsync(func(res1))","QuickNotes3\\csharp-keyboard-input.txt":"int WH_KEYBOARD_LL\nint WM_KEYDOWN\nIntPtr hookId = null\n\nIntPtr SetWindowsHookEx(KEYBOARD, LLKbP, module_handle, 0): hook\nbool UnhookWindowsHookEx(hookId): unhook\nIntPtr CallNextHookEx(handle, eventCode, param, param): Pass on to the next hook of event\nIntPtr GetModuleHandle(moduleName)\ndelegate IntPtr LowLevelKeyboardProc(nCode, wParam, key): callback\n\tnCode >= 0: Can handle on your own\n\nProcess: Instance of running program\nModules: DLL lib to be shared by processes","jobs\\documents&tracker.txt":"Demanded Knowledge\n\tWeb fundamentals\n\tJavascript detailed system\nDemanded Skills\n\tSQL / MYSQL\n\tSwift, SwiftUI\n\tReact Native\n\tLAMP stack development?\n\tAzure\n\tBackend java / Angular\nDemanded Projects\n\tPython / AI\n\tMobile\n\tJava application design\n\nResume Optimizations\n\tExperience > education\n\tExperience/Project: Impact oriented\n\tQuantity Metrics: Best presentation\n\tQuick Job Tailoring\nCover Letter Optimization\n\tFigure out role manager\n\tEngaging hook: interesting to manager\n\tBP: Quantify contributions\n\nResume\n\tGeneral 8-10: https://docs.google.com/document/d/1j_BkZ4BtdzSt0oE4azpq6vGh8z_h_b0eOAU_eEdq6jw/edit\n\tWeb / Mobile 8-21: https://docs.google.com/document/d/1m6ZuiEATsDiRJCxIIBvHKuOObOHg3phl-e6SSzqQvyg/edit\n\tApp Dev 8-11: https://docs.google.com/document/d/1XCYprWEwIw2e_Ct8-KD6ViX1NrBqK6YexfpN7BU2kq4/edit\n\nCover Letter\n\tApp Dev 7-20: https://docs.google.com/document/d/1G13WDXBgoN9LryOQsj5f6xu5Od3YBy3i_sgXgNQnY5c/edit\n\tWeb 8-22: https://docs.google.com/document/d/1KafvZzGzve6iq-7HqpGluNXyA890O0sU0WNGfmxY5ts/edit\n\nTracker\n\thttps://docs.google.com/document/d/11yJ8Tf0HcIWUuY8hiqUawi757PfjHbtMI9qoufABNSs/edit\n\nNot Applied\n\tHandshake\n\t\thttps://nyu.joinhandshake.com/stu/saved_jobs\n\tLinkedin\n\t\thttps://www.linkedin.com/my-items/saved-jobs/\n\tIndeed\n\t\thttps://myjobs.indeed.com/saved\n\nCompany Websites\n\tGoogle\n\t\thttps://www.google.com/about/careers/applications/jobs/results/?src=Online/Google%20Website/ByF&utm_source=Online%20&utm_medium=careers_site%20&utm_campaign=ByF&company=Fitbit&company=Google&company=YouTube&distance=50&employment_type=INTERN\n\tMicrosoft\n\t\thttps://careers.microsoft.com/v2/global/en/programs/students.html\n\tAmazon\n\t\thttps://www.amazon.jobs/en/teams/internships-for-students\n\tFacebook\n\t\thttps://www.metacareers.com/areas-of-work/Facebook%20App/?p[divisions][0]=Facebook&divisions[0]=Facebook#openpositions\n\tApple\n\t\thttps://www.apple.com/careers/us/\n\tNetflix\n\t\thttps://jobs.netflix.com/\n\n\tBig Tech Programs\n\t\thttps://scholarshiptrack.org/2020/12/27/top-13-companies-offering-student-internships-in-tech/","QuickNotes3\\internship-meeting.txt":"Job Find\n\tWasserman Industry Guides\n\n\twasserman industry guides, company websites\nNetwork\n\tLearning from similar ppl\n\tLong term connection\n\n\temployer events, violet network, professors, cold msg\n\tInformational interview\nDocuments\n\tWasserman cover letter guide"}