{"cs\\css.txt":"Design: Create\n\t1: Establish page content\n\t2: Visualization -> figma\n\tFigma: https://www.figma.com/files/recents-and-sharing/recently-viewed?fuid=1260058470796296987\n\nDesign: Resources\n\tCSS Awards: https://www.cssdesignawards.com/\n\tAwwwards: https://www.awwwards.com/\n\tAnimation Guide: https://motion.zajno.com/\n\n--------------------------------------------------------------------------------\n\nDesign: Principles\n\tStyle: (colors, atmosphere, attention)\n\tConsistency: Match other colors & styles\n\tAlignment: Positional alignments, color bleed\nDesign: Styles\n\tSewonKim\n\t\tCompressed sections, one page\n\t\tnavbar\n\t\tsimple components\n\tModern Dark\n\t\tDark & simple sections\n\t\tquality components\n\t\twell spaced\n\tArtistic\n\t\tMonocolored components\n\t\tdynamic background / monocolor bg sections\n\t\tanimations: scroll activated, attention grabbing\n\t\tlarge spaced\nDesign: Layouts\n\tSeparated Elements\n\t\tconvolution\n\t\tno scroll; single place\n\tSections: Distinct rows\n\t\tScroll Introduction: Fade in & move up\n\n\t\tAutoplaying video section\n\t\tVertical sections\n\tScroll Slideshow\n\t\tSticky Comp\n\t\tthree.js: CamPosition change by scroll\n\t\t\tLinks in the map\n\n\t\tImage Transition: Zoom by scroll\n\t\tDiagram Transition: Animation by scroll\n\nDesign: Button\n\tFloating Button: Border only\n\t\tHover: Internal & border animation\n\t2Color Button: light bg, dark text/icon\n\t\tHover: Internal animation, alternate colors\n\tFloating Icon: Monocolor\n\t\tHover: Glow\n\t\tClick: Transition animation\nDesign: Text\n\tLifelike Title\n\t\tHover: Wave effect\n\tLifelike Text\n\t\tText Introduction: Type in, vertical pop in\n\t\tHover: Bottom line stretch in\nDesign: List / Grid\n\tGlow List: Separate display for curr selected\n\t\tHover: glow effect\n\t2Color List: bg color, border/content color\n\t\tSelected: Reverse colors\n\tConveyor List: Move elements in conveyor loop\n\tSticky Sheets: Sticky one-by-one sheets\n\n\tIcon List/Grid: Icon & name in each cell\n\tImage Link Grid: Image & title in each cell\n\t\tHover: Expand\n\tNode Pool: Image nodes scattered\n\t\tScroll: Animation distinguishes nodes from bg\nDesign: Navbar\n\tFloating Navbar: Foggy bg w icon\n\t\tNavbar Expanding: expander or whole page\n\n\tSide Text Vertical Nav: Header for each cell\nDesign: Slider\n\tVideo Slider: Slide through dynamic contents\n\tPills Slider: Pill tabs below content display\nDesign: Container\n\t3D Container: Shader, 3d separatism\n\tTranslucent Container: Gradient & fog\n\t\tContainer: Expanding animation\nDesign: Background\n\tPattern Background: Svg patterns, animated & fixed\n\tGradient Background\n\tImg/Gif Background: With floating comps\n\nDesign: Mouse\n\tCursor Follower: dot / glow\n\t\tFigure hover: show mouseFollowing description\nDesign: Page Transition\n\tTransition Display: hide page change\n\t\tFade in, internal animation\n\t\tSwipe in\nDesign: Others\n\tIntro\n\tMusic\n\tInteractive sfx: button click\n\tExtra Smooth Scroll\n\n---------------------------------------------------------------------------\n\nSvg: Editor\n\thttps://app.haikei.app/\nSvg: Elements\n\t<svg width height>\n\t\t<rect x y width height fill />\n\t\t<line stroke stroke-width x1 y1 x2 y2 />\n\t\t<circle cx cy r fill />\n\t\t<ellipse cs cy rx ry fill transform=\"rotate(degrees cx cy)\" />\n\t\t<polygon points=\"x1,y1 x2,y2 ...\" fill stroke stroke-width />\n\t\t<text x y  />\nSvg: Gradient\n\tDefine Gradients:\n\t\t<defs>\n\t\t\tLinear: <linearGradient id=\"gradientID\">\n\t\t\t\t<stop offset=\"0%\" stop-color= />\n\t\t\tCircular: <radialGradient id cx=\"50%\" cy=\"50%\" r=\"50%\" fx=\"50%\" fy=\"50%\">\n\t\t\t\t<stop ... />\n\tUse: fill=\"url(#gradientID)\"\nSvg: Mask\n\t<mask id=\"maskID\">\n\t\t<circle ... />\n\tUse Mask: <rect mask=\"url(#maskID)\" />\n\n----------------------------------------------------------------------------------\n\nCSS: Pointer\n\tMouse Ignore: pointer-events: none;\nCSS: Variables\n\tCreate: :root { --var: val; }\n\tAccess: var(--var)\nCSS: Media Query\n\t@media screen and (min-width: 800px) {}\nCSS: Flexbox\n\tContainer\n\t\tflex-wrap: wrap;\n\tElement\n\t\tflex: growProportion shrinkProportion mainAxisLength;\nCSS: Grid\n\tdisplay: grid;\n\n\tCols & Rows\n\t\tCol Length: grid-template-columns: 1fr 1fr 2fr; //proportions\n\t\tRow Height: grid-auto-rows: 100px;\n\t\tSpacing: (column-gap, row-gap, gap)\n\n\t\tElement Start/End: grid-column-start: 1;\n\t\t(grid-column-end, grid-row-start, grid-row-end)\n\tGrid Areas\n\t\tGrid: grid-template-areas:\n\t\t\t\"a1 a2 a2\"\n\t\t\t\"a1 . a3\";\n\t\tElement: grid-area: a1;\nCSS: Fit\n\twidth: max-content //fit all content\n\twidth: min-content //wrap content to fit\n\twidth: fit-content //max-content until wrap needed\n\n---------------------------------------------------------------\n\nCSS: Background\n\t<div> Screen Dims: { width: 100%; height: 100vh; }\nCSS: Responsive Img\n\tImg Fit: object-fit: cover; //<img>\n\tImg Pos: object-position: posX posY; //<img>\n\tClamp: width: clamp(min, default, max);\n\tAspect Ratio: aspect-ratio: proportionX / proportionY;\nCSS: List\n\t<li> No Dots: list-style: none;\nCSS: Navbar\n\tSmooth Scroll: html { scroll-behavior: smooth; }\n\tScroll Margin: scroll-margin-top: 4rem; //on target\nCSS: Slider\n\tDisplay: (overflow: hidden)\n\tList: (display: flex, transition: transform)\n\tElement: (flex: 0 0 100%)\n\t//Move elements by changing transform: translate of List\n\nCSS: Color\n\tbackground: linear-gradient(to bottom, color1, color2, ...);\nCSS: Position / Dimensions\n\tMove By Self-Dimensions: transform: translate(-50%, -50%);\nCSS: Containers\n\tShadow Outwards: box-shadow: offsetX offsetY blur-radius spread-radius color;\n\tShadow Inwards: box-shadow: inset ...;\n\tBackground Blur: backdrop-filter: blur(10px);\n\n\tPadding Inwards: box-sizing: border-box;\n\nCSS: Animation\n\ttransition: property duration timing-func delay;\n\ttransition-property: property1, ...;\n\n\tCreate: @keyframes animName { 0% {} 100% {} }\n\tUse: animation: animName 2s linear alternate;\n\n------------------------------------------------------------------------\n\nScroll: Is Visible\n\t// JS\n\tTrack Element Visibility: new IntersectionObserver(func(entries))\n\t\tentries.forEach(func(entry))\n\t\t\tIs Visible: entry.isIntersecting\n\t\t\tGet Element: entry.target\n\t\t\t//transition element in if is visible\n\n\t\tAdd Element: .observe(element)\nScroll: Is Visible (framer-motion)\n\t// JS\n\tframer-motion: { useInView }\n\nScroll: Sticky Element\n\telement { position: sticky; left: 0; top: 0; }\n\telementParent { height: 400vh; }\n\t// might need space occupier for sticky's scroll domain\n\nMouse Follower\n\t// JS\n\tMouse Coordinates: window.addEventListener(\"mousemove\", func(e))\n\t\tPosX: e.clientX\n\t\tPosY: e.clientY\n\tMouse Left Page: window.addEventListener(\"mouseout\", func(e))\n\t\tif (!e.relatedTarget || e.relatedTarget === null) { //hide follower }\n\t\t//show follower on mousemove event above\n\n\t// CSS\n\tDont Affect Mouse: pointer-events: none;\n\nSVG Trace Animation\n\t// JS\n\tframer-motion: { motion }\n\n\t<motion.path\n\t\tinitial={{ pathLength: 0 }}\n\t\tanimate={{ pathLength: 1 }}\n\t/>\n\nExpanding Element Animation\n\t// CSS\n\telement:hover {\n\t\ttransform: scale(1.1);\n\t\ttransition: transform 0.3s ease;\n\t}\n\nWave Text Animation\n\t// React\n\t<div> style(relPos)\n\t\t<div> class(upper) style(absPos, translate(-50%, 0), horizontalFlex)\n\t\t\t{\"text\".split(\"\").map((textChar, textIndex) => {\n\t\t\t\treturn <p style(transitionDelay: {textIndex * 40})>\n\t\t\t})}\n\t\t<div> class(lower) ...\n\t\t\t...\n\t// CSS\n\t.upper > p {\n\t\ttransform-origin: top center;\n\t\ttransform: scaleY(1);\n\t\ttransition: transform 0.3s ease-in-out;\n\t} //on animation: change to scaleY(0)\n\n\t.lower > p {\n\t\ttransform-origin: bottom center;\n\t\ttransform: scaleY(0);\n\t\ttransition: transform 0.3s ease-in-out;\n\t} //on animation: change to scaleY(1)\n\nExpanding Circle Button\n\t// React\n\t<button\n\t\tonMouseEnter={(e) => {\n\t\t\tlet buttonLeft = buttonRef.current.offsetLeft\n\t\t\tlet buttonTop = buttonRef.current.offsetTop\n\t\t\t//set svg left by state: (e.clientX - buttonLeft)\n\t\t\t//set svg top by state: (e.clientY - buttonTop)\n\t\t\t//set svg width by state: (buttonRef.current.offsetWidth * 2.5)\n\t\t\t//set svg height by state: (buttonRef.current.offsetWidth * 2.5)\n\t\t}}\n\t\tonMouseLeave={() => { ... }}\n\t>\n\t\t<svg style={{ width height left top }}>\n\t\t\t<circle cx=\"50%\" cy=\"50%\" r=\"50%\" fill />\n\t// CSS\n\tbutton { overflow: hidden, relPos }\n\tsvg { absPos, transform: translate(-50%, -50%),\n\t\ttransition-property: width, height;\n\t\ttransition-duration: 0.5s;\n\t\ttransition-timing-function: ease-in;\n\t}\n\nPage Transition\n\t// CSS: page coverer\n\tdiv { width: 100%; height: 100vh;\n\ttransition: ...; //appear / disappear animation }\n\n\t// REACT: Intro / Outro\n\tuseEffect(() => {\n\t\t//if intro: make pageCoverer appear\n\t\t//if outro: make pageCoverer disappear\n\t}, [flag]) //runs initially for intro, change flag for outro\n\n\t// JS: delayed redirect\n\tsetTimeout(() => {\n\t\tlet link = document.createElement(\"a\")\n\t\tlink.href = \"url\"\n\t\tlink.click()\n\t}, 2500)\n\n----------------------------------------------------------------------\n\nFramer Motion: Motion Element\n\tframer-motion: { motion }\n\n\t<motion.div\n\t\tAnimation: animate={{ \"prop\": val }}\n\t\tAnimation Multiframes: animate={{ \"prop\": [frameVals] }}\n\t\tAnimation Config: transition={{ type: \"tween\", duration: 3, delay: 3, repeat: Infinity }} //time in seconds\n\t\t\tTypes: (spring)\n\n\t\tInitial: initial={ ... }\n\t\tHover: whileHover={ ... }\n\t\tClick: whileTap={ ... }\n\t\tScroll: whileInView={ ... } //when visible\n\t\tDrag:\n\t\t\tdrag\n\t\t\tHorizontal Only: dragConstraints={{ left: 50 }}\n\t\t\tBounding Element: dragConstraints{boundRef}\n\t\t\twhileDrag={ ... }\n\t>\nFramer Motion: Variants\n\tDefine Animation Set: { animationStage1: { prop: \"val\" }, ... } -> animationSet\n\tAnimate Subtree: <motion.ul\n\t\tanimate=\"animationStage1\" //use useState to trigger animation stages\n\t\t\t//can set animationStage for initial, whileHover, ...\n\t\tvariants={animationSet}\n\t>\n\t\t<motion.li variants={ ... }>\n\nthree: html\n\tCanvas: <canvas id=></canvas>\nthree: * as THREE (https://threejs.org/docs/)\n\tWindow Width: window.innerWidth -> number\n\tWindow Height: window.innerHeight -> number\n\n\tScene: new THREE.Scene() -> scene\n\t\tAdd Obj: .add(obj)\n\t\tBackground: .background(new THREE.TextureLoader().load(\"imgPath\"))\n\tCamera: new THREE.PerspectiveCamera(\n\t\tfieldView, aspectRatio, nearClip, farClip\n\t) -> camera\n\t\t.position.x -> number\n\t\t.position.y -> number\n\t\t.position.z -> number\n\t\tDirection: .lookAt(new THREE.Vector3(x, y, z))\n\tOrbitControls: new THREE.OrbinControls(camera, canvasElement) -> controls\n\t\tUpdate: .update()\n\tRenderer: new THREE.WebGLRenderer({ canvas: canvasElement }) -> renderer\n\t\tSize: setSize(x, y)\n\t\tSet Bg Color: .setClearColor(hexColor)\n\t\tShadow Enabled: .shadowMap.enabled -> bool\n\n\t\tRender: .render(scene, camera)\n\t\tRecursive Render:\n\t\t\tfunc() {\n\t\t\t\t//render\n\t\t\t\t//update camera\n\t\t\t\trequestAnimationFrame(func())\n\t\t\t}\nthree: Objects\n\tObj:\n\t\tPosX: .position.x -> number\n\t\tRotationX: .rotation.x -> number //radians\n\t\tCast Shadow: .castShadow -> bool\n\t\tReceive Shadow: .receiveShadow -> bool\n\n\t\tAdd Obj: .add(obj)\n\t\tObj Name: obj.name -> str\n\t\tGet Obj: scene.getObjectByName(str) -> obj\n\tGeometry:\n\t\tBox: new THREE.BoxGeometry(x, y, z) -> geometry\n\t\tPlane: new THREE.PlaneGeometry(width, depth)\n\t\tSphere: new THREE.SphereGeometry(size, x, y)\n\tMaterial:\n\t\tSelf Lighting: new THREE.MeshBasicMaterial({ color: color })\n\t\tStandard: new THREE.MeshStandardMaterial({ color: color })\n\t\tPlane: new THREE.MeshBasicMaterial({ color: color, side: THREE.DoublePane() })\n\t\tNot Luminated: new THREE.MeshPhongMaterial({ color: color })\n\n\tMesh: new THREE.Mesh(geometry, material)\n\tPlane:\n\n\tFog: new THREE.FogExp2(hexColor, float density) -> fog\n\t\tAdd Fog: scene.fog = fog\n\tPoint Light: new THREE.PointLight(color, intensity) -> light\n\t\tAdd Obj: .add(obj)\n\t\tShadow Enabled: .castShadow -> bool\n\tSpot Light: new THREE.SpotLight(color, intensity) -> light\n\t\tEdge Fuzz: .penumbra -> number\n\n\tGroup: new THREE.Group()\n\t\tAdd Obj: .add(obj)","cs\\python.txt":"Concepts\n\tMutable: Can modify\n\tImmutable: Can only replace\nSyntax\n\tTernary: trueVal if Condition else falseVal\n\n\tfuncName = lambda params: returnVal\n\tval = funcName(params)\nException\n\traise Error(\"msg\")\nMath\n\tAbs Val: abs(num)\n\tMax Int: sys.maxsize\nRandom\n\trandom.randint(a, b) -> int [a, b]\nSorting\n\tsorted(list, key=compFunc)\n\nString\n\tSplit: .split(delimiter) -> list[str]\n\tIndex Of: .find(str) -> int\n\tContains: substr in str -> bool\n\t\n\tStr -> Int: int(str) -> int\nList\n\tlist = [-1] * n\n\tlist = [[-1] * n1 for _ in range(n)]\n\n\tlist.sort()\n\tlist[:] -> cloneList\nDict\n\tdict = {}\n\tdict[key] -> val\n\tdel dict[key]\n\tkey in dict -> bool\n\tdict.copy -> clone\n\tfor key in dict:\nStack\n\tstack = []\n\t\t.append(val)\n\t\t.pop()\nQueue: from collections import deque\n\tqueue = deque() // [back, front]\n\t\t.append(val) //front, .popleft() -> back, queue[0] -> back\n\t\t.appendLeft() //back, queue[-1] -> front, .pop() -> front\n\t\tlen(queue)\n\t\tqueue.clear()\nSet\n\tset = set()\n\t\t.add(val)\n\t\t.remove(val)\n\t\tval in set -> bool\n\t\t.clear()\nPriorityQueue\n\timport heapq //minheap, dupes allowed\n\t\tpq = []\n\t\theapq.heappush(pq, val)\n\t\theapq.heappop(pq) -> top\n\t\theapq.nsmallest(1, pq)[0] -> top\n\t\tpq[len(pq) - 1]\n\t\theapq.heapify(list) //convert to heap\n\theap[list/tuple]: lexicographical comparison\n\nnumpy\n\tCreate Arr: .zeros(tuple shape) -> arr\n\tCreate Arr From List: .array(list) -> arr\n\t\tAccess: [i]\n\t\tAccess Multi Dim: [i, i1]\n\t\tDimCount: .ndim -> int\n\t\tGet Dims: .shape -> tuple\n\t\tAdd Dim Front: arr[np.newaxis, :] -> arr\n\t\tAdd Dim End: np.expand_dims(arr, axis=-1) -> arr\n\t\tRemove Dim: np.squeeze(arr, axis=int)\n\t\tClone: .copy() -> arr\n\t\tIterate All Dims: for val in np.nditer(arr):\n\t\tCombine: np.append(arr1, arr2, axis=dim) -> arr\n\tnp.save(file.npy, arr)\n\tnp.load(file.npy) -> arr\ntime\n\tWait: .sleep(secs)\n\tCurr Time (secs): .time()\nthreading\n\t.Thread(target=func) -> Thread\n\t\tStart: .start()\n\t\tWait for end: .join()\nos\n\tCreate/Use: open(file, \"r\" | \"w\")\n\t\t.read() -> str | bytes[]\n\t\t.write(str)\n\t\t.close()\n\n\tExists: os.path.exists(file) -> bool\n\tIs Dir: os.path.isdir(path) -> bool\n\n\tDir Children: .listdir(dir) -> str[]\n\tCombine: os.path.join(path, pathEnd) -> str\n\nPIL.Image\n\tFileGet: .open(imgPath) -> img\n\tFrom Np Arr: .fromarray(ndarray) -> img\nPIL.Image.Image\n\tDisplay: .show()\n\tPixels: .load()\n\t\tAccess / Edit: [x, y] -> tuple\n\tDimensions: .size -> (w, h)\n\ntkinter\n\tRoot: .Tk()\n\t\tDimensions: .geometry(\"WxH\") .geometry(\"+X+Y\")\n\t\tTopMost: .attributes(\"-topmost\", True)\n\t\tHeadless: .overridereddirect(True)\n\n\t\tClose Event: .protocol(\"WM_DELETE_WINDOW\", func)\n\t\tEvent Handler: .after(delay, func)\n\t\tStart: .mainloop()\n\t.Label(parent, text=)\n\t.Button(parent, text=)\n\t\tClick Event: .config(command=func)\n\t.Frame(parent, bg=)\n\t\tChildren: .winfo_children() -> list\n\n\tMethods\n\t\tPlace: .pack()\n\t\tGrid: .grid(row=, column=)\n\t\tGrid Dims: .grid_size() -> (x, y)\n\t\tGrid Occupation: .grid_slaves(y, x) -> int\n\n\t\tSetConfig: .configure(attribute)\n\t\tGetConfig : .cget(str attribute)\n\t\tRgb->Hex: \"#{:02x}{:02x}{:02x}\".format(*tupleColor)\n\tAttributes\n\t\tBg: str background\n\t\tColor: str fg\n\n\t\tborder-width: highlightthickness\n\t\tborder-color: highlightbackground\nmatplotlib.pyplot\n\tClick Listener: .connect(\"button_press_event\", func(event))\n\t\tevent.button == 1\n\t\tevent,xdata\n\t\tevent.ydata\n\tInsert Img: .imshow(ndarray)\n\n\tInsert Line: .plot(list, label=\"name\")\n\tX Name: .xlabel(string name)\n\tY Name: .ylabel(string name)\n\tInsert Names: .legend()\n\n\tTitle: .title(str)\n\tDisplay: .show()\n\nkeyboard\n\tListener: .on_press(func(event))\n\t\tevent.name == \"ctrl\"\n\n\tStop: .unhook_all()\n\tMainloop: .wait(\"esc\")\npynput.mouse\n\tListener: .Listener(on_click=func(x, y, button, pressed))\n\t\t.start()\n\t\t.stop()\n\t\tbutton == mouse.Button.left\n\npyinstaller\n\tCreate Exe: python -m PyInstaller file.py\n\t\tAdd Other File: --add-data \"relPath;.\"\n\ntensorflow\n\tCreate: .python.keras.Sequential(layers[]) -> model\n\t\tFinish: .compile(str loss, str optimizer, metrics[]\n\t\tTrain: .fit(input, output, int epochs, int batch_size) -> dict\n\t\t\tAccuracy: .history[\"accuracy\"] -> list[float] epochs\n\t\t\tLoss: .history[\"loss\"] -> list[float]\n\t\tPredict: .predict(input) -> output\n\t\tEvaluate: .evaluate(input, output) -> (loss, acc)\n\t\tDisplay: print(model.summary())\n\t\tSave: .save(\"path\")\n\tLoad: .python.keras.models.load_model(\"path\") -> model\n\ntensorflow.python.keras: Layers\n\tInput: .Input(tuple shape)\n\tDense: .layers.Dense(int units, str activation)\n\tFlatten: .models.Flatten(tuple input_shape)\n\tConv: .layers.Conv2D(outputSize, kernelShape, activation=, input_shape=) //local patterns\n\tPooling: .layers.MaxPooling2D(poolSize) //compress optimization\n\ntensorflow: Functions\n\tactivation\n\t\t\"relu\": hidden\n\t\t\"sigmoid\": binary\n\t\t\"softmax\": categorization\n\t\t\"linear\": object box\n\tloss\n\t\t\"sparse_categorical_crossentropy\": categorization\n\t\t\"mean_squared_error\": optimizer\n\toptimizer\n\t\t\"adam\"\n\tmetrics\n\t\t\"accuracy\"","QuickNotes3\\quicknotes3-website.txt":"Tasks","cs\\php.txt":"Variables\n\tCreate: $var = val;\n\tToString: var_dump($var)\n\tSet Undef: unset($var)\n\tIs Undef: isset($var)\nConditionals\n\tTrue | Default: $val ?: default\n\tNull | Default: $val ?? default\nLoops\n\tfor ($i = 0; $i < 5; i++) {}\n\tforeach ($arr as $val) {}\n\tforeach ($table as $key => $val) {}\nFunctions\n\tfunction funcName() {}\nOOP\n\tCreate: $obj = new ClassName()\n\tObj->Prop: $obj->prop\n\tObj->Static: $obj::prop\n\nString\n\tConcatenation: str1 . str2\n\tReplace: str_replace(find, replace, str)\n\tTrim: trim(str) -> str //trim spaces & escape chars\nArray\n\tCreate: $arr = [val1, ...]\n\tAccess: $arr[index] -> val\n\tAdd: $arr[] = val\n\tLen: count($arr) -> int\nTable\n\tCreate: $table = [ key => val ]\n\tAccess: $table[key] -> val\n\tAdd: $table[key] = val\n\tRemove: unset($table[key])\n\tContains: array_key_exists(key, $table)\n\n---------------------------------------------------------------\n\nWordpress: Post\n\tGet Title: get_the_title() -> str\n\tGet Post: get_post(postId) -> post\n\tSet Curr Post: $post -> post\n\tSet Post Data: setup_postdata($post)\n\tReset Post Data: wp_reset_postdata()\n\n\tPosts Query: get_posts([ ... ])\n\t\tPost Type: post_type & post_status: publish\n\t\tPages: posts_per_page & paged: pageIndex\n\t\tOrdering: meta_key: propName & orderby: meta_value & order: ASC\n\t\tFilter Comparison: meta_query: [ key: propName & value: compareTo & compare: >= ]\n\t\tFilter Category: tax_query: [ taxonomy: tribe_events_cat & field: slug & terms: categories[] ]\n\tPosts Query: new WP_Query([ ... ])\n\t\tSet $post: ->the_post() //goes to next\n\t\tHas Next: ->have_posts()\n\t\tPage Count: ->max_num_pages -> int\n\nWordpress: ACF\n\tGet Field: get_field(slug, postID?) -> table\nWordpress: Events\n\tEvent Date: tribe_events_event_schedule_details() -> str\nWordpress: File Download\n\tBy Url: <a href=\"urlToFile\"></a>\n\n\tIn Php: header(\"Content-Type: FILE_TYPE\")\n\theader('Content-Disposition: attachment; filename=\"FILE_NAME\";')\n\tWrite File: ob_end_clean()\n\tfopen(\"php://output\", \"w\") -> stream\n\tfwrite(stream, text)\n\tfclose(stream)\n\tob_flush()\n\texit()\n\n\tBy Javascript: <a\n\t\thref: #\n\t\tdownload: filename\n\t\tdata-VAR_NAME\n\tAccess Data: element.getAttribute(\"data-VAR_NAME\")\n\n\tDownload: new Blob([text], { type: \"text/plain\" }) -> blob\n\tURL.createObjectURL(blob) -> url\n\tdocument.createElement(\"a\") -> element\n\t\tSet Url: .href: url\n\t\tSet Download: .setAttribute(\"download\", filename)\n\t\tActivate: .click()\n\nWordpress: Paging\n\tCreate Page: /* Template Name: Page Name */ //in php\n\tAdd New Page -> Page Attributes -> Template //in wpadmin page\nWordpress: Routing\n\tUse Template: get_template_part(path, null, table args)\n\t\tIn Template: $args[key]\n\tChange Url: wp_redirect(url)\n\tBase Url: $args[\"base\"] -> relUrl%_%\n\n\tAdd QueryVar: add_filter(\"query_vars\", \"funcName\") //in functions.php\n\t\tfunction funcName($qvars)\n\t\t\t$qvars[] = \"varName\"\n\t\t\treturn $qvars\n\tApply QueryVar: ?queryVar=value //for url end\n\tGet QueryVar: get_query_var(\"queryVar\") -> str\n\nWordpress: Javascript\n\tAdd JS File: wp_enqueue_script(\n\t\t\"name\", get_template_directory_uri(), \"jsPath\",\n\t\t[prereqNames], versionNum, true\n\t) //in functions.php, update versionNum\n\tIs Page: is_page(\"pageType\") -> bool\n\tIs Single Post: is_singular(\"postType\") -> bool\n\tIs Category: in_category(\"categorySlug\") -> bool\n\nWordpress: Sanity\n\tText Only: esc_html()\n\tAttributes: esc_attr()\n\tUrl: esc_url()\n\tAllow Some HTML: wp_kses_post()\n\n---------------------------------------------------------------\n\nBootstrap: Icons\n\t<i class=\"bi bi-iconName\"></i>\n\nBootstrap: Nav Tabs\n\t<ul> class(nav nav-tabs) role(tablist)\n\t\t<li> class(nav-item)\n\t\t\t<button> \n\t\t\tid class(nav-link active)\n\t\t\tdata-bs-toggle(tab)\n\t\t\tdata-bs-target(#targetID)\n\t\t\tdata-href(#urlID) aria-controls(urlID)\n\t\t\ttype(button) role(tab)\n\n\t<div> class(tab-content)\n\t\t<div> id class(tab-pane fade show active)\n\t\trole(tabpanel) aria-labelledby(tabID)\n\nBootstrap: Carousel Slider\n\t<div carousel carousel-dark slide>\n\tid\n\tdata-bs-ride: carousel\n\t\t<ul carousel-inner>\n\t\t\t<li carousel-item active>\n\n\t\tButton: <button carousel-control-prev>\n\t\ttype: button\n\t\tdata-bs-target: #carouselID\n\t\tdata-bs-slide: prev\n\t\t\t<span carousel-control-prev-icon>\n\t\t\taria-hidden: true\n\nBootstrap: Modal\n\tOpen Button: <button btn btn-primary>\n\ttype: button\n\tdata-toggle: modal\n\tdata-target: #modalID\n\n\tModal: <div modal fade>\n\tid\n\trole: dialog\n\ttabindex: -1\n\taria-hidden: true\n\t\t<div modal-dialog>\n\t\trole: document\n\t\t\t<div modal-content>\n\t\t\t\t<div modal-header>\n\t\t\t\t\tExit Button: <button close>\n\t\t\t\t\ttype: button\n\t\t\t\t\tdata-dismiss: modal\n\t\t\t\t\taria-label: Close\n\t\t\t\t\t\t<span> &times; </span>\n\t\t\t\t\t\taria-hidden: true\n\t\t\t\t<div modal-body>","cs\\javascript.txt":"Math\n\tMax Int: Number.MAX_SAFE_INTEGER\n\tMin: .min(num1, ...) -> number\n\tAbs: .abs(num) -> number\n\tFloat -> Int: .floor(float) -> int\n\nString\n\tLen: .length\n\tSubstr: .substring(start, end) -> str[start, end)\n\tSplit: .split(delimiter) -> arr[str]\n\tContains: .includes(str) -> bool\n\tIndexOf: .indexOf(str) -> int .lastIndexOf(str) -> int\n\tNo Lead/End Space: .trim() -> str\n\tInterpolation: `$(var)`\n\n\tParseInt: parseInt(str) -> int\n\tParseFloat: parseFloat(str) -> float\n\tStr -> Int: .charCodeAt(index) -> int\n\tInt -> Str: .fromCharCode(int) -> str\nArray\n\tlet arr = []\n\tlet arr = new Array(len)\n\t\tAccess / Edit: [i]\n\t\tLen: .length\n\t\tAdd: .push(val)\n\t\tContains: .includes(val) -> bool\n\t\tIndexOf: .indexOf(val) -> number\n\t\tClone: [...arr] -> clone\n\t\tSort: .sort(compareFunc(compare, compareTo));\n\t\tForEach: .forEach(func(element))\n\t\tMap: .map((val) => {newVal}) -> arr\n\t\tFilter: .filter(func(val) -> bool) -> arr //only include true\nObject\n\tlet obj = {}\n\t\tAdd / Access / Edit: [\"key\"] = val\n\t\tContains Key: key in obj\n\t\tRemove: delete obj[\"key\"]\n\t\tIteration: for (let key in obj) {}\n\t\tClone: {...obj} -> clone\n\t\tMap: Object.entries(obj) -> array[[key, val]]\n\t\t\t.map(([key, val]) => {})\nEnum\n\tCreate: export const EnumName = { KEY: 0, ... }\n\tAccess: EnumName.KEY -> number\n\nStack\n\tlet stack = []\n\t\tPush: .push(val)\n\t\tPop: .pop() -> val\n\t\tTop: [stack.length - 1]\nOOP\n\tclass ClassName {\n\t\tProps: private propName;\n\t\tConstructor: constructor(params} {}\n\t\tGet: get propName() {}\n\t\tSet: set propName(val) {}\n\t\tMethod: public methodName(params) {}\nInheritance\n\tclass subClass extends superClass {}\nAsynchronous\n\tasync funcName() {} -> promise //undef til ready\n\t\treturn new Promise(function(resolve, reject) {});\n\t\t\tresolve(res) //accept\n\t\t\treject(err) //decline\n\t\t.then(func(data), func(err))\n\tWait Res: await funcName()\n\tWait Multi: await Promise.all(list[promise]) -> list[res]\nExceptions\n\ttry {\n\t} catch (errType) {\n\t} finally {}\n\n\tclass ErrorName extends Error {\n\t\tconstructor(msg) { super(msg); }\n\tthrow new ErrorName(msg);\n\nTypeScript\n\tAssign: varName: datatype = val\n\tCasting: (varName as NewType) -> newVar\n\tFunction: function funcName(param: datatype): returnType {}\n\tFunction Type: func: (param: paramType) => returnType\n\n\tObj: interface interfaceName { keyName: valType; optionalName: valType; }\n\tObj Any Key: { [key: keyType]: valType; }\n\tType Alias: type TypeName = string | number\n\tEnum Create: enum EnumType { Key1, ... }\n\tEnum Access: EnumType.Key1\n\n------------------------------------------------------------------------------------\n\nWeb: Elements\n\tGet Element: document.querySelector(\"cssSelector\") -> element\n\tGet Element: document.getElementById(\"ID\") -> element\n\t\tParent: .parentNode -> element\n\t\tChildren: E\n\t\tAdd Child: .appendChild(element)\n\t\tClasses: .classList\n\t\t\tAdd: .add(\"class\")\n\t\t\tRemove: .remove(\"class\")\n\t\t\tToggle: .toggle(\"class\")\n\t\t\tContains: .contains(\"class\")\n\t\tStyles: .style.propName -> str\n\n\t\tHTML: .innerHTML -> str\n\t\tText: .innerText -> str\n\n\tGet Elements: document.querySelectorAll(\"cssSelector\") -> NodeList\n\t\tGet: .item(index) -> element\n\t\tTraverse: .forEach(func(element))\nWeb: Events\n\tAdd Event: element.addEventListener(\"eventName\", func(event))\n\t\tGet Element: event.target -> element\n\nJQuery\n\tAccess Element: $(\"selector\") -> element\n\t\tAdd Event: .click(func(e)) //dont use arrow func\n\t\t\tAccess Self: $(this)\n\t\tToggle Class: .toggleClass(\"className\")\nJQuery: Ajax\n\tE\n\n-------------------------------------------------------------------------------\n\nNode\n\tPackage.json: npm init -y\n\tInstall: npm install lib\n\tGet Version: npm show lib version\nImport / Export\n\timport { item } from \"path\";\n\texport item;\npackage.json\n\tEntryPoint: .main\n\tScripts: .scripts -> { \"name\": \"code\" }\n\tKeywords: .keywords -> list\n\tDependencies: .dependencies -> { \"name\": \"version\" }\n\t\t.devDependencies\n\tApi Server: .proxy -> str\n\nWait\n\tsetTimeout(func, int ms)\nfs\n\tRead: .readFileSync(file, \"utf-8\") -> str | Buffer\n\tRead Async: .readFile(file, \"utf-8\", func(err, data))\n\tWrite: .writeFileSync(file, str text, configObj)\n\tWrite Async: .writeFile(file, str text, configObj, func(err))\n\t\tAppend Mode: configObj.flag: \"a\"\n\n\tBuffer -> Json: JSON.parse(Buffer.toString())\nnavigator.clipboard\n\tCopy To Clipboard: .writeText(str) -> promise<>\nDownload File\n\tCreate Url:\n\t\tnew Blob([data], { type: \"text/plain\" }) -> blob\n\t\tURL.createObjectURL(blob) -> url\n\tDownload By <a>:\n\t\tdocument.createElement(\"a\") -> element\n\t\t\tSet URL: .href = url\n\t\t\tSet Filename: .setAttribute(\"download\", \"filename\")\n\t\t\tDownload: .click()\nPlay Audio\n\tSetup: document.createElement(\"audio\") -> audio\n\t\tSet URL: .src = \"audioPath\"\n\t\tVolume: .volume -> float\n\t\tEnded Event: .onEnded -> func\n\t\tReset Time: .currentTime = 0\n\t\tPlay: .play()\n\nAWS S3: Video Storage\n\t//go to AWS s3 website & create bucket\n\t//Go to IAM > Users by finding \"Users\" in search bar\n\t//Add user: (attach policies directly, AmazonS3FullAccess)\n\t//Select new user, go to \"Security credentials\" -> \"Access keys\"\n\t//Create access key: (Application running outside AWS)\n\t//Save \"Access key\" & \"Secret access key\" somewhere\n\tnpm install aws-sdk\n\n\tCredentials -> Env Vars:\n\t\tLocal Set: set ACCESS_KEY=accessKey //in command prompt, only lasts a session\n\t\tVercel Set: Vercel Proj Page -> Settings -> Environment Variables -> (Add ACCESS_KEY)\n\t\tGet: process.env.ACCESS_KEY -> accessKey //in js\n\t\t\n\t\tView Env Vars: set\n\tConnect:\n\t\t\"aws-sdk\": AWS\n\t\tAWS.config.update({\n\t\t\taccessKeyId: \"\"\n\t\t\tsecretAccessKey: \"\"\n\t\t\tregion: \"regionSlug\"\n\t\t})\n\t\tnew AWS.S3() -> s3\n\tGet Video URL:\n\t\ts3.getSignedUrl(\"getObject\", {\n\t\t\tBucket: \"bucketName\",\n\t\t\tKey: \"objectKey\".\n\t\t\tExpires: secs\n\t\t}) -> url\n\n---------------------------------------------------------------------------\n\nReact: Create React\n\tCreate Proj: npx create-react-app <projName> //in powershell\n\tInstall Dependencies: npm install\n\tRun: npm start\nReact: Github Deploy\n\tnpm install gh-pages --save-dev\n\t//in package.json:\n\t\t\"homepage\": \"http://<username>.github.io/<reposName>\"\n\t//in package.json in \"scripts\":\n\t\t\"predeploy\": \"npm run build\",\n\t\t\"deploy\": \"gh-pages -d build\"\n\tgit init\n\tgit add .\n\tgit commit -m \"first commit\"\n\tgit branch -M main\n\tgit remote add origin <reposURL>.git\n\tgit push -u origin main\n\tnpm run deploy\nReact: Proj Format\n\tpublic: static assets, htmls\n\tsrc: source code\n\nReact: Import / Export\n\timport defaultItem from \"lib\"\n\t\texport default function MainFunc() {}\n\timport { item } from \"lib\"\n\t\texport function MainFunc() {}\n\timport \"cssFile\"\nReact: Components\n\tDefine Comp: CompName(obj props) {}\n\t\tChildren: props.children -> list\n\t\tClasses: props.className -> str\n\t\tStyles: props.style -> obj\n\tCompName.defaultProps = obj\nReact: Conditional Rendering\n\t{bool && <element>}\n\nReact: useState\n\tCreate: const [varName, updateFunc] = useState(defaultVal)\n\tUpdate: updateFunc(newVal)\n\tUpdate: updateFunc((currVal) => {}) //ref types: always create new\nReact: useRef\n\tCreate: const ref = useRef(default);\n\t\tValue: .current -> val\n\tSet Ref: element.ref={ref}\n\tSet Ref Callback: element.ref={func(element)}\n\n\tRef List: const ref = useRef([])\n\tAdd Ref List: element.ref={func(element)}\n\t\tref.current.push(element)\nReact: useEffect\n\tCreate: useEffect(func -> closeFunc, [stateVars]) //runs on comp add/remove & stateChange\n\t//can use DOM manipulation inside\n\nReact: createContext & useContext\n\tCreate: export const ContextName = createContext(default) //outside comp\n\tGive:\n\t\t<context.Provider value={val}>\n\t\t\t<compName /> //share with comp\n\tAccess:\n\t\timport { ContextName } from \"parentFile\"\n\t\tuseContext(context) -> val\n\nReact: public\n\tAccess From Comp: process.env.PUBLIC_URL + \"/\"\n\tAccess From Css: url(\"/public/\")\n\tAccess From Html: \"%PUBLIC_URL%/\"\n\nReact: fetch\n\tfetch(\"url\", reqObj) -> promise\n\t\t.then(func(res)) //run on req done\n\t\t\tres.json() -> promise\n\t\t\tres.ok -> bool\n\t\t\tres.status -> int\n\t\t.catch(func(error)) //run on err\n\n\t\tMethod: reqObj.method: \"GET\"\n\t\tReq Body: reqObj.body -> str\nReact: axios\n\tSetup: .create({ baseURL: base })\n\t\tGet .get(url) -> promise(res)\n\t\t\tRes Data: res.data -> any\n\t\tPost: .post(url, obj body) -> promise(res)\n\nReact: Routing\n\t//wont work in gh-pages. use HashRouter\n\t//in index.js\n\treact-dom/client: { createRoot }\n\treact-router-dom: { createBrowserRouter, RouterProvider, Link }\n\n\tCreate Router: createBrowserRouter([\n\t\t{ path: \"/path\", element: <Comp /> }\n\t]) -> router\n\tUse Router: createRoot(document.getElementById(\"root\")).render(\n\t\t<RouterProvider router={router} />\n\t)\n\tLink: <Link to=\"/path\"> Text </Link>\nReact: Redirect\n\treact-router-dom: { useNavigate }\n\n\tSetup: const navigate = useNavigate() //in comp start\n\t\tRedirect: (\"relUrl\")\nReact: HashRouter\n\t//in index.js\n\treact-dom/client: ReactDOM\n\treact-router-dom: { HashRouter, Routes, Route }\n\t\n\tCreate HashRouter:\n\t\t<HashRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"url\" element={<Comp />} />\n\tUse HashRouter:\n\t\tReactDOM.createRoot(document.getElementById(\"root\")) -> root\n\t\t\t.render(hashRouter)\n\nReact: Icons\n\tInstall: npm install react-icons --save\n\tImport: import { IconName } from \"react-icons/dirName\"\n\nReact: Typescript\n\tInput Element: HTMLInputElement\n\tComp Children: React.ReactNode\n\tUseState: useState<T>(default)\n\tUseState Setter: React.Dispatch<React.SetStateAction<T>>\n\tUseRef: useRef<TargetType>\n\n---------------------------------------------------------------------\n\nNext: Create Proj\n\tCreate: npx create-next-app@latest\n\tRun: npm run dev\nNext: Vercel Deploy\n\tGithub: Select allowed repositories https://vercel.com/new\n\nNext: Public Directory\n\tAccess From Comp: \"/\"\n\tAccess From CSS: url(\"/\")\nNext: CSS Modules\n\tClass Only: CssName.module.css\n\t\n\tImport Module: import styles from \"modulePath\"\n\tUse Class: element.className={styles.className}\nNext: API\n\tCreate Endpt: In (/pages/api/index.js)\n\tCall Endpt: fetch(\"/api\")\n\n\texport default function HandlerName(req, res) { ... }\n\t\tGet Method: req.method -> str\n\t\tReq Body: req.body -> any\n\n\t\tSet Status: res.status(code)\n\t\tReturn Json: res.json({})\n\t\tReturn Text: res.send(str)\n\n\tGet Root Dir: process.cwd()\n\nNext: Rendering\n\tBuild Time: export async function getStaticProps()\n\t\treturn { props: { key: val } }\n\tReq Time: export async function getServerSideProps()\nNext: Components\n\tClient Comp: \"use client\" //on top\nNext: Fetch\n\tDisable Cache: await fetch(url, { cache: \"no-store\" })\n\nNext: Routing\n\tRoute Content: page.js\n\tRoute Layout: layout.js //applies to children\n\t\texport default function Layout({ page }) {}\n\tAPI Routes: pages/api/index.js\n\tDynamic API Routes: [param].js\n\t\tGet Param: req.query -> param\nNext: Dynamic Pages\n\tDynamic Route: [paramName]\n\texport default function Page({ params })\n\t\tparams.paramName\n\nNext: Head (next/head)\n\t<Head></Head>\nNext: Link (next/link)\n\t<Link href=\"url\"> Text </Link>\nNext: Image (next/image)\n\t<Image src alt />\n\nNext: useRouter (next/navigation)\n\tuseRouter()\n\t\tGo Url: .push(url)\nNext: createRef (react)\n\tlet ref = createRef<HTMLParagraphElement>()\n\t<p ref={ref}></p>\n\n\tPass as prop: { propRef: React.RefObject<ElementType> }\n\nNext: API Video\n\tServer (fs from \"fs\")\n\t\tGet Vid: fs.readFileSync(process.cwd() + \"/path\") -> video\n\t\tSet Format: res.setHeader(\"Content-Type\", \"video/mp4\")\n\t\tSend: res.send(video)\n\t\tAllow Large Data: export const config = { api: { responseLimit: false } }\n\tClient\n\t\tGet Vid: res.blob() -> promise<blob>\n\t\tCreate Url: URL.createObjectURL(blob) -> url\n\nNext: Errors\n\tComponents Not Rendering: Usage of wrong page.tsx\n\tTypeError: __webpack_modules__: Delete .next directory & npm install\n\tdoes not satisfy constraint [x: string]: never: Only export interfaces\n\tProps [x: string: never] error: Disable typescript strictness\n\t\tIn next.config.js: module.exports = { typescript: { ignoreBuildErrors: true } }\n\n-------------------------------------------------------------------------\n\nSvelte: Create\n\t//vscode: Get svelte for vscode extension\n\tnpx degit sveltejs/template projName\n\t//go to proj directory\n\tnpm install\n\n\tRun Proj: npm run dev\nSvelte: Project\n\tpublic: static contents\n\tscripts\n\tsrc/App.svelte: Main component\n\tsrc/main.js: Entry point; starts up app\n\nSvelte: States\n\t//JS\n\tCreate: let state = val\n\tChange: state = newVal //always reset\n\t// HTML\n\t<p> {state} </p>\nSvelte: Events\n\t// HTML\n\t<button on:click={func()}>\nSvelte: Conditional Render\n\t// HTML\n\t{#if Condition} ...\n\t{:else if Condition} ...\n\t{:else} ...\n\t{/if}\nSvelte: Iterative Render\n\t// HTML\n\t{#each List as Element, Index (Key)} ...\n\t{/each}\n\nSvelte: Import\n\t// JS\n\timport Comp from \"path\"\n\n\t// HTML\n\t<Comp />\nSvelte: Props\n\t// JS: Child\n\tCreate Prop: export let propName = defaultVal\n\n\t// HTML: Parent\n\t<Child propName={val} />\nSvelte: Binded Props\n\t// HTML\n\t<Child bind:propName={val} /> //update both ways\nSvelte: Custom Events\n\t// JS\n\tImport: svelte: { createEventDispatcher }\n\tCreate Dispatcher: createEventDispatcher()\n\t\tActivate Event: (\"eventName\")\nSvelte: Stores\n\t// JS\n\tImport: svelte/store: { writable }\n\tCreate: const store = writable(initialVal)\n\n\t// JS\n\tImport: import { store } from \"compPath\"\n\t// HTML\n\tAccess: {$store}\n\t// JS\n\tUpdate: store.set(val)\n\tUpdate: store.update(func(prevVal) -> val)\nSvelte: Lifecycle\n\t// JS\n\tComp Rendered: onMount(func())\n\tbeforeUpdate()\n\tafterUpdate()\nSvelte: Animation\n\t// JS\n\tImport: svelte/transition: { fade }\n\n\t// HTML\n\t<div in:fade>\nSvelte: DOM\n\tE\n\nSvelte: Routing\n\t// JS\n\tImport: svelte-spa-router: { Router }\n\tDefine: const routes = { \"path\": Comp, ... }\n\n\t// HTML\n\t<Router {routes} />\n\nSvelte: Typescript Setup\n\tSetup: node scripts/setupTypeScript.js\n\tJS: <script lang=\"ts\">\n\t//run npm install again\nSvelte: Typescript\n\n------------------------------------------------------------------------\n\nSveltekit: Create\n\tnpm install -g pnpm\n\tpnpm create svelte@latest Name\n\n\tRun: npm run dev\nSveltekit: Project\n\tstatic: Static content\n\tsrc/lib: ???\n\tsrc/routes: Page routes\n\tsrc/app.html: Entry pt layout\n\tsrc/styles.css: Global css file\n\t\tImport Css: import \"cssPath\"\n\n\tPage File: +page.svelte\n\nSveltekit: API\n\tFile: +page.ts\nSveltekit: Head\n\t<svelte:head> ... </svelte:head>\nSveltekit: Layout\n\tFile: +layout.svelte\n\n-------------------------------------------------------------------------\n\nExpress & React -> Firebase\n\t/client: create react app\n\t/server: add express (install & package.json)\n\tRemove Repo: remove and copy client dir\n\t/client/package.json: set proxy to server localhost\n\t/server/server.js: set localhost\n\t/server/package.json: set main to server.js\n\n\tCreate firebase project\n\tCreate web app\n\tGo to build/hosting -> get started\n\tInstall firebase: npm install -g firebase-tools\n\tLogin: firebase login\n\n\tIn /server: create firebase.json\n\tIn /server: firebase init\n\tConfigs (functions, use existing, public, no, no)\n\tIn /server/functions/package.json: set main\n\tIn /server/functions/server.js: const functions = require(\"firebase-functions\")\n\tIn /server/functions/server.js: exports.api = functions.https.onRequest(app)\n\tIn /server/functions/server.js: remove app.listen()\n\tIn /server: firebase deploy\n\n\tIn /client: firebase init\n\tConfig (1st hosting, use existing, build, no, no, no)\n\tIn /client: npm run build\n\tIn /client firebase deploy\n\t\n\tnpm install cors\n\tIn /server/functions/server.js: const cors = require(\"cors\");\n\tIn /server/functions/server.js: app.use(cors())\n\nexpress\n\texpress()\n\t\tAssign Client: .use(\n\t\t\texpress.static(path.join(__dirname, path))\n\t\t)\n\t\tGet: .get(\"/endpt\", func(req, res))\n\t\t\tres.status(code).send(\"msg\")\n\t\t\tres.send(data)\n\t\tMiddleware: .use(path, func(req, res, next))\n\t\t\tGo Next Middleware: next()\n\t\tStart: .listen(portNum)\n\nHTML\n\t<button> (onClick)\n\t<input> (onChange, onFocus)\n\t\tinput.size={strLen} //must be >= 1\n\t<video> (onTimeUpdate, onEnded)\n\t\t.currentTime\n\t\t.duration //total time\n\t\t\tInitializes as NaN, check with isNaN()\n\t<input type=\"range\"> (onChange)","jobs\\documents.txt":"Resume\n\tGeneral 9-26: https://docs.google.com/document/d/1j_BkZ4BtdzSt0oE4azpq6vGh8z_h_b0eOAU_eEdq6jw/edit\n\n\tIBM: https://docs.google.com/document/d/1iMwLYwcchzwg5mZEA8Eva_zJcze-9_xzPEq-b1Z54r4/edit\n\n\tGoogle: https://docs.google.com/document/d/1GNN-KrBKNk6pmmc8QboKmcn0I5PPnOT13MkBMmtaJdo/edit\n\nCover Letter\n\tGeneral 9/26: https://docs.google.com/document/d/1ZfYQVte7LlNJXYY-ig9iTv3Yuo8CqYEL45K8aJj_TIM/edit\n\n\tGoogle: https://docs.google.com/document/d/19n2MxBRYBcL9D0FQtp6jL0WuesBZT0SmZfwuPp6DNUM/edit\n\n\nDemanded Knowledge\n\tWeb\n\t\tWeb fundamentals\n\t\tJavascript detailed system\nDemanded Skills\n\tFrontend\n\t\tAngular\n\t\tUI/UX\n\tBackend\n\t\tREST / GraphQL / Backend java\n\t\tSQL / MYSQL / SQLite\n\t\tLAMP stack development?\n\t\tAzure\n\t\tAJAX\n\tMobile\n\t\tSwift, SwiftUI\n\t\tReact Native\nDemanded Projects\n\tPython / AI\n\tMobile\n\tJava application design\n\nResume Optimizations\n\tPost: Implied skills?\n\n\tQuantity Metrics: Best presentation\n\tQuick Job Tailoring: Match the post\nCover Letter Optimization\n\tFigure out role manager\n\tEngaging hook: interesting to manager\n\tBP: Quantify contributions","jobs\\resources.txt":"Tracker\n\tIBM BackEnd (Applied)\n\nJob Search\n\tGithub Internship List\n\t\thttps://github.com/SimplifyJobs/Summer2024-Internships\n\n\tSimplify\n\t\thttps://simplify.jobs/dashboard\n\n\tHandshake\n\t\thttps://nyu.joinhandshake.com/stu\n\n\tLevels\n\t\thttps://www.levels.fyi/?compar\n\n\tIndeed\n\t\thttps://www.indeed.com/\n\n\tLinkedin\n\t\thttps://www.linkedin.com/jobs/\n\n\tIdealist\n\t\thttps://www.idealist.org/en\n\n\tBuiltinny\n\t\thttps://www.builtinnyc.com/\n\n\tNYU Experiental Learning\n\t\thttps://www.nyu.edu/students/student-information-and-resources/career-development-and-jobs/find-a-job-or-internship/experiential-learning.html\n\nCompany List: FAANG\n\tGoogle: https://www.google.com/about/careers/applications/jobs/results/?src=Online/Google%20Website/ByF&utm_source=Online%20&utm_medium=careers_site%20&utm_campaign=ByF&company=Fitbit&company=Google&company=YouTube&distance=50&employment_type=INTERN\n\tMicrosoft: https://careers.microsoft.com/v2/global/en/programs/students.html\n\tAmazon: https://www.amazon.jobs/en/teams/internships-for-students\n\tFacebook: https://www.metacareers.com/areas-of-work/Facebook%20App/?p[divisions][0]=Facebook&divisions[0]=Facebook#openpositions\n\tApple: https://www.apple.com/careers/us/\n\tNetflix: https://jobs.netflix.com/\n\nCompany List: Tech\n\tAirbnb\n\tSpotify\n\tNVIDIA\n\tAdobe\n\tGithub\n\tSlack\n\tStripe\n\tIBM\n\nCompany List: Banks\n\tCapital One\n\tJPMorgan Chase\n\tSantander\n\tBank of America\n\nDocuments\n\tHandshake Documents Guide\n\t\thttps://nyu.joinhandshake.com/stu/articles/12279\n\n\tVMock Resume\n\t\thttps://www.vmock.com/dashboard/resume\n\n\tSample Resumes\n\t\thttps://docs.google.com/document/d/1XTGT4QmCwtRcgVhbKvQVajm_YA3MMo5uGsR_PqRAZqo/edit\n\n\tCover Letter Guide: https://docs.google.com/document/d/1BgZqHN0Fs5NlOZ1nAcAVQlOmjuTDBBBydM2FeXbdMmg/edit\n\nInterview\n\tHandshake Appointment (Mock Interviews)\n\t\thttps://nyu.joinhandshake.com/stu/appointments\n\n\tNYU Big Interview\n\t\thttps://nyu.biginterview.com/members/dashboard\n\n\tLinkedin Premium\n\t\thttps://www.linkedin.com/premium/my-premium/\n\n\tInterview Guide Doc\n\t\thttps://docs.google.com/document/d/1VL5uv_gnDtOpNdMg4Nu2Acm3jWx0OeKWYVw8ELTMyu8/edit\n\nEvents\n\tHandshake NYU\n\t\thttps://nyu.joinhandshake.com/stu/events?collection=ALL&eventFormat=HYBRID&sort=RELEVANCE&date=ALL\n\tNYU Event Calendar\n\t\thttps://docs.google.com/document/d/1-gCCKYXYePAnkGk707C2cZNg1eFkNv8oeWsczoK63eA/edit#heading=h.c2b1xrgd5ugd\n\nNetworking\n\tCold Emails To Recruiters\n\n\tViolet Network: https://violetnetwork.nyu.edu/hub/nyuwide/home-v3\n\n\tNetworking guide: https://docs.google.com/document/d/1GFJZBm14wX8EbbjtDVmMsgPM2X8owBug-v6nEmAnokk/edit#heading=h.okqxu4164l9j\n\n\tIndustry Guide: https://docs.google.com/document/d/1O92Yqboo_4Vlrp7nbvcFi6O2hJttKIbchmxa1UrCNrc/edit\n\nHackathons\n\tDevpost\n\t\thttps://devpost.com/settings/notifications\n","cs\\shell.txt":"Powershell: Comments\n\t# comment\nPowershell: Cmdlets\n\thttps://www.powershellgallery.com/\nPowershell: Run\n\tAllow Execution: Set-ExecutionPolicy RemoteSigned //in admin mode\n\tExecute: ./file\n\nPowershell: Variables\n\tCreate: $var = \"val\"\n\tAccess: $var\n\tGet Type: $var.GetType().FullName\n\n\tData Types: (str, int, float, $true, $null)\n\tOperators: (-eq -ne -gt -lt -ge -le)\nPowershell: Pipelines\n\tPipe: Cmdlet1 | Cmdlet2 //output1 -> input2\nPowershell: If & For\n\tIf: if (-not (condition)) {}\n\tFor: for ($i = 1; $i -le 5; $i++) {}\n\tForeach: foreach ($item in $collection) {}\nPowershell: Input\n\tInput: Read-Host -Prompt \"msg\" -> str\nPowershell: Exit\n\texit EXITCODE\n\nPowershell: String\n\tLen: .Length -> int\n\tEquals: STR1 -eq STR2 -> bool\n\tString Embed: \"$($var)\"\nPowershell: Array\n\tCreate: @(\"item1\", ...)\n\t\tAccess: [index]\nPowershell: Hashtable\n\tCreate: @{ \"key\" = \"val\" ... }\n\t\tAccess: [\"key\"]\n\nPowershell: File\n\tFile Read: Get-Content -Path PATH -> str\n\tFile Write: Set-Content -Path PATH -Value STR\nPowershell: Json\n\tStr -> Json: ConvertFrom-Json -InputObject STR -> json\n\t\tAdd Pair: | Add-Member -MemberType NoteProperty -Name KEY, -Value VAL\n\t\tAccess / Edit Val: .KEY\n\tJson -> Str: ConvertTo-Json -InputObject JSON -depth MAXDEPTH\n\nMakeFile: Print\n\tPrint Outside Target: $(info val)\nMakeFile: Variables\n\tCreate: var = val\n\tCreate: var := val\n\tAccess: $(var)\n\tCall Cmds: $(COMMAND) -> return\nMakeFile: Globals\n\tCurr Dir: $(PWD)\n\tMake Target: $@\n\tMake Flags: $(MFLAGS)\n\nMakeFile: If\n\tifeq (val1, val2) ...\n\t\tDefined: ifdef var\n\telse ...\n\tendif\nMakeFile: Loops\n\t$(foreach element, list, cmd)\nMakeFile: Lists\n\tCreate: list := val1 ...\n\tFilter: $(filter-out remove, list)\nMakeFile: Strings\n\tReplace: $(subst find, replace, str) -> str\n\tReplace: $(patsubst pattern, replace, str) -> str\n\t\t%: any str\n\tPathTop Only: $(notdir PATH)\n\nMakeFile: Import\n\tPaste: include makePath\n\tCall: $(MAKE) -C makeDir\n\tCall Perl: $(shell perlPath -f arg)\n\tCall In CLI: make -f PATH TARGET\n\tCreate Env Var For Children: export var\nMakeFile: Targets\n\tTarget: targetName: dependency1, ...\nMakeFile: Commands\n\t-: Ignore errs\n\t@: Do not display cmd\n\t\\: Shell cmd newLine\n\t;\\: Shell cmd end\n\tGet Shell Output: $(shell CMD) -> output\n\tGet Shell Output: `CMD` -> output\nMakeFile: Errors\n\t*** missing separator: indentation/formatting error\n\nShell: Output\n\tPrint: echo val\n\tPrint In Makefile: echo val ;\\\nShell: Variables\n\tCreate: var = val\n\tAccess: $var\n\tAccess In Makefile: $$var\nShell: Redirection & Pipes\n\tFile -> Input: cmd < file\n\tOutput -> File: cmd >> file\n\tOutput -> Input: cmd1 | cmd2\nShell: If\n\tif test_command; then ...\n\t\tEq: val1 = val2\n\t\tDir Exists: -d path\n\t\tSymLink Exists: -h path\n\telse ...\n\tfi\n\n\tIn Makefile: if [[ test_command ]] ; then \\\n\telse \\\n\tfi ;\\\nShell: Loops\n\tfor val in ${list} do ...\n\tdone\nShell: Strings\n\tConcatenation: str1str2\n\tInterpolation: \"${var}\"\n\tWildcard: *\"str\"*\nShell: Array\n\tCreate: arr = (val1 ...)\n\tAccess: ${arr[index]}\nShell: Table\n\tCreate: declare -A table\n\tSet: table[key] = val\n\tGet: ${table[key]}\nShell: Commands\n\tCreate SymLink: ln -s filePath linkPath\n\tGet Perl Output: $(shell perlPath -all cmdLineArg)\n\tReplace: sed \n\tForeach Children Recursive: find DIR -type f -exec CMD({}: file)\n\tFind In List Containing Substr: grep \"substr\"\n\tList Filter: $(filter-out removeVal list) -> newList\n\nPerl: Input / Output\n\tSet Env Var (Shell): key=\"val\" perl file.pl\n\n\tGet Env Var: $ENV{\"key\"} -> val\n\tGet Env Var: use Env qw(envName)\n\tGet Cmd Line Arg: @ARGV -> array\n\tGet Cmd Line Arg: shift -> arg1 //move to next arg after\n\tOutput: print str;\n\tThrow Error: die \"msg\"\nPerl: Variables\n\tCreate: my $var = val\n\tAccess: $var\nPerl: Strings\n\tInterpolation: \"$str\"\n\tLiteral String: 'str'\n\tReplace: $str =~ s/FIND/REPLACE/\n\tArray Join: join(delimiter, @arr)\n\tRemove End Newline: chomp $str\nPerl: Array\n\tCreate: my @arr = ()\nPerl: Table\n\tCreate: my %table = (key1, val1, key2, val2, ...)\n\nPerl: Conditionals\n\tUnless: unless (falseCondition) {}\n\tIf: if (trueCondition) {}\n\t\tEquals: obj1 eq obj2\n\t\tRegex Equals: $str =~ expression\n\tElse If: elsif (trueCondition) {}\nPerl: Loops\n\tForEach: foreach $val (@arr) {}\n\nPerl: Commands\n\tCall Cmd: `CMD` -> output\n\nAnt: Build File\n\tProject: <project name= default=\"compile\"> </project>\n\t\tTarget: <target name=\"compile\" depends=\"clean\"> </target>\n\t\t\tCreate Dir: <mkdir dir= />\n\t\t\tDelete Dir: <delete dir= />\n\t\t\tCompile Java: <javac\n\t\t\t\tsrcdir=\"path\"\n\t\t\t\tdestdir=\"path\"\n\t\t\t\tincludes=\"pattern\"\n\t\t\t\texecutable=\"javacPath\"\n\t\t\t\tclasspath=\"dependenciesPath\"\n\t\t\t/>\n\n\t\t\tPrint: <echo message=\"msg\" />\n\t\t\tGet File List: <fileset dir=\"path\" includes=\"patterns\" />\n\t\t\tRecursive Delete: <deltree dir=\"path\" />\n\n\tCreate Prop: <property name=\"propName\" value=\"val\" />\n\tLoad Props: <property file=\"file.properties\" />\n\tAccess: \"${propName}\"\nAnt: Flags\n\tSpecify BuildFile: -buildfile file\n\tSearch Upwards For BuildFile: -find file\n\tSet Var: -Dprop_name=value\n\tLess Info: -quiet\n\tMore Info: -verbose\n\tDebug Info: -debug\n\tSilent: -silent\n\tPrint All Targets: -projecthelp\n\nAnt-Contrib\n\tImport In BuildFile: <taskdef resource=\"propsFile\">\n\t\t<classpath> </classpath>\n\t\t\t<pathelement location=\"jarFile\" />","secure\\passes.txt":"Important Pass\n\tBlackTeslaCar137!\nUnimportant Pass\n\tBlackPiano0#6\nOld Passes\n\tBlackmgial5%\n\nSantander\n\tCard Number: 5129 9152 6743 0613\n\tUsername: sak9725@nyu.edu\n\tPassword: BlackTeslaCar8642!\nRobinhood\n\tEmergency Code: 252649253609\nTIAA\n\tUser ID: sewonkim0\nOrange Theory\n\tUsername: sewonkim0black@gmail.com\n\tPassword: BlackPiano0#6\nUbuntu\n\tUsername: sewonkim\n\tPassword: BlackPiano0#6\nFAFSA\n\tBackup Code: NQSPYXR3U34Y\nJuwon Kim Collegeboard\n\tSecurity Phrase: \"Lurks\"\n\tPassword: <School Password>#\nMinecraft\n\tUsername: Jinhuchung101@outlook.com\n\tPassword: jhc10272004\nSynapse\n\tUsername: xJames\n\tPassword: sewonkim0","QuickNotes3\\audio-canvas.txt":"Tasks\n\tHomepage design\n\t\tPlan: (\n\t\t\tAbout: left navbar + display (video, title, description), starry background\n\t\t\t\tall in one, no cost, fast & quality, privacy\n\t\t\tAlbum: Interactive diagram, unfolding animation\n\t\t\tVideo: ???\n\t\t\tEditor: Coming Soon! flat.io credit\n\t\t\t\tSvg background\n\t\t\tProfile: (\n\t\t\t\tImage, name, socials\n\t\t\t\tbio, other projs icon grid\n\t\t\t)\n\t\t)\n\t\tGet Style: (artistic/modern)\n\t\tLayout: (sections, navbar)\n\tHomepage Implement\n\t\tFooter: Profile grid layout\n\n\t\tEditor: Scroll animation\n\t\tFooter Navbar: Title shift animation\n\n\t\tFooter: Complete platforms grid\n\t\tAlbums: Fix opening animation\n\n\t\tAbout: integrated background\n\n\tPreview: Fix AWS connection error\n\n\tCleanup code:\n\t\tSplit up functionalities\n\t\tElegantify codebase\n\n\tsetup display\n\t\teighth bar implementation\n\t\t\tGroup: Create implementation (8, 16, 32)\n\t\t\t\tMust be (8, 16, 32)\n\t\t\t\tCannot link if next (isLeader)\n\t\t\tGroup: get curr & next pt positions\n\t\t\tCreate svg\n\n\tfilm videos (eve anoko secret, delayed opening)\n\tedit & compress videos\n\tstore on aws s3\n\tupdate videos.json\n\n\tsetup input","jobs\\tracker.txt":"Resume: General 8-10\n\thttps://docs.google.com/document/d/1j_BkZ4BtdzSt0oE4azpq6vGh8z_h_b0eOAU_eEdq6jw/edit\n\nResume: Web / Mobile 8-21\n\thttps://docs.google.com/document/d/1m6ZuiEATsDiRJCxIIBvHKuOObOHg3phl-e6SSzqQvyg/edit\n\nResume: App Dev 8-11\n\thttps://docs.google.com/document/d/1XCYprWEwIw2e_Ct8-KD6ViX1NrBqK6YexfpN7BU2kq4/edit\n\nCover Letter: General 7-20\n\thttps://docs.google.com/document/d/1G13WDXBgoN9LryOQsj5f6xu5Od3YBy3i_sgXgNQnY5c/edit\n\nCover Letter: Frontend 8-4\n\thttps://docs.google.com/document/d/1KafvZzGzve6iq-7HqpGluNXyA890O0sU0WNGfmxY5ts/edit\n\nDemanded Knowledge\n\tWeb fundamentals\n\tJavascript detailed system\nDemanded Skills\n\tSwift, SwiftUL\n\tReact Native\n\tLAMP stack development?\nDemanded Projects\n\tPython / AI\n\tMobile\n\tJava application design\n\nNot Applied\n\tHandshake\n\t\thttps://nyu.joinhandshake.com/stu/saved_jobs\n\tLinkedin\n\t\thttps://www.linkedin.com/my-items/saved-jobs/\n\tIndeed\n\t\thttps://myjobs.indeed.com/saved\n\tLevels.fyi\n\t\tCarrier: https://www.levels.fyi/jobs/company/carrier/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=117528852126671558\n\t\tPalantir: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=139629633516511942\n\t\tJPMorgan: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=131475758095704774\n\t\tMastercard: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=137536852719477446\n\t\ti-Link: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=15&standardLevels=internship%2Centry&jobId=85444456032936646\n\t\tStark Tech: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=15&standardLevels=internship%2Centry&jobId=115924345760424646\n\t\tExtreme Reach: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=15&standardLevels=internship%2Centry&jobId=137421414064890566\n\tOthers\n\t\tLBMC intern: https://lbmcpc.applytojob.com/apply/noNEgK7Oj4/IT-Audit-Internship-Winter-2024?source=LINKR\n\nApplied\n\tHandshake\n\t\tReact developer\n\t\tParamount: SWE\n\t\tShopTaki: AI\n\t\tShopTaki: FrontEnd\n\t\tUrsaTech: SWE\n\t\tPIMCO: Analysi: https://nyu.joinhandshake.com/stu/jobs/8108533?utm_source=job_recommendation_mailer&utm_medium=email&utm_campaign=email\n\t\tLifeSci Intern: https://nyu.joinhandshake.com/stu/jobs/6926996\nhttps://lifesci.nyc/student-application#apply\n\t\tInvictech Mobile Dev: https://nyu.joinhandshake.com/stu/jobs/8012397\n\t\tCenturion SWD: https://nyu.joinhandshake.com/stu/jobs/7305406\n\t\tEitacies Java Dev: https://nyu.joinhandshake.com/stu/jobs/7894468\n\tLinkedin\n\t\tRevature SWE: https://www.linkedin.com/jobs/view/3676889251/?refId=EdxkrBW4nL69%2BtkwiiGOiA%3D%3D&midToken=AQEsq2Y0KbXSYQ&midSig=3am0vV7vCcjWU1&trk=eml-email_jobs_weekly_saved_jobs_01-saved_jobs-1-wsjr%7Eother%7Esaved%7Ejobs%7Eview%7Ejob%7Ecta&trkEmail=eml-email_jobs_weekly_saved_jobs_01-saved_jobs-1-wsjr%7Eother%7Esaved%7Ejobs%7Eview%7Ejob%7Ecta-null-gkt2k2%7Ellbfably%7E9j-null-jobs%7Eview\n\tIndeed\n\t\tJPMorgan Intern: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?jobId=131475758095704774&standardLevels=internship%2Centry\n\t\thttps://jpmc.fa.oraclecloud.com/hcmUI/CandidateExperience/en/sites/CX_1001/my-profile\n\t\tPepsiCo: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?offset=5&standardLevels=internship%2Centry&jobId=142485628928303814\n\t\tBerkeley Front-End https://www.indeed.com/viewjob?from=app-tracker-saved-applybtn&hl=en&jk=94a3b8ada0dcaa26&tk=1h7ouc0nvh4cs800\n\t\tTMC C#: https://www.indeed.com/viewjob?from=app-tracker-saved-applybtn&hl=en&jk=c8970bf8c339d89b&tk=1h7ouc0nvh4cs800\n\tLevels.fyi\n\t\tRamp: https://www.levels.fyi/jobs/title/software-engineer/location/new-york-usa?standardLevels=internship%2Centry&jobId=76301864779293382\n\tNYU Email\n\t\tPark Proj https://mail.google.com/mail/u/1/#search/park/FMfcgzGtwWGfJPFFLfVfbMSTlpwvKhJK\n\t\tRob Research\n\nInterview\n\tNYU IT Java: https://nyu.joinhandshake.com/stu/postings?page=1&per_page=25&sort_direction=desc&sort_column=default&query=Student%20Developer","cs\\main.txt":"Neck Pain\n\tbalancedPillow\n\tconstantMotion\n\tworkLess\n\tMassage, heatCold, movement, deskHeight, 2spin, 2x2push\n\t2x2diagonalPush, 4directionPush, linePress\nBeautiful Formula\n\tImprovements: (wash & moisterize, earlierWake, coldEyes)\n\tMorning exercise & shower\n\tHair: Balanced length & normal\n\nMotivation\n\tProgression\n\tOrientation\n\tUrgency\n\tPanopticon\nTasking\n\tTask List: Split into 20min sprints\n\tOpen-minded & tolerant\nProgression\n\tBreak Bubble\n\t\tFind more topics\n\t\tWatch project videos\n\t\tWeekly interview prep\n\tMeta-Progression: Analyze & improve progression\n\nDebug: Passtive Techniques\n\tCause Unknown: conscious zooming\nDebug: Active Techniques\n\tLack Of Info\n\t\tPrint pts\n\t\tResearch error msg\n\tDeletion Test\n\t\tFind location & cause\n\tRecreate Error\n\t\tEliminate distractions\n\t\tApproach original\n\tUnconscious Assumption\n\t\tSeparate parts\n\t\tWiggle all parts\n\tSurrender\n\t\tAccept workarounds\nDebug: Cognitive Errors\n\tDiversion: attention to diff\n\tHalt: unable to progress zooming\n\tAssumption: misinformation about code","jobs\\interview data.txt":"DATA\n\nSRI Data\n\tPersonal\n\t\tWhat made you do CS?\n\t\tWhy did you pick SRI?\n\t\tTell me about resume (hackathon)\n\tTechnical\n\t\tTell me about yourself\n\t\tExperience with web dev (front-end, react)\n\t\tExperience with resume items (tensorflow, mongoDB)\n\t\t\tHow may mongo differ with SQL?\n\nNYU Java IT Data: Mistakes\n\tPersonal\n\t\tTell me about yourself\n\tTechnical\n\t\tExperience with SQL\n\n\t\tStringbuilder vs stringbuffer\n\t\t\tStringbuilder: faster\n\t\t\tStringbuffer: synchronized\n\t\tnew String() memory\n\t\t\tHeap & string pool\n\t\t\tstack: ref to heap\n\t\tDiff between \"\" & new String()\n\t\t\t\"\": string pool\n\t\t\tnew: heap\n\n\t\tEmpty name .java file allowed?\n\t\t.class files: platform independent?\n\t\t\tJNI: not independent\n\t\t\tPlatform-specific behavior\n\t\tJava: Types of memory\n\t\t\tClass memory\n\t\t\tStack memory\n\t\t\tHeap memory\n\t\t\tDirect memory\n\t\t\tNative memory\n\t\tAll class loader types\n\t\t\tbootstrap: core java API classes\n\t\t\textension: from extension dirs\n\t\t\tapplication: from custom classpath\n\n\t\tJava: Other libs/frameworks\n\t\t\tjava swing\n\t\t\tJNI\n\t\t\tjava.util & java.io\n\t\tJava 1.8: Added features\n\t\tJDBC database datatypes\n\n\t\tConcept Explanation: Messy Wording\n\t\tCode explanation\n\n-----------------------------------------------------------------------------------------\nMAIN\n\nGeneral: Tell us about yourself / why CS\n\tintro, past\n\tclarinet, musical exp for others: joy, NJMEA\n\tHard coding, it is art, ideas and inspirations\n\tBack on stage, look forward to performing\n\t\tHi, my name is Sewon Kim and it is a pleasure meeting you. First, I would like to tell you a little bit about my past as a musician because I believe it is significant to who I am today.\n\t\tEver since I was a kid, I was fascinated in playing the clarinet. Creating musical expressions with my instrument gave me an irreplaceable sense of joy. Because of this, I actively engaged in musical performance, and even competed with other top clarinet players in my state at the NJMEA all-state auditions.\n\t\tTo me, computer science is more than hard coding; it is a form of art, full of ideas and inspirations. Computer science makes me feel like I'm back on the stage with my clarinet once again. And as a software engineer, I look forward to performing with all of you.\n\nApplication Dev: Tell us about yourself / why CS\n\tIntro\n\n\tArt of creation\n\tClarinet -> joy for musical experiences\n\n\tLike music: App dev more than hard coding\n\tArt: Innovations & ideas -> seamless experience\n\n\tWould be excited about enhancing tech for NYU community\n\tEager to bring perspective & philosophy; asset & team player\n\t\tHi, my name is Sewon and it is a pleasure meeting you today.\n\t\tFrom a young age, I've always been captivated by the art of creation. My journey began with learning how to play the clarinet, where I picked up a joy for creating musical experiences for my audience.\n\n\t\tIn the same way, I believe that application development is more than just hard coding. Much like musical performance, it is a form of art, built of ideas and innovations coming together to craft a seamless experience for the user.\n\n\t\tI would be excited about the opportunity to enhance the technology experience for the NYU community. I am eager to bring my unique perspective & philosophy to your amazing team and I hope to become a great asset & team player at NYU IT.\n\nApp Dev: What experiences make you suitable for this?\n\tCreated Quicknotes3 for myself\n\tHelped me in academic\n\n\tFelt rewarded: cause my creation had innovative\n\tDesire: Help NYU community, give them the experience\n\nTell me about your experience with (Skill)\n\tREST: Express.js & Next.js for video/audio\n\tDatabase: MongoDB & SQLite for metadata & music\nTell me about your (Experience)\n\tHackNYU: Facilitate communication in study groups\n\t\tWeb-based social media: Flask / MongoDB\n\n--------------------------------------------------------------------------------\nPERSONAL\n\nWhat are your strengths and weaknesses?\n\tCollaboration, musician ensembles and hackathon\n\t\tteamwork: Beyond yourself\n\t\tNot only do my part, but also allow others to join in\n\twell-documented, planning shared understanding\nA time I failed\n\tI was overwhelmed with coursework\n\tLearned: Set priorities and organize my schedule\n\t\tDepend on external resources instead of trying to overcome my problems solely through my own effort\n\t\tSmart work > hard work\nWhat makes an ideal team? What makes me an ideal player?\n\tAn ideal team has a clear sense of direction and fully utilizes every member's abilities towards that end. Each member must consider the bigger picture of the team project with as much consideration as they would do with their individual role.\n\t\tMy ability to understand and work in conjunction with other people\n\t\tMy role as a doer, handle the things that others are not necessarily willing to do\n\nHow do you handle pressure?\n\t\tPressure is a double-edged blade\n\tPut emotional biases aside\n\tFocus on the task at hand\nWhat makes you special?\n\tI do not place limits\n\tWhen I wanted to play the clarinet, parents and friends doubted me telling me that those who aren't born with natural talent cannot succeed\n\t\tWhen we're faced with obstacles that exceed our expectations, we tend to get discouraged\n\t\tI have exceled at exceeding the second step\nHow would other people describe you?\n\tMy peers and professors in the field of computer science tell me that I have a good sense of consideration for other people. I make this possible through methods of practical teamwork, such as well-documented code, vigorous code testing, and planning projects with teams from a higher level of view.\n\tHowever, I have a tendency to be overly abiding to conventions, especially when engineering computer algorithms. In order to overcome this shortcoming, I will work to expand my horizons by being more tolerant to new, unfamiliar ideas.\n\nTell me about your most significant accomplishment.\n\nWhat experiences do you have that makes you fit for this role?\n\nWhy did you decide to intern at this company?\n\tI am inspired by SRI's deep history of innovation and non-profit vision\n\tI am aware that your company was responsible for the development of Apple's siri along with the iris security scanner\n\tWould like to apply my knowledge of computer science in order to take part in the various projects within this company.\n\nSituation in which attention to detail was important\n\tOne instance was my development of an application called pyaimbot\n\tRun-time stringent application, attention to optimization was critical to the working program\n\nWhat are your strengths and weaknesses?\n\tStrength: A good team player\n\tAs a musician who has played in group ensembles in the past,\n\tI've grown into software engineer who can integrate with the team\n\tEx 1: Well-documented, readable code\n\tEx 2: Investment to familiarize with codebase\n\tEx 3: Notify & update others when critical decisions\n\n\tStrength: Adaptability\n\n\tWeakness: overly immersed in work -> trouble transitioning\n\tSolution: Organized schedules of tasks\n\n\tWeakness: underestimate time & effort required to complete tasks\n\tSolution: breaking down tasks & workloads into smaller bits\n\nWhat experiences do you have that makes you fit for this role?\n\tA notable experience of mine that makes me fit for this role is my creation of a web application that provides students with a practical and intuitive method of taking notes for their coursework. This application improves the studying habits of all students alike, exponentially boosting their studying capabilities.\n\tSimilarly, I have also worked with a group of 3 computer scientists to create a social media that allows its users to create and engage in study groups, using python's web application framework Flask and Mongo Database.\n\tI believe my experiences are well in conjunction with SRI International's vision creating practical, innovative solutions towards real world problems. Going forward, I would like to join this train of innovation, am become a useful asset of your software engineering team.\n\n--------------------------------------------------------------\nGENERIC TECHNICAL\n\nWhat programming languages are you proficient in? Which is your favorite and why?\n\tMost proficient in Java, C#, Python, Javascript.\n\tFav is java: balance between abstraction and necessary knowledge\n\tI like its object oriented nature, for adding structure and maintainability to code bases and promoting code reusability.\nFav programming language\n\tAdept at many, C#\n\tRich library support (GUI, file) -> efficiency, practicality\n\tOOP (unique, sublime getters/setters) -> intuitive and informative abstraction\n\tStrongly typed nature -> reduce runtime errors\n\nWhat is OOP?\n\tProgramming paradigm that uses objects to represent real world entities\n\tOOP encapsulates the object's implementations of properties and functionalities, often in the form of data fields & methods\nWhat is inheritance?\n\tInheritance: Allows for classes to be derived from another\n\tDerived class can define its own distinguishing characteristics\nWhat is polymorphism?\n\tPolymorphism: objs take on forms of different classes while still taking on characteristics of the original class\n\tCompile Time Polymorphism: Method overloading\n\tRun Time Polymorphism: Method overriding\nWhat is a class? A super-class?\n\tClass: blueprint for objects, defining their characteristics\n\tSuperclass: Class to inherit characteristics from, including fields and functionalities\nWhat is a default constructor? What is a conversion constructor?\n\tDefault constructor: No args\n\tConversion constructor: convert instance of one class to another\nWhat is multiple inheritance? What are its advantages and disadvantages?\n\tSubclass inherits from more than one superclass.\n\tAdvantage: allows classes to inherit characteristics of multiple\n\tDisadvantage: naming collisions\nHow are C and C++ different? Which do you prefer?\n\tC++ object oriented, C procedural\n\tPrefer C++ because OOP unlike functional, can maintain state and functionality within an organized container\n\tAbstract otherwise complex programs\n\n----------------------------------------------------------------------------------\nDATABASE QUESTIONS\n\nDiff Between DB & DBMS\n\tDB: Structured collection of data, stored in computer storage\n\tDBMS: Software for users to interact with DB, functionalities for data retriebval, insertion, deletion, etc.\nWhat is normalization? Why is it important?\n\tNormalization: Progress of organizing database, by separating into distinct tables, based on logical groups\n\tImportance: Allows for less redundancies, and makes database structure more manageable, gives greater meaning to the DB organization\nExplain different normal forms in normalization.\n\t1F, 2F, 3F ... (databases notes)\nWhat is ACID in databases? Tell me about each property.\n\tACID: Acronym for fundamental principles of ensuring a reliable processing in a transactional DB system\n\t\tAtomicity: Each transaction is one unit, pass or fail\n\t\t\t//if any failure, no changes\n\t\tConsistency: After transaction, no data integrity violation\n\t\tIsolation: Concurrent transactions; sequential executions\n\t\tDurability: After commit changes, permanent & will survive failures\nDefine SQL and its role in databases.\n\tSQL: Structured query language\n\tRole: Lang to interact with DB (queryingm insert, update, delete, define DB table structures)\nHow to differentiate between primary & foriegn key?\n\tPrimary: Unique for each row, not null\n\tForeign: Much match the primary keys of another table, ensuring referential integrity\nWhat is indexing? Why is it important?\nDescribe diff between clustered & non-clustered index.\nWhat are transactions and why are they important?\nHow do you implement ACID in database?\nWhat is a database view? How would you use one?\nWhat is a deadlock? How to avoid?\nHow would you model hierarchical data in relational database?\n\n-----------------------------------------------------------------------------------\nWEB QUESTIONS\n\nWhat happens when you enter a URL into a browser\n\tDNS lookup: URL -> ip address\n\tHTTP: Browser -> Server\n\tWebpage Content: Server -> Browser\n\nInternet\n\tGlobal network of connected computers\nWorld wide web\n\tService on internet: interconnected resources linked by links\nIP Address\n\tID that identifies each computer using internet\nDomain Name System\n\tURL -> IP Address\nBrowsers\n\tSoftware apps to navigate www\nDevices For Internet\n\tModems: Connect devices to internet\n\tRouter: Route data between local & external networks\n\tInternet Service Provider: Company that provide internet\n\n\tVPN: Secure connection to network\n\tFirewall: Network security that filters network input/output\n\tCloud Computing: Computing services over the internet\n\tContent Delivery Network: Location distributed servers for high performance/availability\n\tInternet of Things: Connect to internet by on/off\n\nWhat is a server?\n\tSoftware app on machine to provide resources to others\nDomain Registration\n\tChoose domain name, register by domain registrar\nDNS Configuration\n\tLink domain to server's IP address\nWeb Server Setup\n\tGet software to handle HTTP reqs\nUploading Content\n\tUpload website files to server (FTP, SFTP)\n\nHosting Types\n\tShared Hosting: Multi websites on server\nVPS Hosting\n\tVirtualization tech: private resources on shared server\nDedicated Hosting\n\tEntire server for website\nCloud Hosting\n\tResources spread among multi servers\nManaged Hosting\n\tProvider handles all technical aspects (ex: Wordpress)\n\n-------------------------------------------------------------------------\nJAVASCRIPT QUESTIONS\n\nDiff between forEach() and map()\n\tBoth iterate over arr, taking in callback to be run with each element\n\tforEach: Does not return in callback\n\tmap: Returns in callback, forms new array based on results\nWhat is a promise?\n\tA way to write and express async code\n\t\tRepresents a value request to be resolved in the future\n\n\tnew Promise(func(resolve, reject))\n\t\tresolve(res): Send to .then()\n\t\treject(err): Send to .catch()\n\t.then(func(res)): Resolve handling callback\n\t.catch(func(err)): Error handling callback\n\n--------------------------------------------------------------------------\nREACT QUESTIONS\n\nWhat is Virtual DOM?\n\tLightweight representation of DOM for efficient update/rendering process\n\n\tWhen state/props change in comp, new virtual DOM created\n\tReconciliation: new virtual DOM compared with previous virtual DOM; real DOM is updated with minimal change\nWhat are Components?\n\tIndependent, reusable pieces of UI & logic; makes codebases organized & maintainable\nWhat is JSX\n\tSyntax extension for js; allows writing UI structures in HTML/XML\n\tTranspiled to regular javascript at runtime\nWhat are react hooks?\n\tFunctions that let devs hook into React state/lifecycle features for comps\n\t(useState, useEffect, useContext)\n\nClass comps vs function comps\n\tClass comp: UI by render(), state / lifecycle\n\tFunc comp: return UI, state by hooks\nExplain the lifecycle methods\n\tcomponentDidMount: after created\n\tcomponentDidUpdate: after update\n\tcomponentDidUnmount: before removal\nHow are events handled?\n\tReact makes wrappers for DOM events\n\tin JSX: camelCase props (onClick, onMouseEnter); set to a callback func\n\n\tBrowser-independent: consistency\n\nHigher order comps?\n\tDesign pattern where comp wraps after comp to inherit behavior\n\tMeans of adding features/functionality to existing comp\nRender props?\n\tFunction comp sent as prop\n\trendered by calling the function with appropriate parameters\nFragment?\n\tWay to return multiple elements from a comp without extra DOM node\n\t<> </> OR <React.Fragment>\nPortals?\n\tWay to render children into a DOM node outside parent DOM hierarchy\n\tcreatePortal method\nSuspense / lazy loading?\n\tDefer rendering of some parts until needed; performance benefit\nError Boundaries?\n\tComps to catch js errors, display error UI\nForward refs?\n\tPass refs down to child comps\nConcurrent Mode?\n\tInterrupt a long render to handle higher priority event\nWhat is redux? How does it relate to React?\n\tPredictable state container for js; helps manage state of app\n\tReact comps can commit to Redux store\nHow to handle forms in React\n\tHandled by controlled comps; form data handled by React comp\n\nWhat is One-way Data Binding?\n\tData flows in one direction for better control\n\n-----------------------------------------------------------------------------------\nJAVA QUESTIONS\n\nExperience with JEE\n\tRESTful APIs with JAX-RS at company project\n\tDocumentation with distributed systems\nExperience with REST API / Databases\n\tREST: Express, next.js serverless func: web application serverside support\n\tDatabase: Music streaming project; video binary storage, metadata (MongoDB, SQLite, AWS s3)\nExperience with HTML, JS, CSS\n\tSRI Full Stack: used in tandem with PHP, frontend material (bootstrap, SASS, jquery)\n\tProjects: React, css modules\nExperience with Postman & ServiceNow\n\tPostman: Overcome difficulties of API testing with express\n\tServiceNow: Used similar JIRA at SRI\nExperience with application development\n\tQuicknotes3: C# windows forms, handled my own demands\n\t\tBoth perspectives (developer, client): insight into SWE\nWhich java proj did you enjoy the most?\n\tAVL BST: Only taught the theory, couldn't hold my curiosity\n\t\tLearning process felt rewarding\n\nHow to prevent method overriding\n\tfinal keyword\nDiff between abs class & interface\n\t1 abs class, multiple interfaces\n\tinheritance, functionality contractor\nChecked vs Unchecked Exception\n\tChecked: Beyond control, anticipated\n\tUnchecked: Programming error, unexpected\nDiff between Runnable & Callable interfaces\n\tRunnable: return void\n\tCallable: return generic type\nHow to ensure thread safety\n\tImmutable objs\n\tsynchronized keyword: 1 at a time\n\tLocks: prevent simultaneous access\nTell me the states in a thread lifecycle\n\tNEW: thread created\n\tRUNNABLE: start() run\n\tBLOCKED: waiting for lock\n\tWAITING: waiting for diff thread\n\tTIMED_WAITING\n\tTERMINATED: run() completes\nWhat are optional types?\n\tOptional class: placeholder for null, avoid null check\nDiff between stack & heap mem\n\tStack: method lifetime, faster\n\tHeap: ref in stack, garbage collected\nWhat are wrapper classes?\n\tPrimitives -> Objs\n\tUtility methods\n\nDiff between List & Set\n\tList: ordered, positional access\n\tSet: unordered, no dupes\nWhy use ConcurrentHashMap\n\tMultithreaded, doesnt lock\nDiff between ArrayList & Vector\n\tArrayList: not thread-safe\n\tVector: time overhead\n\nTell me about APIs in java\n\tImportable functionalities\n\t(java.lang, java.util, java.io)\nWhat is the java memory model?\n\tShared vars in multithreading\n\tUse main mem: for latest updates\n\t(synchronized, volatile)\nExplain the java class loader\n\tDynamically load classes\n\tLinks binaries\nUsed a request dispatcher?\nTell me about JRE, JVM, JDK, JIT, hotspot\n\tJRE: Minimal kit, JVM, API\n\tJDK: Tools for java (javac, java, jar)\n\tJVM: Run java bytecode (platform-independent)\n\tJIT: bytecode -> machine code\n\tHotSpot: Optimizer, compiles if peak performance\n\nExplain Singleton pattern\n\tClass: 1 instance, use that only\n\tprivate constructor, static instance access\nExplain Factory pattern\n\tInterface & subclasses: interface variable has dynamic type\nExplain Observer pattern\n\tInterface: require update method, update subclasses accordingly","QuickNotes3\\nyu-it-job-prep.txt":"Post\n\thttps://nyu.joinhandshake.com/stu/postings?page=1&per_page=25&sort_direction=desc&sort_column=default&query=Student%20Developer\n\nQualities\n\tTechnical: Java, JEE, HTML, JS, CSS, REST API, Postman, ServiceNow, application, database\n\tRoles: troubleshooting, developing, test web apps\n\tSoft: Teamwork, customer support, community helping\n\nInformation\n\tNYU IT -> BPA\n\tPhilosophy: Serve NYU community by upholding tech & data\n\t\tPractiality: Improve user experience by testing the application user perspective\n\nEnd Questions\n\tContemplating a 5hr/week tutoring job; 15 or 20 hrs a week?\n\tWhat others skills should I learn prior?\n\nTell me about yourself / Why CS?\n\tIntro\n\n\tArt of creation\n\tClarinet -> joy for musical experiences\n\n\tLike music: App dev more than hard coding\n\tArt: Innovations & ideas -> seamless experience\n\n\tWould be excited about enhancing tech for NYU community\n\tEager to bring perspective & philosophy; asset & team player\n\t\tHi, my name is Sewon and it is a pleasure meeting you today.\n\t\tFrom a young age, I've always been captivated by the art of creation. My journey began with learning how to play the clarinet, where I picked up a joy for creating musical experiences for my audience.\n\n\t\tIn the same way, I believe that application development is more than just hard coding. Much like musical performance, it is a form of art, built of ideas and innovations coming together to craft a seamless experience for the user.\n\n\t\tI would be excited about the opportunity to enhance the technology experience for the NYU community. I am eager to bring my unique perspective & philosophy to your amazing team and I hope to become a great asset & team player at NYU IT.\nWhy us? / What experiences make you suitable for this?\n\tCreated Quicknotes3 for myself\n\tHelped me in academic\n\n\tFelt rewarded: cause my creation had innovative\n\tDesire: Help NYU community, give them the experience\nTell me about your experience with (Skill)\n\tJava: SRI project (Java/C++/Typescript)\n\t\tLarge codebase: maintaining & documenting\n\t\tGradle/Ant/Docker buildtool\n\tJEE: Java API for server functionality\n\tREST / Database: AudioCanvas\n\t\tREST: Express.js & Next.js for video/audio\n\t\tDatabase: MongoDB & SQLite for metadata & music\nTell me about your (Experience)\n\tHackNYU: Facilitate communication in study groups\n\t\tWeb-based social media: Flask / MongoDB\n\n-----------------------------------------------------------\nGENERIC TECHNICALS\n\nWhat programming languages are you proficient in? Which is your favorite and why?\n\tMost proficient in Java, C#, Python, Javascript.\n\tFav is java: balance between abstraction and necessary knowledge\n\tI like its object oriented nature, for adding structure and maintainability to code bases and promoting code reusability.\nWhat is OOP?\n\tProgramming paradigm that uses objects to represent real world entities\n\tOOP encapsulates the object's implementations of properties and functionalities, often in the form of data fields & methods\nWhat is inheritance?\n\tInheritance: Allows for classes to be derived from another\n\tDerived class can define its own distinguishing characteristics (overriding)\nWhat is polymorphism?\n\tPolymorphism: objs take on forms of different classes while still taking on characteristics of the original class\n\tCompile Time Polymorphism: Method overloading\n\tRun Time Polymorphism: Method overriding\nWhat is a class? A super-class?\n\tClass: blueprint for objects, defining their characteristics\n\tSuperclass: Class to inherit characteristics from, including fields and functionalities\nWhat is a default constructor? What is a conversion constructor?\n\tDefault constructor: No args\n\tConversion constructor: convert instance of one class to another\nWhat is multiple inheritance? What are its advantages and disadvantages?\n\tSubclass inherits from more than one superclass.\n\tAdvantage: allows classes to inherit characteristics of multiple\n\tDisadvantage: naming collisions\nHow are C and C++ different? Which do you prefer?\n\tC++ object oriented, C procedural\n\tPrefer C++ because OOP unlike functional, can maintain state and functionality within an organized container\n\tAbstract otherwise complex programs\n\n----------------------------------------------------------------------\nSPECIFIC TECHNICALS\n\nExperience with JEE\n\tRESTful APIs with JAX-RS at company project\n\tDocumentation with distributed systems\nExperience with REST API / Databases\n\tREST: Express, next.js serverless func: web application serverside support\n\tDatabase: Music streaming project; video binary storage, metadata (MongoDB, SQLite, AWS s3)\nExperience with HTML, JS, CSS\n\tSRI Full Stack: used in tandem with PHP, frontend material (bootstrap, SASS, jquery)\n\tProjects: React, css modules\nExperience with Postman & ServiceNow\n\tPostman: Overcome difficulties of API testing with express\n\tServiceNow: Used similar JIRA at SRI\nExperience with application development\n\tQuicknotes3: C# windows forms, handled my own demands\n\t\tBoth perspectives (developer, client): insight into SWE\nWhich java proj did you enjoy the most?\n\tAVL BST: Only taught the theory, couldn't hold my curiosity\n\t\tLearning process felt rewarding\n\nHow to prevent method overriding\n\tfinal keyword\nDiff between abs class & interface\n\t1 abs class, multiple interfaces\n\tinheritance, functionality contractor\nChecked vs Unchecked Exception\n\tChecked: Beyond control, anticipated\n\tUnchecked: Programming error, unexpected\nDiff between Runnable & Callable interfaces\n\tRunnable: return void\n\tCallable: return generic type\nHow to ensure thread safety\n\tImmutable objs\n\tsynchronized keyword: 1 at a time\n\tLocks: prevent simultaneous access\nTell me the states in a thread lifecycle\n\tNEW: thread created\n\tRUNNABLE: start() run\n\tBLOCKED: waiting for lock\n\tWAITING: waiting for diff thread\n\tTIMED_WAITING\n\tTERMINATED: run() completes\nWhat are optional types?\n\tOptional class: placeholder for null, avoid null check\nDiff between stack & heap mem\n\tStack: method lifetime, faster\n\tHeap: ref in stack, garbage collected\nWhat are wrapper classes?\n\tPrimitives -> Objs\n\tUtility methods\n\nDiff between List & Set\n\tList: ordered, positional access\n\tSet: unordered, no dupes\nWhy use ConcurrentHashMap\n\tMultithreaded, doesnt lock\nDiff between ArrayList & Vector\n\tArrayList: not thread-safe\n\tVector: time overhead\n\nTell me about APIs in java\n\tImportable functionalities\n\t(java.lang, java.util, java.io)\nWhat is the java memory model?\n\tShared vars in multithreading\n\tUse main mem: for latest updates\n\t(synchronized, volatile)\nExplain the java class loader\n\tDynamically load classes\n\tLinks binaries\nUsed a request dispatcher?\nTell me about JRE, JVM, JDK, JIT, hotspot\n\tJRE: Minimal kit, JVM, API\n\tJDK: Tools for java (javac, java, jar)\n\tJVM: Run java bytecode (platform-independent)\n\tJIT: bytecode -> machine code\n\tHotSpot: Optimizer, compiles if peak performance\n\nExplain Singleton pattern\n\tClass: 1 instance, use that only\n\tprivate constructor, static instance access\nExplain Factory pattern\n\tInterface & subclasses: interface variable has dynamic type\nExplain Observer pattern\n\tInterface: require update method, update subclasses accordingly","cs\\java.txt":"Resources\n\tDocs: https://docs.oracle.com/en/java/javase/19/docs/api/index.html\n\nAccess Modifiers\n\tPublic: Access anywhere\n\tProtected: Same package & subclass\n\tPackage-Private (default): Same package\n\tPrivate: Inner helper class\n\n\t//from outsider class\n\tInner: outer.new Inner()\n\tStatic Inner: new Outer.Inner()\n\tMethod Inner: //create in method, access in method\nGarbage Collection\n\tCollected When: No strong references / unreachable\n\tFinalizer: //run on garbage collection\n\t\t@Override\n\t\tprotected void finalize() { ... }\n\n\tStrong Ref: Exists as variable\n\tWeak Ref: Ref to strongRef\n\tSoft Ref: Ref to strongRef, collected if mem needed\n\tPhantom Ref: ???\n\nInstance Initialization\n\tclass Class {\n\t\t{ ... } //runs first to initialize fields\nStatic Initializaton\n\tclass Class {\n\t\tstatic { ... } //runs first to initialize static fields\n\nInitialization: Runs\n\tStatic: Run once\n\tInstance: Run on constructor\nInitialization: Inheritance\n\tOrdering: (\n\t\tparentStatic\n\t\tchildStatic\n\t\tparentInstance\n\t\tchildInstance\n\t\tother code\n\t)\n\nAbstract Class\n\tabstract class Class {\n\t\tabstract void abstractMethod(params);\n\nInheritance\n\tOverride:\n\t\t@Override\n\t\tpublic void method() { ... }\n\tAccess Superclass: super\n\t\n\t//One superclass, multi interfaces\n\n\tString || Super Requirement: <? super String>\n\tSub Requirement: <? extends String>\n\tCall Super Constructor: super() //if not called, default constructor will be used\nInheritance: Overriding\n\t//Final: cannot be overridden\n\t//More Restrictive Access: cannot be overridden\n\tMethods: Called by run-time type\n\tFields / StaticMethods: Called by compile-time type\nInheritance: Inner Classes\n\tInner: Access to outer\n\t\tAccess From Outer: new Inner()\n\t\tAccess From Outside: new Outer.Inner()\n\tStatic inner: Access to statics in outer\n\t\tAccess From Outer/Outside: Inner.method()\n\n\tInner inherits Outer: Inherits all members of outer\n\t//Inner not affected by outer's inheritance\n\n\tOutsider inherits Outer.Inner: //constructor\n\t\tpublic Outsider(Outer outer) { outer.super(); }\nPolymorphism: method & data field rules\n\tCompile-Time Polymorphism: Method overloading\n\tRun-Time Polymorphism: Method overriding\n\tMethods: Priority to subclass (object type)\n\tField Hiding: Overriding of data field\n\t\tPriority to subclass (var type)\n\nInterface\n\tpublic interface Interface {\n\t\tint CONSTANT = 3; //public, static, final\n\t\tvoid method(params); //public, abstract\n\t\tdefault void method(params) { ... }\n\t\tstatic void method() { ... } //belongs to interface\n\n\t//no constructors or initializers\n\t//Private field: not allowed\n\t//More retrictive access: cannot be overridden\n\n\tFields: Static & final by default\n\tDefault: If not implemented, use default\n\nThreading\n\tThread (java.util)\n\n\tpublic class ThreadClass extends Thread {\n\t\tpublic ThreadClass() { ... }\n\n\t\t@Override\n\t\tpublic void run() { ... }\n\n\tSetup: new Thread(func()) -> thread\n\tSetup: new ThreadClass() -> thread\n\t\tStart Thread: .start() //will activate run()\n\t\tWait For Thread End: .join()\n\t\tRunning: .isAlive() -> bool\nThreading: Locks\n\tSync Method: public synchronized void method() { ... } //one thread at a time\n\tSync Block:\n\t\tprivate final Object lock = new Object()\n\t\tsynchronized (lock) { ... } //one thread at a time\n\n\tReentrantLock (java.util.concurrent.locks)\n\t\tnew ReentrantLock();\n\t\t\tLock: .lock(); //wait til lock acquired\n\t\t\tUnlock: .unlock(); //unlock\n\t\ttry { ... } //code here; protect from exceptions\n\t\tfinally { lock.unlock(); }\n\tCondition\n\t\tnew Condition(reentrantLock)\n\t\t\tWait For Signal: .await() //give way to other threads\n\t\t\tThrow Signal: .signal()\n\n\tThread safety\n\t\tAtomic Variables: Thread safe vars\n\t\tImmutable Objects\n\t\tThread-local variables: Local to each thread\n\t\tConcurrent data structures\n\t\tSynchronization / reentrant locks\n\n-----------------------------------------------------------------------\n\nImport\n\t//only import if in diff package\n\tpackage packagePath;\n\timport packagePath.ClassName;\n\ninterface Consumer<T>\n\tCreate: param -> { ... }\n\ninterface Iterable<T>\n\t.iterator() -> itr\n\t\tHas Next: .hasNext() -> bool\n\t\tGet Next: .next() -> T\n\tForEach: for (T val : iterable) { ... }\ninterface Collection<T>\n\t.add(T val)\n\t.remove(T val)\n\t.contains(T val) -> bool\n\t.size() -> int\n\tAdd All: Collections.addAll(collection, item1, ...)\n\tTo Array: .toArray(new T[0])\ninterface List<T>\n\tAccess: .get(int index) -> T val\n\tAdd At Index: .add(int index, T val)\n\tIndex Of: .indexOf(T val)\n\tSubList: .subList(int start, int end) -> list //end exclusive\n\nnew ArrayList<T>() (java.util)\n\tAccess: .get(index) -> val\n\tEdit: .set(index, val)\n\tAdd: .add(val)\n\tRemove: .remove(index)\n\tContains: .contains(val) -> bool\n\tLength: .size() -> int\n\n\tStream Convert: ArrayList.stream() -> Stream\n\t\tFilter: .filter(func -> bool) //only trues allowed\n\t\tSum: .sum() -> int sum //only with int streams\nnew PriorityQueue<T>()\n\tEnqueue: .offer(val)\n\tDequeue: .poll() -> val //removes top\n\tTop: .peek() -> val\n\tLength: .size() -> int\nnew HashSet<T>()\n\tAdd: .add(val)\n\tRemove: .remove(val)\n\tContains: .contains(val) -> bool\n\tLength: .size() -> int\n\tCombine: .addAll(set)\nnew HashMap<K, V>()\n\tAccess: .get(key) -> val //null if doesnt exist\n\tAdd: .put(key, val)\n\tRemove: .remove(key)\n\tContains: .containsKey(key) -> bool\n\n-------------------------------------------------------------------\n\nStringBuilder (java.lang)\n\tnew StringBuilder() -> sb\n\t\tAdd: .append(string)\n\t\tGet Str: .toString() -> string\n\nScanner (java.util)\n\tnew Scanner(System.in)\n\t\tInt: .nextInt() -> int\n\t\tString: nextLine() -> str\n\t\tContinue: .nextLine() //use after each read\n\nFile (java.io)\n\tnew File(path) -> file\n\t\tGet Path: .getPath() -> string\n\t\tGet Name: .getName() -> string\n\t\tIs File: .isFile() -> bool\n\t\tChildren: .list() -> string[] //names, not paths\n\t\tCreate Directory: .mkdir() -> bool //false if failed\n\nFileReader (java.io)\n\tRead Setup: new FileReader(path) -> fileReader\n\t\tRead: .read() -> int //char as int; -1 if no chars left\n\t\tClose: .close()\n\tWrite Setup: new FileWriter(path) -> fileWriter\n\t\tWrite: .write(string)\n\nSwing\n\t* (javax.swing)\n\t* (java.awt.event)\n\tFlowLayout (java.awt)\n\t\n\tCreate Window: new JFrame(\"Title\") -> frame\n\t\tAdd Comp: .add(comp)\n\t\tShow: .setVisible(true)\n\t\tSize: .setSize(w, h)\n\t\tLayout: .setLayout(layout) //flexbox\n\t\tStop On Close: .setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)\n\tPanel: new JPanel() -> panel\n\t\tAdd Comp: .add(comp)\n\n\tLabel: new JLabel(\"text\") -> label\n\tInput: new JTextField(charCount) -> textField\n\t\tSet Value: .setText(string)\n\t\tGet Value: .getText() -> string\n\t\tSelect Event: .addFocusListener(new FocusListener() {\n\t\t\t@Override\n\t\t\tpublic void focusGained(FocusEvent e) { ... }\n\t\t\t@Override\n\t\t\tpublic void focusLost(FocusEvent e) { ... }\n\tButton: new JButton(\"text\") -> button\n\t\tClick Event: .addActionListener(func(e))\n\tFile Input: new JFileChooser() -> chooser\n\t\t.showOpenDialog(frame) -> int code\n\t\tif (code == JFileChooser.APPROVE_OPTION) {\n\t\t\tchooser.getSelectedFile() -> File\n\t\tAllow Directories: .setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES)\n\n\tFlowLayout: new FlowLayout() //horizontal\n\tBoxLayout: new BoxLayout(parentComp, BoxLayout.Y_AXIS) //vertical\n\nExecutor\n\tExecutors.newSingleThreadExecutor()\n\t\t.submit(func() -> res) -> Future<resType>\n\t\t.shutdown()\nFuture<T>\n\t.get() -> T //waits til available\n\nCompletableFuture<T>\n\t.supplyAsync(func() -> res)\n\t\t.thenApplyAsync(func(res) -> CompletableFuture)\n\t\t.thenAcceptAsync(func(res1))\n\n---------------------------------------------------------------\n\nMaven: pom.xml\n\tproject.dependencies.dependency\n\t\tgroupID: organization identifier\n\t\tartifactID: dependency identifier\n\t//checks for dependencies in (local maven, maven)\n\n\tbuild.plugins.plugin\n\t//plugin: affects build lifecycle\n\n--------------------------------------------------------------\n\nSpring Boot: Create\n\tGo https://start.spring.io/;\n\t(maven, java, 3.1.3, Artifact/Name: ProjName, Package Name: com.exmaple.ProjName, jar, java 11)\n\tAdd dependency (Spring Web)\n\tGENERATE\n\n\tOpen with intellij\n\tpom.xml: Make sure it exists:\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\tCreate REST class:\n\t\tpackage com.example.demo;\n\n\t\timport org.springframework.web.bind.annotation.GetMapping;\n\t\timport org.springframework.web.bind.annotation.RestController;\n\n\t\t@RestController\n\t\tpublic class MyController {\n\n\t\t\t@GetMapping(\"/hello\")\n\t\t\t\tpublic String hello() {\n\t\t\t\treturn \"Hello, World!\";\n\t\t\t}\n\t\t}\n\tRun: Run the class with @SpringBootApplication\nSpring Boot: Project\n\tsrc/main/java: java code\n\tsrc/main/resources: config, static assets, others\n\nSpring Boot: Routes\n\t* (org.springframework.web.bind.annotation)\n\n\t@RestController\n\t@RequestMapping(\"/basePath\")\n\tpublic class ... {\n\t\t@GetMapping(\"/path\", method = RequestMethod.POST)\n\t\t\t//Post: @PostMapping\n\t\t\t//dynamic url: \"{id}\"\n\t\tpublic String ...() { return returnData; }\n\t\t\t//List return -> JSON array\n\t\t\t//Object return -> JSON obj\n\nSpring Boot: Classes\n\tComponent (org.springframework.stereotype) //generic\n\tService (org.springframework.stereotype) //logic for others\n\tController (org.springframework.stereotype) //web http controller\n\tRepository (org.springframework.stereotype) //database manager\n\n\t@Component //(Service, Controller, Repository)\n\tpublic class ... { ... }\n\nSpring Boot: Constructors\n\tpublic ClassName(BeanType bean) { ... } //bean found automatically\nSpring Boot: Create Beans\n\t@Configuration\n\tpublic class ... {\n\t\t@Bean\n\t\tpublic Type beanName() { return \"\"; };\nSpring Boot: Autowiring\n\tAutowired (org.springframework.beans.factory.annotation)\n\nSpring Boot: View Beans\n\tApplicationContext apc = SpringApplication.run(...)\n\tfor (String beanName : apc.getBeanDefinitionNames()) { ... }","QuickNotes3\\csharp-keyboard-input.txt":"int WH_KEYBOARD_LL\nint WM_KEYDOWN\nIntPtr hookId = null\n\nIntPtr SetWindowsHookEx(KEYBOARD, LLKbP, module_handle, 0): hook\nbool UnhookWindowsHookEx(hookId): unhook\nIntPtr CallNextHookEx(handle, eventCode, param, param): Pass on to the next hook of event\nIntPtr GetModuleHandle(moduleName)\ndelegate IntPtr LowLevelKeyboardProc(nCode, wParam, key): callback\n\tnCode >= 0: Can handle on your own\n\nProcess: Instance of running program\nModules: DLL lib to be shared by processes","jobs\\documents&tracker.txt":"Demanded Knowledge\n\tWeb\n\t\tWeb fundamentals\n\t\tJavascript detailed system\nDemanded Skills\n\tFrontend\n\t\tAngular\n\t\tUI/UX\n\tBackend\n\t\tREST / GraphQL / Backend java\n\t\tSQL / MYSQL / SQLite\n\t\tLAMP stack development?\n\t\tAzure\n\t\tAJAX\n\tMobile\n\t\tSwift, SwiftUI\n\t\tReact Native\nDemanded Projects\n\tPython / AI\n\tMobile\n\tJava application design\n\nResume Optimizations\n\tExperience > education\n\tExperience/Project: Impact oriented\n\tQuantity Metrics: Best presentation\n\tQuick Job Tailoring\nCover Letter Optimization\n\tFigure out role manager\n\tEngaging hook: interesting to manager\n\tBP: Quantify contributions\n\nResume\n\tGeneral 8-23: https://docs.google.com/document/d/1j_BkZ4BtdzSt0oE4azpq6vGh8z_h_b0eOAU_eEdq6jw/edit\n\n\tWeb / Mobile 8-21: https://docs.google.com/document/d/1m6ZuiEATsDiRJCxIIBvHKuOObOHg3phl-e6SSzqQvyg/edit\n\n\tApp Dev 8-11: https://docs.google.com/document/d/1XCYprWEwIw2e_Ct8-KD6ViX1NrBqK6YexfpN7BU2kq4/edit\n\nCover Letter\n\tApp Dev 7-20: https://docs.google.com/document/d/1G13WDXBgoN9LryOQsj5f6xu5Od3YBy3i_sgXgNQnY5c/edit\n\n\tWeb 8-22: https://docs.google.com/document/d/1KafvZzGzve6iq-7HqpGluNXyA890O0sU0WNGfmxY5ts/edit\n\nTracker\n\thttps://docs.google.com/document/d/11yJ8Tf0HcIWUuY8hiqUawi757PfjHbtMI9qoufABNSs/edit\n\nNot Applied\n\tHandshake\n\t\thttps://nyu.joinhandshake.com/stu/saved_jobs\n\tLinkedin\n\t\thttps://www.linkedin.com/my-items/saved-jobs/\n\tIndeed\n\t\thttps://myjobs.indeed.com/saved\n\nCompany Websites\n\tGoogle\n\t\thttps://www.google.com/about/careers/applications/jobs/results/?src=Online/Google%20Website/ByF&utm_source=Online%20&utm_medium=careers_site%20&utm_campaign=ByF&company=Fitbit&company=Google&company=YouTube&distance=50&employment_type=INTERN\n\tMicrosoft\n\t\thttps://careers.microsoft.com/v2/global/en/programs/students.html\n\tAmazon\n\t\thttps://www.amazon.jobs/en/teams/internships-for-students\n\tFacebook\n\t\thttps://www.metacareers.com/areas-of-work/Facebook%20App/?p[divisions][0]=Facebook&divisions[0]=Facebook#openpositions\n\tApple\n\t\thttps://www.apple.com/careers/us/\n\tNetflix\n\t\thttps://jobs.netflix.com/\n\n\tBig Tech Programs\n\t\thttps://scholarshiptrack.org/2020/12/27/top-13-companies-offering-student-internships-in-tech/","QuickNotes3\\internship-meeting.txt":"Job Find\n\tWasserman Industry Guides\n\n\twasserman industry guides, company websites\nNetwork\n\tLearning from similar ppl\n\tLong term connection\n\n\temployer events, violet network, professors, cold msg\n\tInformational interview\nDocuments\n\tWasserman cover letter guide","cs\\database.txt":"SQL: Create Table\n\tCREATE TABLE table (\n\t\tcol1 datatype constraints[],\n\t\t...\n\t);\nSQL: Datatypes\n\tInt: INT\n\tString: VARCHAR(maxLen)\n\tDate: DATE\nSQL: Constraints\n\nSQL: Select\n\tSELECT col1, ...\n\tFROM table\n\tWHERE condition;\n\n\t//Unique: SELECT DISTINCT ...\n\t//Add Vals: SELECT val AS colName, ...\nSQL: Insert\n\tINSERT INTO TableName (col1, ...)\n\tVALUES (val1, ...);\n\n\t//Insert Selection\n\tINSERT INTO TableName (col1, ...)\n\t<Selection>\nSQL: Update\n\tUPDATE TableName\n\tSET colName = val\n\tWHERE condition;\nSQL: Delete\nSQL: Join\n\t<SELECTION>\n\tJOIN Table2 ON JoinCondition\n\tWHERE Condition;\n\n\t//(INNER: matchOnly, LEFT, RIGHT, FULL)\n\n\t//Join 2 Selections\n\t<Selection1>\n\tJOIN ( <Selection2> ) Sel2Name ON Condition;\n\nSQL: Exists\n\t<Selection>\n\tWHERE EXISTS (<SubSelection>) //only get if SubSelection returns something\n\t//Not Exist: WHERE NOT EXISTS ( ... )\nSQL: With\n\nSQL: Concepts\n\tTable: col (attributes), row (entries)\n\t\tPrimary Key: row's unique id\n\t\tForeign Key: id within diff table\n\t\tSuper Key: Multiple vals do unique identify\n\t\tCandidate Key: Minimal super key\n\n\tFunctional Dependency: unique value for each key\n\n\tNormalization: (redundancy, anomalies, integrity)\n\t\t1NF: Primary Key, No Lists\n\t\t2NF: Value cannot depend on part of key\n\t\t\tDepend: if key determines the value\n\t\t3NF: Value cannot depend on value\n\t\tBCNF: Every dependency: key is super key\n\n--------------------------------------------------------------------\n\nMongoDB: Create\n\tGo https://cloud.mongodb.com/v2/64ab4adc5303524409118108#/clusters\n\tCreate\nMongoDB: Javascript Connect\n\tmongodb: { MongoClient }\n\n\tnew MongoClient(url)\n\t\tConnect: .connect() //async\n\t\tDb: .db(dbName)\n\t\t\tCollection: .collection(collectionName)\n\t\t\t\tGet Entry: .findOne(obj query) //async\n\t\t\t\t\tField: [\"key\"] -> val\n\t\t\t\tAll Entries: .find({}).toArray() //async\n\t\t\t\tAdd: .insertOne(obj) //async\n\t\t\t\tEdit: .updateOne(obj query, obj update) //async\n\t\t\t\t\tupdate.$set: { \"key\": \"val\" }\n\t\tClose: .close()\n\n------------------------------------------------------------------------\n\nEdgeDB: Create\n\tInstall: iwr https://ps1.edgedb.com -useb | iex\n\tInstall In Proj: edgedb project init //in proj root\n\tIP Edge Case: edgedb configure set listen_addresses 127.0.0.1 ::1 //in proj root\nEdgeDB: Console\n\tOpen Console: edgedb\n\tOpen In Web: edgedb ui\n\tExit Console: //ctrl + D\n\n\tShow Types: \\ds\nEdgeDB: Types\n\t//In dbschema/default.esdl\n\tmodule default {\n\t\ttype TypeName {\n\t\t\trequired property propName -> type {\n\t\t\t\tdefault := defaultVal\n\t\t\t};\n\t//Types: (str, bool, int32, float64, json, bytes, datetime)\n\n\tApply Types:\n\t\tUpdate Schema: edgedb migration create\n\t\tComplete Update: edgedb migrate\nEdgeDB: JS Connect Development\n\tInstall: npm install --save-dev @edgedb/generate\n\n\tedgedb: { createClient }\n\n\tcreateClient() -> client\n\t\t.query(\"queryStr\") -> res\nEdgeDB: JS Connect Production\n\t//set env variables?","cs\\wesley-startup.txt":"Design: Figma\n\tIndividual page:\n\t\tleft: semantic lines web\n\t\tright: circlePic, name, description\n\n\tPrezi: click character\n\t\tzoom in & center\n\nGithub pages host\n\thardcode everything\n\nWesley host\n\nProject Notes\n\tWeb\n\t\tNodes: randomGeneration or userDrag","classes\\discrete.txt":"Reading Page: 103\n\nAnswer Key\n\thttps://quizlet.com/explanations/textbook-solutions/mathematics-a-discrete-introduction-3rd-edition-9781285402062/chapter-1-exercises-12-e52b78c9-60fa-4585-9719-0900289498c0\n\nQuick Links\n\tSchedule: https://brightspace.nyu.edu/d2l/le/lessons/302302/topics/9037716\n\tSyllabus: https://brightspace.nyu.edu/d2l/le/lessons/302302/topics/9037680\n\tEd: https://edstem.org/us/courses/45548/discussion/\n\tGradescope: https://www.gradescope.com/courses/592329\n\tBrightspace: https://brightspace.nyu.edu/d2l/home/302302\n\nClass\n\tParticipation: (class questions, ed, office hours, present problem)\n\tProblem Sets / Proofs: Open/edit by latex\n\t\tOpen Problem Set: Brightspace -> Assignments -> Problem Set ...\n\t\tProofs: First draft, final draft //use max for grade\n\t\tSubmit: Download as PDF, upload to gradescope\n\tQuiz: weekly, gradescope, 30mins\n\tExam: Not cumulative, 3 exams\n\n------------------------------------------------------------\n\nLatex: Create\n\tOverleaf: https://www.overleaf.com/project\n\nLatex: Header\n\tImport utf-8: \\usepackage[utf8]{inputenc}\n\n\tTitle: \\title{text}\n\tAuthor: \\author{text}\n\tDate: \\date{\\today}\n\n\tInsert Into Document: \\maketitle //in document\n\nLatex: Environments\n\tDocument Header: \\documentclass{article}\n\tDocument: \\begin{document} ... \\end{document}\n\t\tSections: (abstract)\n\t\tFormat: (center, flushleft, flushright)\nLatex: Sections\n\tSection: \\section{headerText} ...\n\tSubsection: \\subsection{headerText}\n\nLatex: Text\n\tText: text\n\tBold: /textbf{text}\n\tItalic: /textit{text}\nLatex: Spacing\n\tSpacing: 1 consecutive max\n\t\tMultiSpace: \\quad or ~~~\n\tNewline: \\\\\n\tNewline w Indent:\n\t\tLine1\n\n\t\t\\noindent //cancel indent\n\t\tLine2\n\nLatex: List\n\t/begin{itemize} //enumerate for ordered\n\t/item item1\n\t...\n\t/end{itemize}\nLatex: Table\n\tCreate: \\begin{tabular}{|c|c|c|} ...\n\t\tHorizontal Row Start: \\hline ...\n\t\t\tCells: cell1 & cell2 & ... \\\\\n\t\t//Extra \\hline for bottom\n\nLatex: Math Import\n\tImport Math: \\usepackage{ ... }\n\t\tamsmath: Additional math formatting\n\t\tamssymb: Additional math symbols, mathbb\n\t\tamsthm: Typeset math envs, basic math envs\n\t\tnatbib: Bibliography & citation\n\t\tgraphicx: Graphics\n\n\tSet Math Style: \\theoremstyle{plain} //applies to all envs after\n\t\t//(definition, remark)\n\tCreate Math Env: \\newtheorem{envName}{envLabel} //in header\n\t\tNo Number: \\newtheorem*\n\t\tMath: (proof, theorem, lemma corollary, definition, example)\nLatex: Math Envs\n\tMath Mode: \\[ ... \\]\n\tInline Math: \\( ... \\) OR $ ... $\n\t\n\tNumbered Eq:\n\t\t\\begin{equation} \\label{eq:EqName}\n\t\t\t...\n\t\t\\end{equation}\n\tNumbered Eq Ref: \\eqref{eq:EqName}\n\t\n\tAligned Eq\n\t\t\\begin{align*} //* removes numbering\n\t\t\tAlign Pt: &\n\t\t\tNewLine: \\\\\n\t\t\\end{align*}\nLatex: Math Symbols\n\t//Reserved Chars: \\{\n\tIndices: x_i\n\tArrows: \\to \\implies \\iff\n\t\t\\leftarrow, \\rightarrow\nLatex: Math Funcs\n\tFuncs: \\sin \\cos \\exp \\log \\ln\n\tLimit: lim_{n \\to \\infty} ...\nLatex: Math Syntax\n\tExponents: x^{12}\n\tFraction: \\frac{top}{bottom}\n\tSq Root: \\sqrt{x}\n\t\tNth Root: \\sqrt[n]{expression}\n\tFalling Factorial: (9)_4 -> (9)4\n\tInf: \\infty\n\tGreek: \\alpha \\beta \\epsilon\nLatex: Math Operators\n\tComparison: =, >, <, \\leq, \\geq, \\neq\n\tMultiplication: \\times\n\tDivisiblity: \\mid\n\nLatex: Boolean\n\tAND OR NOT: \\wedge \\vee \\neg\n\tIF-THEN IFF: \\rightarrow \\iff\n\tTRUE/FALSE: \\mathrm{TRUE}\n\tShow Property In Align: <eq> && \\text{ <property> }\nLatex: Set\n\tSet Symbols: \\forall \\exists\n\tSet Operands: \\cup \\cap \\setminus \\in \\notin\n\n\tSet Brackets: \\{ \\}\n\tSet Notations Setup: \\newcommand{\\R}{\\mathbb{R}}\n\tSet Shorthand: \\mathbb{R} //N Z Q C\n\nLatex: End\n\tSquare: \\qed\n\nLatex: Others\n\t\\usepackage[headings=runin-fixed-nr]{exsheets}\n\t\n\tExsheets\n\t\t\\newif\\ifshowsolutions\n\t\t\\showsolutionsfalse\n\t\t\\showsolutionstrue\n\t\t\\SetupExSheets {\n\n\tSolution Env: \\begin{solution} ...\n\n-------------------------------------------------------------------------\n\nFundamentals: Proof Rules\n\tDivision Rule: Cannot divide by 0, cannot divide by var\n\n\tPolynomials: Review\n\t\t(x^3 + y^3) = (x + y)(x^2 - xy + y^2)\n\t\t(x^3 - y^3) = (x - y)(x^2 + xy + y^2)\n\nFundamentals: Statement Types\t\n\tTheorem: Big theorem //if-then\n\t\tResult: Minor thm\n\t\tProposition: Small thm\n\t\tFact: Tiny thm\n\tConjecture: Not proven, believed\n\tDefinition: //iff\n\t\tFormat: <given_obj(s)> is <def> if <condition>\n\t\t//Cannot be ambiguous (knowns only); boolean\n\n\tClaim: Proof Types\n\t\tThere exists: At least 1 (1 case works)\n\t\tAll Are: At least one contradiction\nFundamentals: Statements\n\tIf-Then: A => B //implies\n\t\tHypothesis / sufficient condition\n\t\tConclusion / necessary condition\n\t\t//Vacuous Truth: If hypo false, always true\n\n\t\tA only if B //only if = then\n\t\tB is necessary for A //B is the necessary\n\t\tB is implied by A\n\tIff: A <-> B\n\t\t//Prove both: A => B and B => A\n\t\tA is necessary & sufficient\n\t\tB is necessary & sufficient\n\n\tConverse: Swapped hypo & conclusion\n\t\tDoes Original = Converse?: Compare boolean table\n\t\t//does not affect object's group; spotlight the important part\n\tContrapositive: swap and negate hypo & conclusion\n\t\tOriginal = Contrapositive //equivalent\n\t\tIf (not B), then (not A)\n\nFundamentals: Proof Components\n\tStart\n\t\tDeclare: Suppose <objs> are <hypothesis>.\n\t\tCreate variables: let a = ... //specify group!\n\t\tDef Unravel: There exists <obj> such that <eq>\n\t\tBy Def: Since x is <def>, it can be said that <mathSyntax>\n\tEnd\n\t\tOpen Square / Filled Square: Specify proof is over\n\n\tComponents\n\t\tConsider Eq: Note that <new_eq>.\n\t\tTo Def: Since there exists <obj> such that <cond>, therefore, <def>.\n\t\tEq -> Def Direct: Since <group_specify>, <def>.\n\t\t//DefTerm -> DefSyntax -> Eq\n\t\tBasic Fact: Sum of integers is integer\nFundamentals: Proof Types\n\tCase Is Def\n\t\tYes/No because <restate_def>.\n\tCase Is\n\t\tWe want to find <def>. <case>. <explain_why_works>.\n\tCase Exists\n\t\tLet <given_case>. We want to find <condition>.\n\t\tLet <satisfier_case>. Therefore, <given_case>.\n\tCounter Example\n\t\tLets consider <case>. <prove_hypo>. However, <disprove_conclusion>, therefore <negation>.\n\t\t//IFF: Only one side needs counterexample\n\tIFF: Prove both directions\n\t\tRestate Foundational: create vars & their groups\n\t\tFor each direction: (=>) specify individual proof\n\t\t\tFuture Tense Objective: First, we will prove ... . Suppose <hypo>, ...\n\t\tConclusion: Therefore, <restate_thm>\n\n------------------------------------------------------------\n\nNumber: Set Shorthands\n\tInts: Z = { ..., -1, 0, 1, ... }\n\tNatural Numbers: N = { 0, 1, ... }\n\tRational Number: Q = { ... }: int A / int B, B != 0\n\tReal Number: R\n\t\nNumber: Defs\n\tDivisible: int b | int a if: bc = a //c\n\t\tB is divisor of A\n\t\tB is factor of A\n\tOdd: int a is odd if a = 2x + 1 //int x\n\tPrime: int p is prime if: p > 1 and only +divs are 1 & p\n\tComposite: +int a is comp if: 1 < b < a and b | a //int b, both divisors must be b\n\tPerfect Sq: int x is perfect sq if x = y^2 and y >= 0 //int y\n\nNumber: Proof Algebra\n\tFactor out: 3x + 3 -> 3(x + 1)\n\tAdd manipulation: x - 1 -> (x - 2) + 1\n\tEven/odd def: New var not needed\nNumber: Proof Number\n\tNumber Division: Must be non-zero\n\tPerfect Sq Initialize: Let int x and x >= 0. Then x^2 is perfect sq.\n\tNonconsecutive: Use x and x + k, where k != 1 & k != -1.\nNumber: Proof Comparison\n\tInteger < <=: (0 > x) -> (1 >= x) //int x\n\t\tAn integer that is larger than 0, needs to be at least 1.\n\tInteger <= <: (1 <= x) -> (0 < x) //int x\n\t\tSince x is an integer and x >= 1, since 0 < 1, we can also say that 0 < x.\n\tComparison & Reciprocal: flip operator & get reciprocal\n\t\t(1/x < 1/y) -> (x > y)\n\tComparison Middleman: (a < c < b) -> (a < b)\n\n\tProve Comparison\n\t\t//Construction: Construct from other comparisons\n\t\tComparison Justify: Use minima as example\n\t\tComparison Flip: Justify with x being +/-\n\n------------------------------------------------------------\n\nBoolean: Concepts\n\tOrder Of Op: parenthesis, negation, left->right\n\n\tClassification: All possible variable values\n\tTautology: TRUE\n\tContradiction: FALSE\n\tContingency: some TRUE, some FALSE\nBoolean: Properties\n\tDouble Neg: not(not x) = x\n\tIdentity: x and True = x, x or False = x\n\tIdempotency: x and x = x, x or x = x\n\tInverse Elements: x and (not x) = false, x or (not x) = true\n\n\tCommutative: x and y = y and x //works with or\n\tAssociative: (x and y) and z = x and (y and z) //works with or\n\tDistributive: x and (y or z) = (x and y) or (x and z) //can flip and/or\n\tDeMorgan's Laws: //negation flips and/or & applies to each variable\n\tTranslate ->: x -> y = notX or y\nBoolean: Proof\n\tLogically Equivalent: Truth tables\n\t\t//Cols: Show each operation step\n\t\tTherefore, eq1 = eq2.\n\tLogically Equivalent: Properties Proof\n\t\t//Establish: beginning & end\n\n-------------------------------------------------------------\n\nList: Concepts\n\tList: Ordered seq of objs //ordering matters, dupes allowed\n\t\tLength: Number of elements\n\t\tEquality: sameLen && corr elements are equal\n\tEmpty List: () //null list\n\tOrdered Pair: //2-list\nList: Permutations\n\tDupes: n^k lists\n\tNo Dupes: (n)k lists\n\tMultiplication Principle: pairs in which n Firsts, m 2nds -> nm pairs\n\n\tMulti-Case: Multiply case possibilities\nList: Falling Factorial\n\tFalling Factorial: (n)k = n(n - 1) ... (n - k + 1)\n\t\t//n & k: must be natural nums, k <= n\n\t\tWhen n = k: n! = (n)n\n\t\tAnother Way: (n)k = n! / (n - k)!\n\tn!: (n)n\n\t0!: 1\nList: Product Notation\n\tProduct Notation: PI(bottom: var, top: var end, right: f(var))\n\t\ttop: var end (inclusive)\n\t\tright: product element, function of var\n\t\tbottom: initialize var //return value\n\nList: Proof\n\tMultiplication Principle: Combine perms together\n\t\tFind perm1, find perm2, By multiplication principle, <find_perm3>\n\tSubtraction & Negation: total - part = complement\n\t\t//Ex: totalNums - numsWithout8 = numsWithAn8\n\tCases: Add up the cases -> total\n\n--------------------------------------------------------------\n\nSet: Basics\n\tSet: No dupes, unordered collection of objs\n\t\tIs Element: element ∈ { ... } -> bool //∉\n\t\tSize: |set| -> int //cardinality, cannot = inf\n\t\tEquality: Have same elements\n\t\tFinite: if size is int //otherwise, infinite\n\t\tEmpty Set: {}, ∅\n\tSet Builder Notation: { var : conditions }\n\t\t//{ var ∈ set : conditions }\nSet: Subset\n\tSubset: Every element of A is element of B, A ⊆ B, A ⊈ B\n\tProper Subset: A ⊂ B\n\n\tSubset Count\n\t\tOption1: Count for each length\n\t\tOption2: Take/skip decision tree\n\tTheorem: Set A be finite set, subsetCount is A is 2^|A|\n\nSet: Power Set\n\tPower Set: Set of all subsets of given set\n\t\tNotation: 2^Set //exponent must be a Set\n\t\t|2^Set| = 2^|Set|\nSet: Defs\n\t//Properties: (Commutative, associative, emptySet identity, distributive)\n\n\tSet Difference: A - B -> in A, but not in B\n\tSymmetric Diff: A tri B = (A union B) - (A inter B)\n\tDisjoint Sets: Set1 inter Set2 = {}\n\t\tPairwise Disjoint: Group of sets have no intersection among any pairs\n\tCartesian Product: A x B -> all possible pair lists\nSet: Thms\n\tUnion + Inter: Thm: |A| + |B| = |A union B| + |A inter B|\n\tAddition Principle: Finite sets A, B: if A & B disjoint, then |A union B| = |A| + |B| //applies more than 2 sets\n\nSet: Properties\n\t//Commutative, Associative, Distributive\n\tIdentity: A union {} = A, A inter {} = A\n\tDeMorgan's Law: negation & distributive\n\t\tA - (B union C) = (A - B) inter (A - C)\n\t\tA - (B inter C) = (A - B) union (A - C)\n\n\tIdempotent Laws\n\t\tA∪A=A\n\t\tA∩A=A\n\tCommutative Properties\n\t\tA∪B=B∪A\n\t\tA∩B=B∩A\n\tAssociative Properties\n\t\tA∪(B∪C)=(A∪B)∪C\n\t\tA∩(B∩C)=(A∩B)∩C\n\n\tDistributive Properties\n\t\tA∪(B∩C)=(A∪B)∩(A∪C)\n\t\tA∩(B∪C)=(A∩B)∪(A∩C)\n\tDe Morgan's Laws\n\t\t(A∪B)′ = A′ ∩ B′\n\t\t(A∩B)′ = A′ ∪ B′\n\nSet Proof: Principles\n\tStart: Reinitialize given sets, restate what to prove\n\t...\n\tEnd: Restate what is proven\nSet Proof: Templates\n\tSubset Proof: Set1 ⊆ Set2\n\t\t<redeclare sets & vars>\n\t\tWe will prove Set1 ⊆ Set2.\n\t\tLet x in Set1 //specify group ... Therefore, x in Set2\n\t\tTherefore, Set1 ⊆ Set2\n\n\t\t//x in Set -> {x} subset Set\n\t\t//{x} subset Set -> x in Set\n\n\tEquality Proof: Set1 = Set2\n\t\t<prove Set1 ⊆ Set2>\n\t\t<prove Set2 ⊆ Set1>\n\t\tSince Set1 ⊆ Set2 and Set2 ⊆ Set1, Set1 = Set2.\n\t\t//SetBuilder1 = SetBuilder2: Prove equality of two conditions\n\n\tInequality Proof: Set1 != Set2\n\t\tCounterexample: Find example in Set1, but not in Set2 //or vice versa\n\nSet Proof: Quantifiers\n\tThere Exists: ∃x in Set, conditions. //existential quantifier\n\t\tConsider <case>. <prove_conditions>. Therefore, there does exist <objs> where <conditions>.\n\t\t//There are\n\t\t//There is\n\tFor All: ∀x in Set, conditions. //universal quantifier\n\t\tLet x be any element of Set. Suppose x in Set. <prove_conditions>. Therefore, x satifies <conditions>.\n\t\t//let x in A\n\tUniqueness Quantifier: E! <obj>, <assertion> //only one\n\t\t//There is a unique\n\n\tNegated Quantifier\n\t\tFor flipped quantifier: prove negated assertions\n\t\t//Negation Location: Depends on no/not location in english\n\tMulti Quantifier: //Ex: ∀x, ∃y, x + y = 0\n\t\tLet variable x, let y be any value //Ex: -x\n\nSet Proof: Set Logic\n\tIn -> Union: x in A -> x in (A union B)\n\tInter -> In: x in (A inter B) -> x in B\n\tNotin -> Inter: x notIn B -> x notIn (A inter B)\n\tExpr = {}: Prove that element x in expr does not exist\n\n\tAnd -> Or: x in A and x in B -> x in A or x in B\n\nSet Proof: Difference\n\tExclusive Diff: x in (A union B) and x notIn (A inter B) ->\n\t\t(x in A or x in B) and (x notIn A or x notIn B)\n\t\tx in A and x notIn B or x in B and x notIn A\n\t\tx in (A - B) union (B - A)\n\tTri Def: A tri B -> (A - B) union (B - A)\n\tTri Def 2: A tri B -> (A union B) - (A inter B)\n\tTri Def x: A tri B -> x in A xor x in B\n\tDiff -> Self: (A - B) subset A\n\tDisjoint Def: A & B are disjoint <-> A inter B = {}\n\nSet Proof: Cartesian\n\tCartesian Def: (x, y) in A x B <-> x in A and y in B\n\t\tSplit Set: { (x, y): Cond1 and Cond2 } ->\n\t\t\t{ (x, y): Cond1 } inter { (x, y): Cond2 }\n\t\t\t//Or: Works with union & or\n\t\tDouble Combine: (x in A and y in B) or (x in C and y in D) -> (x in A or x in C) and (y in B or y in D)\n\t\tNotIn -> NotIn Pair: y notIn B -> (x, y) notIn A x B\n\t\tNotIn Pair -> NotIn: (x, y) notIn A x B, x in A -> y notIn B\n\tCartesian Equality: A x B = B x A\n\t\tx in A and y in B -> x in B and y in A\n\nSet Proof: Cardinality\n\tSum = Union + Inter: |A| + |B| = |A union B| + |A inter B|\n\t\tUnion = Sum - Inter\n\tDisjoint Union: If A & B disjoint: |A union B| = |A| + |B|\n\tDistributive\n\tCartesian: |A x B| = |A| * |B|\n\n\tSet-Builder Perms: Find cardinality\n\t\tSince A is a set of lists and <perm_explanation>, |A| = <answer>.\n\t\t//No Dupes Explanation: 3 slots have 3 choices and no repetition is allowed, ...\n\nSet Proof: Complement\n\tDef: x in A' -> x in U - A\n\tNegation: x in A -> x notIn A'\n\tOpposite Contradiction: x is either in A or A'\n\n--------------------------------------------------------------------\n\nCombinatorial Proof: Template\n\tQuestion: declare vars, declare count to find\n\tAns1\n\tAns2\n\tExplanation: Since both answers give <count>, eqLeft = eqRight.\n\nCombinatorial Proof: Writing\n\tCase Count: We want to count all <objs> such that <condition>.\n\tIterative: for i in ..., define Si by ...\n\nCombinatorial Proof: Logic\n\t2^n: Power sets / bit lists\n\t- (x): Subtract one scenario\n\t^0, ^1, ...: Iterate thru lists\n\n\tList Views: (slots, avg, metaCases)\n\tList Case Exclusion: (-1, slotRestriction)\n\tInfinite Algebra: a trick that spans all cases\n\tListCount + ListCount: Pairwise disjoint list groups //no dupe lists\n\t2 Pointers: (end1 - start1) / 2, ... -> will average out to\n\tInvisible Cases: Equation has cases that cancel out\n\n--------------------------------------------------------------\n\nRelations: Syntax\n\tRelation: Set of ordered pairs, each pair follows condition\n\t\tOne Pair: x R y, (x, y) in R -> bool //x is related to y by R\n\t\tRelation of Set: R is a relation on Set1\n\t\tRelation of Sets: R is a relation from Set1 to Set2\n\t\tSet Builder: R = { (x, y) : <conditions> }\n\nRelations: Defs\n\tInverse Relation: R^-1, reversed all pairs of R\n\t\t(<)^-1 = (>)\n\t\tDouble Inverse: (R^-1)^-1 = R\n\tEquivalence Relation: R on set is reflexive, symmetric, and transitive\n\tCongruence Modulo n: x ≡ y (mod n) //n | x - y\n\tEquivalence Class: a in A: [a] = { x in A : x R a } //equivalence relation R, set A, set [a]\n\nRelations: Properties\n\tReflexive: each element of a set related to itself\n\tSymmetric: for all x, y in set: x R y -> y R x\n\tAntisymmetric: for all x, y in set: x R y and y R x -> x = y\n\tTransitive: for all x, y, z in set: x R y and y R z -> x R z\n\nRelations Proof: Graph\n\tReflexive: All have loops\n\tSymmetric: Double side edges only\n\tAntisymmetric: No double side edges\n\tTransitive: All combined edges have bridge\n\nRelations Proof: Templates\n\tEquivalence Relation: <declare_vars>. We need to show that <condition> is reflexive, symmetric, and transitive.\n\t\tFor each property: declare will prove prop, prove prop\n\t\tTherefore, <condition> is an equivalence relation.\n\n\tProve Property: PropertyDef, Unpack, Prove, Repack, Restate\n\nRelations Proof: Equivalence Class\n\t//equivalence relation R, set A\n\tReflexive Equivalence Class: a in A -> a in [a]\n\tSame Equivalence Class: a, b in A: a R b <-> [a] = [b]\n\tIn Equivalence Class: a, x, y in A: x, y in [a] -> x R y\n\tDisjoint or Equal: If [a] inter [b] != {} then [a] = [b]\n\tPartition Def: pairwise disjoint, union is original set\n\nRelations Proof: Inverse\n\tInverse Def: (a, b) in R -> (b, a) in R^-1\n\tSymm Inverse: (a, b) in R, R is symm -> (b, a) in R\n\nRelations Proof: Equivalence Relation\n\nRelations Proof: Partition\n\tIn Some Part: Any x in A, some part such that x in exactly one part\n\t\n---------------------------------------------------------------\n\nProof Types\n\tDirect: assume x, prove y\n\tContradiction: assume negation, find contradiction\n\tInduction: (prove base case, assume k -> prove k + 1)\n\tContrapositive: assume !y, prove !x\n\n---------------------------------------------------------------\n\nGraph\n\tdegree: neighborCount\n\tedges = degrees / 2\n\t(walk/closedWalk, trail/circuit, path/cycle)\n\ttree: acyclic\n\tspanning tree: (keep nodes, delete cycles)\n\teuler tour: all even degrees\n\teuler walk: all even degrees but 2\n\n--------------------------------------------------------------------\n\nReading 1 - 1: intro\n\t\tJoy of math, difficult, dont grieve, struggle\nReading 1 - 2: definitive answers\n\t\tPrecise language\n\t\tMathematical sentence: words\n\t\tMismatch of categories: specify properly\n\t\tAvoid Pronouns: specify subject, no ambiguity\n\t\tRewrite: draft & revise\n\t\tLearn Latex: write mathematical documents\nReading 1 - 3: definition\n\t\tMath: purely conceptual\n\t\tConstructed up from definitions\n\t\tInt Set: Z = { ..., -1, 0, 1, ... }\n\t\tDEF 3.2: Divisible: int A div by int B if: Bc = A\n\t\t\tB divides A\n\t\t\tB is factor of A\n\t\t\tB is divisor of A\n\t\t\tb | a\n\t\tDEF 3.4: Odd: int A is odd if a = 2x + 1\n\t\tDEF 3.5: Prime: pos int P is prime if: P > 1 and only divs are 1 & p\n\t\tevery positive int can be factored into primes\n\t\tDEF 3.6: Composite: pos int A is comp if: 1 < b < a and b | a\n\t\tNatural Numbers: N = {0, 1, ...}\n\t\tRational Number: int A / int B, b != 0: Q\n\nReading 1 - 4: Theorem & boolean\n\t\tTheorem: Declarative statement that is proven\n\t\t\tResult: Modest thm\n\t\t\tFact: Minor theorem\n\t\t\tProposition: >fact, <theorem\n\n\t\t\tLemma: Building block thm\n\t\t\tCorollary: Comes mainly from a thm\n\t\t\tClaim: Step thms in a proof\n\t\tConjecture: Truth cannot be ascertained\n\t\tMistakes: Statements that are false\n\t\tProof: Essay that incontrovertibly shows truth\n\t\tVacuous: Condition is impossible, always true\n\n\t\tIf Then: if Condition, then Result\n\t\t\tCondition implies Result\n\t\t\tCondition is sufficient for Result\n\t\tIff: Result if and only if Condition\n\t\t\tResult iff Condition\n\t\t\tRes is necessary and sufficient for Cond\n\t\t\tRes is equivalent to Cond\n\t\tand/not/or\n\t\tBoolean truth tables: pay closer attention\nReading 1 - 5: Proof\n\t\tExperimentation: Not enough, too many cases\n\n\t\tProof Steps\n\t\t\tProposition -> if-then form\n\t\t\tEstablish beginning and end condition\n\t\t\tUnravel beginning & end into math\n\t\t\tMake ends meet\n\t\tProof Additional\n\t\t\tSpecifications for edge facts\n\t\t\tCondition edges\n\t\t\tRepeating Logic: Likewise / as we saw before\n\t\t\tRepeating Logic: use lemma\n\t\t\tIff: Two cases\nReading 1 - 6: Counterexample\n\tCounter Example: Case where hypo = True, conclusion = False\n\t\tStrategy: Create Edge Cases\n\t\tStrategy: Work through part of problem by algebra\nReading 1 - 7: Boolean\n\tProperties\n\t\t//Logically Equivalent: Prove by boolean table\n\t\tCommutative: x and y = y and x\n\t\tAssociative: (x and y) and z = x and (y and z) //same with or\n\t\tIdentity: x and True = x, x or False = x\n\t\t\tx and x = x, x or x = x\n\t\t\tx and (not x) = false, x or (not x) = true\n\t\tDistributive: x and (y or z) = (x and y) or (x and z) //can flip and/or\n\t\tDeMorgan's Laws: //negation flips and/or & applies to each variable\n\t\tDouble Negative\n\t\tIdempotency\n\t\tInverse Elements\n\t\t//Can use them for proof\n\tOrder or ops: Parenthesis, negation, left->right\n\tT or F and T = T and T = T\n\tnot(T and F) or (F and F) = not(F) or (F) = T or F = T\n\t\t//Short Circuit\n\tLogically Equivalent: Truth tables identical\n\t\t//Cols: SHOW EACH STEP\n\t\tTherefore, eq1 = eq2.\n\n\t\ty or z   x and ...  x and y   x and z   ... or ...\n\tT T T   T          T            T            T             T\n\tT T F   T          T            T            F             T\n\tT F T   T          T            F            T             T\n\tT F F   F          F            F            F             F\n\tF T T   T          F            F            F             F\n\tF T F   T          F            F            F             F\n\tF F T   T          F            F            F             F\n\tF F F   F          F            F            F             F\n\n\tx -> y = notX or y\n\tT T T T\n\tT F F F\n\tF T T T\n\tF F T T\n\tTherefore, x -> y is logically equivalent to notX or y.\n\t//if x = True, then y must be True\n\t//if x = False, then y can be either\n\n\t(x and y) or (x and notY) = x\n\tx and (y or notY) //(Distributive property)\n\tx and (T) //(identity)\n\tx //(identity)\n\n\tx -> y = notY -> notX\n\tnotX or y (prop 7.3)\n\ty or notX (commutative)\n\tnot(notY) or notX (prop 7.3)\n\n\tClassification: All possible values for vars\n\tTautology: Always true\n\tContradiction: Always false\n\tContingency: Sometimes false\n\tProp 7.3: x -> y = notX or y\n\n\t((x or y) and notY) -> x\n\tx  y  x or y   ... and notY    ... -> x\n\tT T  T          F                   T\n\tT F  T          T                   T\n\tF T  T          F                   T\n\tF F  F          F                   T\n\tThe expression ... is a tautology because for all combinations of x and y, the expression evaluates to True.\n\n\t//QUESTION: Truthtable & props: Props only\n\tLatex: Table\n\t\t\\begin{tabular}{c|c|c|} ...\nReading 2 - 8: Lists\n\tList: Ordered seq of any objs\n\t\tLength: Number of elements\n\t\tEquality: sameLen && corr elements are equal\n\t\t//Ordering matters, dupes allowed\n\t\tCreate: (val1, ...)\n\t\tOrdered Pair: List of 2 vals\n\t\tEmpty List: List of 0 vals () //null list\n\t\tList with 2 elements: 2-list\n\n\tPermutation Pairs: n^2 pairs\n\t\t//for each n1 choices, n2 choices\n\t\tMultiplication Principle: pairs in which n Firsts, m 2nds -> nm pairs\n\t\tEliminate SamePairs: n(n - 1) pairs\n\tPermutation Lists: n^len pairs\n\t\tEliminate Dupes: n(n - 1)(...) pairs\n\t\tFalling Factorial: (n)k = n(n - 1) ... (n - k + 1)\n\t\t\t//n & k must be natural nums, k <= n\n\t\t\t(n)k = n! / (n - k)!\n\t\t\tWhen n = k: n! = (n)n\n\n\tList Perm Thm: Number of lists of len k w elements from n possibilities:\n\t\tDupes Allowed: n^k\n\t\tDupes Not Allowed: (n)k\n\t\tLen 0: 1 possible list (empty list)\nReading 2 - 9: Factorial\n\tn!: (n)n\n\t0!: 1\n\n\tProduct Notation: PI(bottom: var, top: var end, right: f(var))\n\t\ttop: var end (inclusive)\n\t\tright: product element, function of var\n\t\tbottom: initialize var //return value\n\t\n\tNEW\n\t//QUESTION: How to fluff\n\tStrategy: For each element: establish choices\n\n\t5F 7S 9J\n\t21!\n\t(5! * 7! * 9!) * 3! //each group is an obj, rearrange them\nReading 2 - 10: Sets\n\t//QUESTION: page 75 proof (even is sum of two odds)\n\tSet: No dupes, unordered collection of objs\n\t\tIs Element: element ∈ { ... } -> bool //∉\n\t\tSize: |set| -> int //cardinality, cannot = inf\n\t\t//Equality: Have same elements\n\t\tFinite: if size is int //otherwise, infinite\n\t\t\t//Lists must be finite\n\t\tEmpty Set: {}, ∅\n\t\tSet Builder Notation: { var : conditions }\n\t\t\t//{ var ∈ set : conditions }\n\t\tSubset: Every element of A is element of B, A ⊆ B, A ⊈ B\n\t\tProper Subset: A ⊂ B\n\n\tEquality Proof: Set1 = Set2\n\t\tSuppose x in Set1 ... Therefore, x in Set2\n\t\tSuppose x in Set2 ... Therefore, x in Set1\n\t\t//SetBuilder1 = SetBuilder2: Prove equality of two conditions\n\tSubset Proof: Set1 ⊆ Set2\n\t\t<Restate>\n\t\tWe will prove Set1 ⊆ Set2. Let x in Set1 //specify group ... Therefore, x in Set2\n\t\t//x in Set -> {x} subset Set\n\t\t//{x} subset Set -> x in Set\n\n\t//Since <condition>, therefore <def/thm>\n\t\t//specify thm names\n\t//Prove AND: branch to both\n\t//Declare all proofs at start\n\n\tlet int x in A: since x in A, 6 | x.\n\tTherefore, by def, x = 6y where y int.\n\t1: x = 6y can be expressed as x = 2(3y). Since 3y is an integer, 2 | x.\n\t2: x = 6y can be expressed as x = 3(2y). Since 2y is an integer 3 | x.\n\tSince 3 | x, 2 | x, and x int, x is in B. //remember\n\t//Difficult\n\t(<-): Next, we will prove that B is a subset of A.\n\tLet int z in B. Therefore, 2 | z and 3 | z.\n\t1: We know that z = 2a, where a is int.\n\t2: We also know that z = 3b, where b is int.\n\tSince x = 2a and x is even, 2 | 3b.\n\t\t//Even: one of its multiples is even\n\tThis implies that 3 is even or b is even. Since 3 is odd, b is even. By def, there is int c such that b = 2c. Observe.\n\t\tx = 3b = 3(2c) = 6c.\n\tThen, x is in A. Therefore, B is subset of A.\n\n\tPythagorean Triple: ints a, b, c is pythagorean triple if a^2 + b^2 = c^2\n\tBijective Proof: Establish one-to-one correspondence\n\n\tSubset Count\n\t\tOption1: Count for each length\n\t\tOption2: Take/skip decision tree\n\tTheorem: Set A be finite set, subsetCount is A is 2^|A|\n\n\tPower Set: Set of all subsets of given set\n\t\tNotation: 2^Set //exponent must be a Set\n\t\t|2^Set| = 2^|Set|\n\t//Proof: specify a set as finite (in group)\nReading 2 - 12: Set Operations\n\tUnion: A U B //elements of both\n\tIntersection: A n B //must be in both\n\t//Visualization: Venn diagram\n\n\tProperties: (Commutative, associative, emptySet identity, distributive)\n\tThm: |A| + |B| = |A union B| + |A inter B|\n\n\tCombinatorial Proof: Argue both sides of eq -> converge to same eq\n\t\t//Use If: Thm is an eq\n\t\tCount on both sides\n\t\tPROVE: |2^A| = 2^|A|\n\t\tWithout loss of generality, let A = { 1, 2, ... n }\n\t\t\t//without losing general case\n\t\tLet us represent each subset of A with  n-list whose entries are 0 or 1 as follows:\n\t\t\tif B subset A, we represent\n\t\t//(1, 0, 0, 1, 0)\n\t\t<Counting Formula Setup>\n\t\tSince only 2 choices of 0 & 1, size n list of choice 0s and 1s -> 2^n choices\n\t\tTherefore, |2^A| = 2^n\n\t\t(<-) Since |A| = n, 2^|A| = 2^n\n\n\tDisjoint Sets: Set1 inter Set2 = {}\n\t\tPairwise Disjoint: Group of sets have no intersection among any pairs\n\tAddition Principle: Finite sets A, B: if A & B disjoint, then |A union B| = |A| + |B| //applies more than 2 sets\n\tSet Difference: A - B -> in A, but not in B\n\t\tSymmetric Difference: A tri B -> not both\n\tProp 12.11: A tri B = (A union B) - (A inter B)\n\tDeMorgan's Laws: Sets A, B, C:\n\t\tA - (B union C) = (A - B) inter (A - C)\n\t\tA - (B inter C) = (A - B) union (A - C)\n\tCartesian Product\n\t\tA x B -> all possible pair lists\n\n\tProof:\n\t\tUnion unravel: OR -> two cases\n\t\t// We consider both cases\n\n\t\tx in A -> x in (A union B)\n\t\tx notIn B -> x notIn (A inter B)\n\t\tx in (A union B) and x notIn (A inter B) ->\n\t\t\t<explanation> ->","jobs\\nyu internship notes.txt":"10 Aster Place\nStudent Developer\nBusiness Process application team | NYU IT\n\npracticality, creative innovation, maintaining/improvement, team player\njava, application, database, web apps, JEE???, (html js css), RESTAPI (express?)","QuickNotes3\\wordpress-interview-data.txt":"General\n\tWordpress.com vs Wordpress.org\n\tExplain custom post types\n\tHow to make AJAX calls in Wordpress\nThemes\n\tHow to create a custom theme\n\tHow to create a child theme? Why use one?\n\tDescribe the structure of a standard Wordpress theme\n\tWhat are template tags? Give example.\nPlugins\n\tHow would you develop a custom plugin?\n\tHow to prevent plugin conflicts?\nDatabase\n\tHow are posts/pages/comments stored\n\tHow to prevent white screen of death?\n\tWhat are transients? Why use?\nSecurity\n\tHow to secure a Wordpress website\n\tPractices for handling data validation/sanitization\n\tCommon vulnerabilies and how to prevent them\nPerformance\n\tHow to optimize site for performance\n\tBenefits of using Content Delivery Network\n\tHow to handle a website with high traffic\nAPIs\n\tHow to integrate 3rd party APIs into a site?\n\tDescribe the WordPress REST API. How can you extend it?\n\tHow would you ensure that external scripts don't slow down the website?\n\nTEST DATA\n\tExplain why you are the best candidate\n\tTell me about your prev job position\n\tHow many wp projects you been invoved in?\n\tWhat wp projects are you most proud of\n\tBiggest challenges with wp webs / how to address them?\n\tWhat techs you love that others dont do?\n\tShow your projects\n\tIntroduce yourself & ur interest in the industry\n\tWhy interested in this position?\n\t3 reasons we should hire you\n\n\tExperience with web design/development\n\t\tCan create nice designs in photoshop/illustrator\n\t\tConvert PSDs to HTML/CSS\n\t\tAble to write PHP?\n\t\tPerform sys admin tasks?\n\tWhat SEO principles you familar with?\n\tCreate wp template\n\t\tcreate vhost with custom hostname\n\t\tdownload wp & install to site\n\t\tActivate given theme & incorporate PSD design\n\t\tNew page with new template\n\t\tUse contact form 7 for a form","QuickNotes3\\wesley-startup.txt":"Design: Figma\n\tIndividual page:\n\t\tleft: semantic lines web\n\t\tright: circlePic, name, description\n\n\tPrezi: click character\n\t\tzoom in & center\n\nGithub pages host\n\thardcode everything\n\nWesley host\n\nProject Notes\n\tWeb\n\t\tNodes: randomGeneration or userDrag","QuickNotes3\\portfolio.txt":"Tasks\n\tProjects: Create expansion animation\n\tIcons: Scroll animation\n\n\tSkills: Add more sections & icons\n\tLinks: Width fix\n\n\tMousedot\n\tNavbar: hover dot","QuickNotes3\\juwon-geometry-theorems.txt":"Parallel: Angels Principles\n\t3-5: alt int are ~=\n\t3-6: same side are supp\n\tPost10: corr are ~=\n\t3-7: perpendicular line1 -> perpendicular line2\n\tPost11: corr are ~= -> lines are parallel\nParallel: Line & Point\n\t3-8: line & dot: only 1 parallel line exists\n\t3-9: line & dot: only 1 perpendicular exists\n\t3-10: line1 || line3 & line2 || line3 -> line1 || line2\n\nTriangle: Angle Measures\n\t3-11: Sum of angles = 180\n\t3-12: Exterior = 2 remote interiors\n\tCoroll1: 2 triangles: 2 common angles -> 3rd angles ~=\n\tCoroll2: Angles of equilateral are 60\n\tCoroll3: At most one (obtuse / right)\n\tCoroll4: Acutes of right triangle are comp\nPolygons: Angle Measures\n\t3-13: Sum of interior = (n - 2) 180\n\t3-14: Sum of exterior = 360","QuickNotes3\\juwon-sat-practice.txt":"Section 1\n\nSection 2: Unresolved\n\tPunctuation: ( , : ; . )\n\t\tFull : NotFull\n\t\tFull ; Full\n\t\tFull , transition Full\n\nSection 2: Resolved\n\tComma lists\n\tApostrophe usage: (posession, shorteners)\n\tPhrase replacement\n\tCommas describing person\n\nSection 3: Unresolved\n\tAvg eq: creation & solve (total = avg * n)\n\tMode: Analyze 2D graph\n\tRange: Analyze 2D graph\n\tMulti Operation Comparison: (median, range, avg, mode)\nSection 3: Resolved\n\tMedian: Analyze 2D graph\n\nSection 4","classes\\AIT.txt":"Resources\n\tClass Site: https://cs.nyu.edu/courses/fall23/CSCI-UA.0467-001/_site/\n\tEd: https://edstem.org/us/courses/45967/discussion/\n\nOverview\n\tJavascript: (func, OOP, async)\n\tServer: (net, express, sessions, database, auth, middleware, templating)\n\tClient: (html/css/js, fetch/ajax, socket, react)\n\tNext.js\n\n--------------------------------------------------------------------\n\nJavascript: Data Types\n\tGet Type: typeof(var) -> str\n\n\tUndef\n\t\tVoid Func: return value\n\t\tMissing Param: given as undef\n\tNull\n\t\ttypeof(null) -> \"object\"\n\tBoolean\n\t\tFalsey: 0, \"\", undef, null\n\t\tTruey: {}\n\n\t\tNullish Coalescing: op1 ?? op2 //op2 if op1 = null/undef\n\t\tConvert: Boolean(val) -> bool\n\tNumber: Float val\n\t\tInf: Infinity\n\t\tNaN: isNaN(var) -> bool\n\t\tConvert: +val -> number\n\t\t\tnull -> 0\n\t\t\tundef -> NaN\n\tString\n\t\tStr -> Int: parseInt(str, baseNum) -> int\n\t\tUnicode: can use emojis\n\t\tConvert: String(var) -> str\n\tObject\n\t\t//the only mutable/reference type\n\t\tFunc/Array: are objects\n\t\tCreate Wrapper: new Boolean(false) -> obj\n\tSymbol: Always unique in ref\n\t\tSymbol(var) -> symbol\n\nJavascript: Type Coercion\n\tType Coercion +:\n\t\tString: if one op is str\n\t\tNumber: no ops are str\n\t\tObject Convert: valueOf() or toString()\n\tType Coercion ==:\n\t\tConvert ops to num\n\t\tNull & Undef: null == undef //not equal anything else\n\t\tNaN: Always false\n\t\tObjects: Compare by reference\n\t\tObject vs Primitive: valueOf() or toString()\n\nJavascript: Console\n\t//console: built-in obj\n\tCustom Console: console.log.call(consoleObj, arg1, ...)\n\tCustom Console: console.log.apply(consoleObj, args[])\n\nJavascript: Variables\n\tVar: not func global, block global\n\tLet: block scoping\n\tConst: cannot reassign, must assign //still mutable\n\tVariable Shadowing: Can redeclare same name var within func\n\nJavascript: Hoisting\n\tFunc: All named functions moved to top (identifier & body)\n\t\tInner Func Hoisting: Top of outerFunc\n\tLet/Const Hoisting: Only identifier, no assignment //cannot use before\n\nJavascript: Function Create\n\t//Func: type of Object, mutable\n\tNamed: function name(args) { ... }\n\tEmpty: function (args) { ... } -> func\n\tArrrow: (args) => { ... } -> func\n\t\t//one arg: can drop parenthesis\n\t\t//one line: can drop curly braces, implicit return\n\nJavascript: Function\n\tDefault Vals: (param = defaultVal) => { ... }\n\tSpread In Args: func(...arr) //(function call), divided into args\n\tMulti Args (rest): (param1, ...args) => { ... } //func definition!\n\t\t//args: is array, must be last param\n\tFunction Passed Elsewhere: Same scope as original location maintained\n\tMethods: { methodName(args) { ... } }\n\nJavascript: Higher Order Functions\n\tHigher Order Functions: func passed as param\n\tDecorator: A func that takes an old func, returns modified func\n\t\tdecorator(oldFunc) { return newFunc }\n\nJavascript: String\n\tCreate: \"\"\n\t\tSlice: .slice(start, end) -> str //[start, end)\n\t\tIndexOf: .indexOf(str, startIndex?) -> int\n\nJavascript: Array\n\tCreate: [val1, ...]\n\t\tRemove Index: .splice(index, 1)\n\t\tContains: .includes(element) -> bool\n\t\tIterate: for (const val of arr) { ... }\n\t\tMap: .map(func(element) -> newVal) -> array\n\t\tForEach: .forEach(func(element, index, arr))\n\n\t\tReduce: .reduce(\n\t\t\treducer(acc, element, index?, arr?) -> newAcc,\n\t\t\tinitAcc\n\t\t) -> finalAcc\n\n\t\tFilter: .filter(\n\t\t\tfilter(element, index?, arr?) -> bool\n\t\t) -> newArr\n\n\t\tSort: .sort(func(e1, e2) -> int)\n\tCreate Empty: Array(len) -> arr\n\tCreate Filled: Array(val1, ...) -> arr\n\n\tSpread: ...arr -> dividedVals //shallow copy\n\tArr Rest: [val1, ...others] = arr //nesting allowed\n\t\tAccess: val1\n\nJavascript: Array Edge Behavior\n\tExpand Varset: const [val1, ...] = arr //outOfBounds vals undef\n\tOutOfBounds Access: Expands array, sets value, prev values are undef\n\nJavascript: Object\n\t//Keys: string or symbol\n\t//Dot Notation: Do not use for \" \" or \"-\"\n\tCreate: { key1: val1, ... }\n\tCreate Shorthand: { var1, ... } //{ varName: varVal }\n\t\tRemove: delete obj.key1\n\t\tContains Key: Object.hasOwn(obj, \"key\") -> bool\n\t\tContains Key: \"key\" in obj -> bool //including superclasses\n\n\t\tIterate: for (const key in obj) { ... }\n\t\tGet Keys: Object.keys(obj) -> keys[]\n\t\tGet Entries: Object.entries(obj) -> [[key, val]]\n\tMulti Initialize: Obj1 = Obj2 = { ... } //same ref\n\n\t//Nonexistent Key: Obj[key] -> undef\n\n\tSpread Clone: {...obj} -> newObj //shallow copy\n\tObj Unpack: {key1, ...} = obj\n\t\tAccess: key1 -> val\nJavascript: JSON\n\t//Text Based: still read as str\n\n\t//Keys: double quoted\n\t//Funcs: No funcs\n\tStr -> Json: JSON.parse(jsonStr) -> obj\n\tObj -> Str: JSON.stringify(obj) -> str //works with arrs\n\t\t//can use as cache key, obj keys are stringified anyway\n\nJavascript: Async\n\t//IO: Uses async (non-blocking)\n\tCallback: run on operation finish\n\nJavascript: This\n\t//Strict Mode: Prevents standalone func call accessing this\n\tBy Default: this -> globalObj\n\n\tNonarrow Func: this -> owningObj\n\tArrow Func: this -> //whatever \"this\" was at creation, cant override it\n\tCallback: //will just be called as standalone func\n\tnew Function: this -> selfFunc //empty obj\n\nJavascript: This Specifiers\n\tSpecify This: func.call(thisObj, arg1, ...)\n\tSpecify This: func.apply(thisObj, argArr)\n\tBind: func.bind(thisObj, arg1, ...) -> func //can set earlier args\n\nJavascript: Classes\n\tClass: class ClassName { ... }\n\t\tConstructor: constructor() { ... }\n\t\t\tCreate Prop: this.propName = val //public\n\t\t\tReplace Self: return newObj\n\t\tSetter: set propertyName(newVal) { ... }\n\t\tGetter: get propertyName() { ... }\n\t\tMethod: methodName() { ... }\n\n\tCreate Instance: new ClassName()\n\nJavascript: Prototype Funcs\n\tGet Prototype: ClassName.prototype -> prototypeObj\n\tGet Prototype: Object.getPrototypeOf(obj) -> prototypeObj\n\tHas Prop: obj.hasOwnProperty(propName) -> bool //excludes prototype chain\n\nJavascript: Prototype Chain\n\tArray: (ArrayP -> ObjectP -> null)\n\tClass / Func: (FuncInstanceP = FunctionP = ClassNameP -> ObjectP)\n\tInstance: (InstanceP -> ObjectP)\n\nJavascript: Prototype Storage\n\tInstance: Stores this.variables\n\tPrototype: Stores methods\n\tProp Not Found: Looks up the prototype chain\n\n\tHas Method: Object.hasOwn(obj.prototype.methodName)\n\tAdd Method: obj.prototype.methodName = func\n\nJavascript: Inheritance\n\tSubclass: class Sub extends Super { ... } //ESModules only\n\t\tCall SuperConstructor: super(args) //in constructor()\n\tSubclass By Proto: Sub.prototype = new Super()\n\tSubclass By Create: Sub.prototype = Object.create(Super.prototype) //inherits props\n\nJavascript: Mixin\n\tCreate Mixin: { methodName() { ... } }\n\tGive Mixin: Object.assign(Sub.prototype, mixin)\n\nJavascript: Math\n\tRandom [0, 1): Math.random() -> float\n\tFloat -> Int: Math.floor(float) -> int\n\nJavascript: Process\n\tArg Arr: process.argv -> [nodePath, filePath, arg0]\n\nJavascript: New\n\tarr.sort(compareFunc() -> int)\n\tarr.concat(arr1, ...) -> combinedArr\n\tarr.some(func(element, index?, arr?) -> bool) -> bool\n\tarr.every(func(element, index?, arr?) -> bool) -> bool\n\tstr.replace(\"remove\", \"replace\") -> str\n\n-----------------------------------------------------------------\n\nJavascript: Import / Export\n\tStrict Mode: \"use strict\" //at top\n\n\tCommon: require(\"path\")\n\n\tEsModules //strict mode\n\t\t//Use .mjs or config\n\t\tConfig for mjs: package.json: type: \"module\"\n\n\t\tImport: //goes up the tree until node_modules found\n\t\tExport All: export { val1, ... }\n\nJavascript: Others\n\tSemicolon: Specifies line end\n\tCommas: op1, op2, op3 //evaluate to last op\n\tEmpty Block: { ... }\n\n-------------------------------------------------------------------\n\nNode: Install\n\tSetup Proj: npm init\n\tView Packages: npm list\n\tInstall Package.json Packages: npm install\nNode: Project\n\tpackage.json: Project config\n\t\tmain: entry point\n\tpackage-lock.json: dependency versions\n\n-------------------------------------------------------------------\n\nServer: Terms\n\tInternet: Lower level, computer connection //global network of networks\n\tWeb: documents identified by url, http protocol //on top of internet\n\t\tProtocol: Standard for communication, format\n\t\tHTTP: Application layer protocol (req / res), binary\n\tServer\n\t\tPre-Built: Apache, nginx, lighttpd\n\t\tImplemented: Made in node\n\tNet Module: Lib for creating tcp/ip server & client\n\tCookies: Data to implement sessions\n\n\tIP: Computer identifier\n\tURL: Web identifier\n\t\tFormat: protocol://domain:port/route?queryStr\n\tPort: service num within IP //below 1000 are privileged\n\t\thttp: 80\n\t\thttps: 443\n\t\tssh: 22\n\nServer: Curl\n\tHttp Req: curl url -> res\n\t\tInclude Header: -i\n\nServer: Netcat\n\tInstall: sudo apt install netcat //linux\n\tTcp Connect: nc url port //enter req below\n\nServer: Req / Res\n\tReq\n\t\treqMethod Route HTTP/ver //GET / HTTP/1.1\n\t\t\\r\\n\n\t\tHost: url\n\t\tContent-Type: text/html\n\t\tContent-Length\n\t\t\\r\\n\\r\\n\n\t\tbody //optional\n\tRes\n\t\tHTTP/ver statusCode statusDesc\n\t\tContent-Type: text/html\n\n\t\tbody\n\t\t//GET: get data, POST: change data\n\n\tReq: Common Headers\n\t\tHost: url\n\t\tUser-Agent: Browser/Ver\n\t\tAccept: text/html, application/xml //type to receive\n\t\tContent-Type: text/html //req body type\n\t\tContent-Length: reqBodySize //in bytes\n\t\tConnection: close //keep-alive\n\t\tCache-Control: no-cache\n\t\tCookie: name1=val1; ...\n\nServer: Cookies\n\tCookie Header: Set-Cookie: sessionId=...;\n\t\tExpiration Date: Expires=Wed, 09 Jun 2021 10:18:14 GMT;\n\t\tExpiration Secs: Max-Age=secs; //in res\n\t\tUrl: Domain=example.com;\n\t\tRoute: Path=/route;\n\t\tHttps Only: Secure;\n\t\tCant Access By JS: HttpOnly;\n\nServer: Status Codes\n\t2xx: good\n\t3xx: redirect to diff url\n\t4xx: client error\n\t5xx: server error\n\t\t301: moved permanently\n\t\t302: found //moved temporarily\n\t\t400: bad request\n\t\t403: forbidden\n\t\t404: not found\n\t\t500: server err\n\nServer: Net Module\n\tnet: { createServer }\n\n\tCreate Server: createServer(func(sock)) -> server //call on client connect\n\t\tRead: sock.on(\"data\", func(data)) //call on input\n\t\t\tData: data -> bufferObj //unparsed req str\n\t\tPrint: sock.write(\"text\")\n\t\t\tSend HTML: sock.write(\"HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n<h1>Hello</h1>\")\n\t\tStop Sending: sock.end()\n\n\t\tStart: .listen(portNum, \"hostName\", undef, OnConnect())\n\t\t\tLocalhost Hostname: 127.0.0.1\n\n\tGo To Connect: nc localhost portNum\n\nServer: JS Strategies\n\tRoute Obj: { \"/route\": func() }\n\t\n\tRequest Class: Get/set headers / metadata\n\tResponse Class: send method: sock writes res content\n\n\tApp Class\n\t\tVars: routesObj, server\n\t\tconnectionHandler(): sock.on setup listening\n\t\treqHandler: process & call route funcs on req\n\nServer: Nodemon\n\tInstall: npm install nodemon\n\tUse Nodemon: nodemon jsFile //reruns program on file save\n\nServer: Errors\n\tBrowser Reloading Forever: Failure to fetch static content\n\n-----------------------------------------------------------------\n\nExpress: Concepts\n\tMonolithic: Implement integrated features\n\tMinimal: Only few features\n\t\tExpress\n\tMiddleware: Trigger before/after a req/res\n\tTemplate: Document with placeholders\n\t\tRender: inject data into placeholders\n\tURL Query: <url>?key1=val1&key2=val2 ...\n\nExpress: Server\n\texpress: express\n\tpath: { resolve, dirname }\n\turl: { fileURLToPath }\n\t\n\tCreate: express()\n\t\tAdd Route GET: .get(\"/route\", func(req, res, next?))\n\t\tStart: .listen(portNum, func()) //runs on server start\n\nExpress: Req\n\tReq Method: req.method\n\tReq Route: req.path\n\tReq Headers: req.headers\n\nExpress: Res\n\tSet Headers: res.set(\"key\", \"val\")\n\tSet Status: res.status(statusCode)\n\tWrite: res.send(content: str / obj)\n\tWrite File: res.sendFile(absPath)\n\t\tGet AbsPath: resolve(relPath) -> absPath\n\tRedirect: res.redirect(\"url\")\n\nExpress: Middleware\n\tMiddleware: .use(route?, func(req, res, next))\n\t\tNext: next() //passes to next route/middleware\n\t\tStatic: express.static(dirAbspath) -> func\n\t\t\t//If File Found: doesn't call next()\n\t\t\tGet JsFile Abspath: fileURLToPath(import.meta.url) -> absPath\n\nExpress: hbs\n\tSetup: npm install hbs\n\n\t// JS\n\tSetup Hbs: app.set(\"view engine\", \"hbs\")\n\tSet Views Dir: app.set(\"views\", \"viewDirPath\") //default\n\tSet Layout: app.set(\"view options\", { layout: \"layout\" }) //default\n\tRender: res.render(\"templateName\", templateObj)\n\n\t// views/layout.hbs\n\tInsert Template In Layout: <body> {{{ body }}} </body>\n\n\t// views/*.hbs\n\tInsert Var: {{ keyName }} //can also insert in <script>\n\t\tAllow HTML: {{{ keyName }}} //issue: html injection if key is user input\n\tInsert Prop: {{ obj.[propName] }}\n\n\tConditional Render: {{#if condition}} ... {{else}} ... {{/if}}\n\n\tIterative Render: {{#each arr as |element|}} ... {{ /each }}\n\t\tAuto: {{#each arr}} ... //this -> arr, keyName -> curr obj element's key\n\nExpress: Form\n\t// HTML\n\tForm: <form method=\"GET\" action=\"reqUrl\"> //action defaults curr url\n\t\tText Input: <input name=\"queryKey\" type=\"text\" value=\"defaultVal\", placeholder=\"hint\" />\n\t\tSubmit Button: <input type=\"submit\" value=\"buttonText\" />\n\t\n\t// JS \n\tPost Parse Data: app.use(express.urlencoded({ extended: false })) //setup parsing middleware\n\t\tPost Form Data: req.body.keyName -> val\n\t\tUpdate Page: res.redirect(\"/route\")\n\t\t//Reload: Runs all reqs again\n\tGet Form Data: req.query -> { key: val }\n\nHTML: More Forms\n\tDate: <input type=\"date\" name=\"key\" required />\n\tTextarea: <textarea name=></textarea>\n\tSelection: <select name=>\n\t\tOption: <option value=>\n\tRadio: <input type=\"radio\" name=\"buttonsKey\" value=\"myVal\" required />\n\nServer: Cookie\n\tSet-Cookie\n\t\tHttpOnly\n\t\tSecure //https only\n\t\tSameSite //when cookies sent\n\n\tCookie\n\nExpress: Cookie\n\t// Server JS\n\tSet Cookie: res.append(\"Set-Cookie\", \"key=val; ...\")\n\n\tGet Cookie: req.headers.cookie -> cookieStr\n\t\t//Parse: by middleware\n\n\t// Client JS\n\tGet Cookie: document.cookie -> obj\n\nExpress: Session\n\tSession: req.session -> sessionObj\n\t\t//If sid found: set req.session by sid\n\t\t//If sid not found: store random sid, send sid to client\n\n\texpress-session: session\n\tSession Parser: app.use(session({ secret, saveUninitialized, resave }))\n\n-----------------------------------------------------------------\n\nDatabase: Concepts\n\tE\n\nMongoDB\n\n------------------------------------------------------------------\n\nMap\n\tCreate: new Map()\n\t\tAdd: .set(key, val)\n\t\tGet: .get(key) -> val\n\t\tContains: .has(key) -> bool\n\t\tLen: .size -> int\n\nfs\n\tRead: .readFile(\"path\", \"utf8\", func(err, data))\n\t\t//Callback: func called on fileRead finished\n\t\tGet Data: data -> str\n\t\tHas Error: if (err) { ... }\n\tRead Dir: .readdir(\"path\", \"utf8\", func(err, files))\n\t\tGet Children: files -> arr[fileName]\n\npath\n\tGet Extension: .extname(path) -> str\n\tJoin Paths: .join(path1, path2) -> combined //slash in between\n\tGet Path Dir: .dirname(path) -> dirPath\n\nreadline-sync\n\tInput: .question(str prompt) -> str\n\nclear\n\timport clear from \"clear\"\n\t\tClear: clear()\n\neslint\n\tLint Test:\n\t\tnpx eslint bin/*.mjs\n\t\tnpx eslint lib/*.mjs\nmocha\n\tRun Tests: npx mocha testFile\n\n\tGroup: describe(\"desc\", func())\n\t\tTest Case: it(\"desc\", func())\nchai\n\tAssert: expect(result).to.equal(expected)\n\nHTML\n\tCss: <link rel=\"stylesheet\" href=\"url\" />","classes\\parallel-computing.txt":"Resources\n\tClass Site: https://cs.nyu.edu/courses/fall23/CSCI-UA.0480-051/\n\tSyllabus: https://brightspace.nyu.edu/content/enforced/313866-FA23_CSCI-UA_480_1_051/syllabus.pdf\n\tZoom: https://brightspace.nyu.edu/d2l/common/dialogs/quickLink/quickLink.d2l?ou=313866&type=lti&rcode=438126FB-CB7E-4012-84DC-B926D628DF2A-1844200&srcou=6606&launchFramed=1&framedName=Zoom\n\tCIMS: https://cims.nyu.edu/dynamic/systems/\n\t\t(sak9725: p0*Mi_HQx2)\n\nTopics\n\tWhy parallel computing?\n\tParallel hardware overview\n\tDeal with multi-threaded bugs; challenges of parallel\n\tOptimize, time efficiency, power efficiency, reliability, security\n\tLangs: (MPI, OpenMP, CUDA)\n\n----------------------------------------------------------------------------\n\nTerms: Hardware\n\tTransistor: logic gates\n\tCapacitor: energy storage, stores in field\n\tOS: Only thing that interacts with hardware\n\tProcessor: contains cores\n\t\tMultiCore: Multiple cores in chip\n\tChip: Contains processor & memory\n\tSocket: Place that chip attaches to\n\tGPU (accelerator): self-parallelizing, very good & very bad\nTerms: Software\n\tProcess: Program being executed\n\tThread: Contained within process\n\tFrequency: Processor cycles freq -> execution speed\n\tMultitasking: One core does multiple processes simultaneously\n\t\tRunning Turns: Time slice\n\nWhy Parallel: History\n\tMoore's Law: TransistorCount doubles every 2 yrs\n\t\tMore Memory: Can be utilized for more speed\n\t\tSpeed Progression: declining since 2002\n\tDennard Scaling: Reducing transister size leads to: //stopped in 2002\n\t\tFaster circuit\n\t\tOperating frequency: faster transistor switch\n\t\tPower efficient: reduced voltage\n\tPositive Cycle of Computer Industry: hardware improvement demand loop\n\nWhy Parallel: Power Issue\n\tPower Density: Too many transisters -> overheating issue\n\t\tLiquid cooling needed: very expensive\n\t\tPower Consumed: Processor calculations\n\t\tPower Dissipated: Wasted power/energy\n\tDeclining Frequency: Sequential code becomes slower\n\n\tMulticore Processors Save Power\n\t\t(Volt proportional to Freq)\n\t\tPower = Capacitance * Volt^2 * Freq\n\t\tPerformance = CoreCount * Freq\n\t\tSave Power: increase CoreCount, decrease freq \nWhy Parallel: Parallelism Types\n\tAmong instructions: Divide instructions to cores\n\tAmong threads/processes: Multithreading / multi programs\n\tProcessing diff data at the same time\n\t\n\tHide Memory Latency: Async memory fetch\n\tSimpler Cores: higher yield, lower cost\n\n-------------------------------------------------------------\n\nParallel Hardware: Hardware\n\tMultiple core types:\n\t\tPower core: faster\n\t\tEfficiency core: less power needed\n\tSequential code benefit cases\n\t\tMultiple processes\n\t\tCore cooldown: let other cores handle if overheat\n\tParallel Computing: Multiple cores for speed\n\t\tCluster computer: Multiple PCs combined, distributed memory\n\t\tShared Memory Multiprocessor: multi cores, one memory (PC)\n\t\tMulti-processor Chip\n\nParallel Software: Proposals\n\tThe Right Computer Lang: too vague\n\t\t//Never been as ez as sequential programming\n\t\tPython > C > ASM //lossy conversion\n\t\tDilemma: Performance vs productivity\n\n\t\tInterpreted: Translate one statement at a time\n\t\tCompiled: Translate all at once\n\tDesign Hardware Properly: too vague\n\t\t//never successful\n\n\tSoftware that auto-parallelize existing seq programs: limited\n\t\t//only succeeds with less cores\nParallel Software: Solution\n\t//compiler: safety > performance\n\t1: Run sequentially first: Find expensive parts\n\t2: New algorithm: depends on software\n\nParallel Software: Example\n\tSum Alg Flawed: cores each do local sum -> global sum\n\t\tMaster Core: receive local sums from other cores\n\t\tOther Cores: calculate local sum\n\t//Not efficient: master core is doing too much\n\t//Severe contention: too much core comms to one core\n\n\tSum Alg Improved: reduce core comms\n\t\tTree communication:\n\t\t\t1: Cores get local sum\n\t\t\t2: Cores combine sums -> next level\n\t\t\t//keep merging: until global sum\n\nParallel Software: Algorithms\n\tNo Simultaneous Dependency: Threads must be independent\n\n\tPartitioning: //ex: comms tree\n\t\tTask Parallelism: Each core gets diff task\n\t\tData Parallelism: Each core gets data subset\n\tConstraints\n\t\tCore Communication: Expensive, must minimize\n\t\tMemory Access: Keep it accurate\n\t\tLoad Balancing: Try to balance burdens\n\t\tSynchronization: All cores stop at a point\n\n----------------------------------------------------------------------\n\nParallel Hardware: History\n\tENIAC (1st comp)\n\t\t1946: J. Presper Eckert, John Mauchly\n\t\t\tSpeed: 1800/sec\n\t\t\tSize: 3000 ft^3\n\t\t//No screen or software\n\t\tTransistors: Used vacuum tubes\n\t\tReprogram: Rewire the wires, manipulate binaries\n\tStored Program Concept: Store programs in system\n\t\t1949: Von Neumann, Maurice Milkes\n\t\t\tSpeed: 650/sec\n\t\t\tSize: 1400 ft^3\n\t\t//Memory access: slowed down comp\n\t\tMatrix Traversal: Row is faster, uses cache\n\tTransistors: //2nd generation of comps\n\t\t1947\n\t\t//Smaller & faster\n\t\tUNIVAC\n\tIntegrated Circuits: Chip holds transistors //3rd generation\n\tIntel 4004: First microprocessor\n\t\t1970: 2250 transistors, 12mm^2, 108 kHz\n\tIntel 8086\n\t\t1979:29000 trasnsistors, 33mm^2, 5MHz\n\t\t//ASMx86\n\tIntel 80486\n\t\t1989: 1200000 transistors, 80mm^2, 25MHz\n\t\t//Cache memory\n\tPentium: Superscalar\n\tPentium 4: reached GHz\n\tMulticores\n\tModern: CPU, GPU, Neural engine, transistors\n\t\tMulticore: P-cores, E-cores\n\nParallel Hardware: ILP\n\tSingle Cycle: One circuit (instruction -> execute -> res)\n\t\tCon: Freq doesn't align with execution speed\n\tPipelining (Temporal Parallelism): Divide execution into stages\n\t\tStages\n\t\t\tFetch: get instruction from mem\n\t\t\tDecode: interpret binary -> action\n\t\t\tIssue: give to right executor\n\t\t\tExecute: computation\n\t\t\tCommit: write to reg/mem\n\t\tPro: Each part is smaller, fits better with freq\n\t\tPro: Multiple stages run in parallel\n\t\tCon: Instruction dependencies, disturbs fetch\n\t\t\tCPI: becomes >1\n\tSuperscalar (Spatial Parallelism): Multi executors\n\t\tCon: Other parts overburdened\n\t\tCon: instruction dependency -> out of order execution\n\t\tCon: Some executors stay idle\n\t\t\t//Commit: rearrange all threads\n\tSpeculative Execution (Branch Prediction): Prediction for conditional instructions\n\t\t//Happens in fetch\n\tSimultaneous Multithreading (Hyperthreading): Multiple pipeline threads\n\t\t//One Core: Handles multiple threads\n\t\tExecutors: Shared among models\n\t\tOS: Cannot differentiate between core and internal threads, (coreCount * internalCount = threadCount)\n\n\t\tPro: Less idle executors\n\nParallel Hardware: Society\n\tAdvance Loop:\n\t\tProcess Tech: Restrictions + capabilities\n\t\tComputer Architecture: Performance + restrictions\n\t\tSoftware Community: wishes\n\tMulticore Software Triad\n\t\tDevelopment time\n\t\tSoftware Reliability\n\t\t\tDetect failing core: wrong results\n\t\t\tBulletproof: Immune to input\n\t\tApplication Performance\n\t\t\tCommunication, mem access, computations\n\nParallel Hardware: Mem Problems\n\tInstructions: (DRAM Capacity, Processor Speed, Disk)\n\n\tMemory Wall: Accessing mem is still slow\n\t\tCache Coherence: Keep memory access up to date\n\t\t2 lvl 1 caches: instructions, data\n\t\tlvl 2: Private to each core\n\t\tlvl 3 cache: Shared\n\tRAM: Capacitors memory\n\t\tRefresh cycle: keep charge alive by electricity\n\t\tProcessor Speed: Instructions / sec\n\tMulticore Performance Loss: Mem and comm\n\tFlynn's Taxonomy: 4 systems (SISD, ...)\n\nSIMD (data parallelism): one task, multi data threads\n\t//GPU / Machine Learning\n\tVector processors:\n\t\tVector execution units: multiple reg operations\n\t\t\tArr Add: ALUs divide work\n\n\tPros\n\t\tGood use of memory bandwidth: (bunch of values at once, cache friendly)\n\t\tSimpler, less space\n\tCons\n\t\tSynchronous only\n\t\tALUs: Must all do same instructions or idle\n\t\tDS: Cant handle irregular DSs\n\t\tLimited Scale: Fixed number of vector regs and vector EUs\nMIMD: Most generic\n\t//Multiprocessor systems: Multple chips\n\t\tSame motherboard: Sharing mem\n\tIndependent cores: own control unit & alu\n\n\tShared Mem: multi CPUs, one mem //OpenMP\n\t\tCPUs: connected to mem by interconnection network\n\t\tDesigns: Master-Worker Cores vs SMP (all the same)\n\tDistributed Mem: Cluster of computers, comms //MPI\n\t\tNode: (CPU, Mem)\n\nTerms\n\tMotherboard: Main circuit board, holds comms\n\tBus: Transfers data between computer comps\n\tNode: Individual processor/core & mem\n\tCore: thread runner within CPU\n\tProcessor <=> CPU\n\n\tExpensive Processes: Comms, mem access, computation\n\tTopology of Interconnection\n\tBand-Width: connections in wire across cores\nShared Mem Interconnect\n\tBus Interconnect: one sender at a time -> global mem\n\t\tCon: Must serialize/sequentialize sends\n\t\tCon: noise, corrupted data (electric flips bits)\n\t\tCon: Bad with many cores\n\tSwitched Interconnect: routing of data, controlled by switches\n\t\tSwitch: node in grid, direct by wires //4 directions\n\n\t\tPro: Simultaneous communication\n\t\tCon: Still collision, must serialize & access data in distributed way\n\t\tCon: Expensive\n\tSwitched Interconnect Types\n\t\tDirect Interconnect: Each switch has (processor - mem) pair //connect each to motherboard\n\t\tIndirect Interconnect: Switch may not be directly connected to processor\n\tWires: Transmit 1 bit per wire each cycle\n\t\tLatency: Time from transmitStart to receiveStart\n\t\tBandwidth: Rate which destination receives\n\n\t\tTransmission time (secs) = latencySecs + byteCount / bandwidthPerSec\n\tProcess Mem Components\n\t\tText: Instructions\n\t\tHeap, stack, data\n\n\t\tlvl1: data cache & instruction cache\n\t\tlvl3: Shared among cores\n\tMemory\n\t\tMem -> Regs: By virtual address\n\t\tCache: By physical address\n\t\t\n\t\tAccess: TLB/PageTable -> Cache/Mem\nCache Coherence: Updates invalidate memory access\n\tSnooping: All cores shares bus, broadcast updates -> invalidate/update other caches\n\tDirectory-Based: track copies, status of each cache block //outside cores\n\t\tWrite Thru: Update -> update lower caches\n\t\tWrite Back: Update on block replaced\n\t\tLvl1: Write thru, Lvl2 & 3: Write back\n\n---------------------------------------------------------------------------\n\nhttps://nyu.zoom.us/rec/play/T-iBnIp1SbTypf8EmwHuhL0RXmWvbk-UpdiK6PCFqeX-cu97Jj90dVo0jghZUVY0msr350eN6YWlG64X.zQT5JrZtedx9sgPU\n\nMESI Protocol: Status\n\tInvalid: Doesnt exist\n\t\tOwnCore Read: shared / exclusive\n\tExclusive: No copies\n\t\tDiffCore Write: Invalid //give copy to other core\n\tShared: More copies exist\n\tModified: Exclusive, but modified\n\n\tWrites: Invalidate for all other cores\nCoherence Protocol: avoid 2 copies of data\n\tSequentialize parallel mem write, ordering\n\t\tCon: Bottleneck delay\n\t\tDirectory: Tells core to wait\n\tDirectory, split into subdirectories\nComputers\n\tIntel Cascade Lake: 3 caches\n\t\tWrite back, 16-set assocative\n\t\tL3 Cache: Shared\n\tFUGAKU SuperComputer\n\t\tMotherboard (cores) //distance matters\n\t\tDistance Latency\n\tNon-uniform memory/cache access\n\tMemory is the most expensive\n\n----------------------------------------------------------------------------\n\nParallel Software: Overview\n\tShared Mem: Fork threads, 1 process\n\tDistributed Mem: Multi-processes, comm by msgs\n\tGPU: Threads gives task, same task on diff data\n\nDistributed\n\tSPMD: 1 program -> multi processes\n\t\tCode: Distinguish processes/threads by conditions\n\t\tLoad balancing, minimize comms\n\t\tSynchronizing: for diff processes/threads\n\n\tCPUS -> Interconnect -> MainMem\n\tSharing: virtual memory //separates processes\n\nShared Mem: Concepts\n\tDynamic Threads: Master thread forks threads to solve work\n\t\tEfficient: use of resources\n\t\tExpensive: thread creation/termination\n\tStatic Threads: pool of threads created and given work, terminate at cleanup\n\tNondeterminism (Race Condition): concurrent threads ordering unknown\n\nShared Mem: Critical Section\n\tCritical Section: Writing to shared mem\n\t\tMutual Exclusion: one thread at a time\n\t\tLock: Locked til owner thread unlocks //mutex, semaphore\n\t\tReduce Critical Sections: Use local bins for updates -> global bin (converging tree)\n\tCache Coherence: Only prevent cache simultaneous\n\t\tWill invalidate other core's changes\n\nShared Mem: Locks\n\tLocks: Deal with critical section\n\t\tDeadlock: E\n\t\tBusy Wait Loop: Lock waits by inf loop\n\tVars: Thread-private or shared\n\nDistributed Mem: Concepts\n\tProcess: (CPU, mem) //nodes connected by interconnect\n\n\tMessage Passing: send/receive msg to other process\n\t\t2 Copies: Each process has its own virtual space\n\t\tCon: Comms done by code\n\nFoster's Methodology (PCAM)\n\t1 Partitioning: divide sequential computation into tasks\n\t\tTaskcount: Way more tasks than cores\n\t\tRedundency: No unnecessary computation/storage\n\t\tLoad Balance: Tasks must be similar size\n\t\tScale: problem size = task count //not task weight\n\t\tConsider: other partitions\n\t2 Communication: needed comms among tasks\n\t\tComm Balance: All tasks use similar number of comms\n\t\tMany Comms: Dont give one task too many comms\n\t\tConcurrency: Can comms run in parallel\n\t3 Aggregation: combine tasks to reduce comms\n\t\tBenefit: Did it reduce comm costs?\n\t\tRepeated Comp: to prevent comms\n\t\tLoad Balance: Maintained balance?\n\t4 Mapping: assign tasks -> cores\n\t\tWays: (dynamic, static, SPMD)\n\nConcurrency: Concepts\n\tConcurrency: Progress at same time-frame (time-slicing)\n\tParallelism: Literally at same time (multicore)\n\t\tAvg Completion Time: avg of processes completion times\n\nAmadhl's Law\n\tAmdahl's Law: maxSpeedUp = Tseq/Tpar = 1 / (F + (1 - F)/P)\n\t\tF: Fraction of calculation that is sequential\n\t\tP: Corecount\n\t\tMessage: Dont blindly get more processorCount\n\t\t\tWhen High Data Sharing: less cores but stronger is better\n\t\t\tMinimize F (sequential parts)\n\t\tNeglected Factors: (comms, threadCreation, OS, load imbalance)\n\nPerformance Analysis\n\tDAG Model: Each node is execution\n\t\tWork: total time for all\n\t\t(T)p: fastest execution time on p processors\n\t\tSpan: Longest path (time) in DAG //span = (T)inf\n\t\tWork Law: (T)p >= (T)1 / p\n\t\tSpan Law: (T)p >= (T)inf\n\t\tParallelism: (T)1 / (T) inf\n\tLosses\n\t\tSynchronization barriers: Threads convergence\n\t\tComms\n\t\tArtificial dependences: Dependencies that dont exist\n\t\tContention: on access / computation\n\t\tCoherence: (bandwidth: invalidate message, false sharing: vars of same block get hit by coherence mechanism)\n\t\tLoad imbalance: E\nProgramming Model: Concepts\n\tLanguage Learning: understanding > syntax\n\tHardware Is Heterogeneous: Best use of underlying hardware\n\nPatterns In Parallelism\n\tTask level: not scalable\n\tDivide and Conquer: split & merge, non-blockings\n\tPipeline (intra-loop dependencies): ordered stages, each thread does a stage\n\tRepository Model: repo - list of tasks, threads get task from it\n\tHybrid: Multiple patterns\n\nPerformance Analysis\n\tPerformance = 1 / ExeTime\n\tSpeedUp = Tserial / Tparallel\n\t\tSmaller Problem: Speedup curve tampers off faster\n\tEfficiency = SpeedUp / threadCount //usage of resources\n\n\tOverheads: (create thread/process, sync, load imbalance, comms, more comp)","classes\\data-science.txt":"Resources\n\tBrightspace: https://brightspace.nyu.edu/d2l/home/299123\n\tServer: https://csciua-0381-fall.rcnyu.org/user/sak9725/tree\n\nTopics\n\tShell\n\tPython: Data\n\tPython: ML\n\nFundamentals\n\tData: Extract from DBMS/Files (server shell)\n\t\tData Engineer: Access, clean, discover\n\t\tData Analyst: Analysis, reporting, summarization\n\t\tML Engineer: ML: Prediction, deep discovery\n\nConnect Server\n\tBy Shell: ssh -s URL -u\n\tBy Jupiter: //open by python in server\n\nJupiter\n\tStop Program: (File) -> (Close and Halt)\n\n\tCode Cell\n\t\tUse Shell: ! CMD //independent runs, no access to OS\n\t\tUse Shell Multiline: %%! CMD\n\n\t\tUse Js: %%JAVASCRIPT\n\tMarkdown Cell //md, html, latex\n\tRawNBConvert Cell\n\n------------------------------------------------------------\n\nShell: Files\n\tNew Empty File: touch fileName //in currdir\n\tMove File: mv srcFile destDir //works on folders\n\tRename File: mv oldFile newFile\n\tCopy File: cp srcFile destDir //create/edit\n\n\tFind File: find searchDir //show all, recursive search\n\t\tFile/Dir: find searchDir -type f //d\n\t\tRegex: -name '*.txt'\n\nShell: Directories\n\tCreate Dir Nested: mkdir -p folder1/...\n\tRemove Empty Dir: rmdir folder\n\tRemove Dir Recursive: rm -r folder\n\tCopy Dir Recursive: cp -r srcDir destDir\n\nShell: Lines\n\tPrint Multiple: cat file1 file2 -> combinedLines\n\tPrint All: cat *.txt -> allFiles\n\n\tHead: head -n lineCount fileName\n\t\tEnd: tail -n lineCount fileName\n\t\tExclude Start: tail -n +startLine fileName\n\t\tExclude End: head -n -ignoreCount fileName\n\t\tSilent (no headers): -q\n\tWordcount: wc file/lines -> lines words chars\n\t\tLines Only: -l\n\t\tWords Only: -w\n\t\tChars Only: -c\n\tLineNums: nl file/lines -> lines\n\t\tNumbering Style: -b a //t: non-empty, n: no numbers\n\t\tNumber Digits: -n rn //ln: left, rz: right w 0s\n\t\tSeparator: -s\n\n\tSort: sort file/lines -> sortedLines\n\t\t// Lexicographical\n\t\tReverse: -r\n\t\tIgnore LeadingSpace: -b\n\t\tNumber Sort: -n\n\tUnique: uniq file/lines -> uniqueLines\n\t\t// Prereq: Must already be sorted\n\t\tFreq Display: -c\n\t\tOnly Dupes: -d\n\t\tOnly Uniques: -u\n\tCut: cut -c Start-End file/lines -> cutLines //inclusive (-c I1,I2)\n\t\tGet Col: -dChar -fColIndex- //1 indexed\n\t\t\tMultiCol: -f 1,3\n\t\t\tSubsetCol: -f 1-3 //inclusive\n\t\tGet Bytes: -b 1-4\n\n\tCombine Lines Horizontally: paste file1 file2 ... -> combined\n\t\tDelimiter: -d DelimiterChar\n\t\tSwitch Axis: -s\n\t\tArrange Along Cols: paste lines - - ... -> cols\n\n\tReplace: cat file | tr \"remove\" \"replace\" -> newLines\n\t\tToUpper: tr \"[a-z]\" \"[A-Z]\"\n\t\tPrevent DupeChar: -s \"char\"\n\t\tDelete Char: -d \"char\"\n\tReplace Word: sed \"s/removeWord/replaceWord/\" file -> lines\n\t\t//s: substitute\n\t\tNth Occurance Per Line: \"s/.../.../n\"\n\t\tAll Occurances: \"s/.../.../g\"\n\t\tSpecify Line: \"LineNum s/.../.../Occurance\"\n\n\t\tStart Of Each Line: \"s/^/word/\"\n\t\tEnd Of Each Line: \"s/$/word/\"\n\t\tLines: sed -n \"2,9p\" file\n\t\tDelete Lines: sed \"3,$d\" file\n\t\tDelete Lines With Word: sed \"/word/d\" file\n\n\t\tEdit File: sed -i \"...\" file\n\t\tMake Backup: sed -i .bak \"...\" file\n\tSearch Word: grep \"charSeq\" file -> lines\n\t\tMultichar: grep \"[chars]\" file -> lines\n\t\tExact Word: -w\n\t\tIgnore Case: -i\n\t\tRegex: -e \"regex\"\n\t\tOccuranceCount: -c //num only\n\t\tLine Nums: -n\n\t\tRecursive: -r //use dir instead of file\n\t\tDont Allow: -v\nShell: Direct\n\tFile Edit: cmd > fileName //create/edit\n\tFile Append: cmd >> fileName //create/edit\n\tPipe: cmd1 | cmd2 //output1 -> input2\n\n\tFile -> StdInput: < file\nShell: Permissions\n\tView Perms: ls -l\n\t\tisDir:d owner:rwe group:rwe anyone:rwe\n\t\thardLinkCount\n\t\tuserName\n\t\tgroupName\n\tChange Perms: chmod +x file\n\n\tChange Perm Num: chmod <user><group><any> file\n\t\t0: no perm\n\t\t1: execute\n\t\t2: write\n\t\t4: read\n\t\t//add: combine perms\nShell: Others\n\tPrint Help: <instruction> --help\n\tGo To Home: cd ~ //Linux: multiple users, each user has a home\n\tRepresent Escape Chars: $'\\t'\n\nShell Script: Vim\n\tOpen Vim: vim fileName //create/edit\n\t\tInsert Mode: i\n\t\tExit Insert: esc\n\t\tSave: :w\n\t\tQuit: :q\n\t\tForce Quit: :q!\n\t\tRun Cmd: :!CMD\n\t\tSave & Run: :w | !./%\n\t//Header : #!/bin/sh //top of file\n\t\t//Support IFS Change: use #!/bin/bash\nShell Script: Cmd Output\n\tCmd Output: $(cmd) -> output\n\nShell Script: Args\n\tSet Arg: ./file.sh arg1 ... //in shell\n\tGet Arg1: $1 -> val //in script\nShell Script: Constants\n\tIFS: IFS=$\" \\t\\n\" //separatorChars\n\tHOME: User dir\n\tPWD: Curr dir\n\t$0: Filename\n\t$1, ...: args\n\t$*, $@: All args\n\t$#: argCount\n\nShell Script: Variables\n\tCreate: varName=val\n\tAccess: $varName\nShell Script: Input\n\tInput: read x //var x gets input\n\t\tSilent: -s\nShell Script: If\n\tif [ Condition ]; then\n\t\t...\n\telif [ Condition ]; then\n\t\t...\n\telse\n\t\t...\n\tfi\nShell Script: Operators\n\tOperators: -eq -gt -lt -ge -le, -ne\n\tAnd / Or: -a, -o\n\t\t// if [ Cond1 -a Cond2 ]\n\tText Compare: =, !=\n\t\tFile Exists: -e\n\t\tDir Exists: -d\n\t\tFile Perms: -r, -x, -w\nShell Script: While\n\twhile Condition\n\tdo\n\t\t...\n\tdone\n\t//File Lines: while read LINE ... done < file\nShell Script: For\n\tfor i in List; do\n\t\tAccess Val: $i -> val\n\tdone\n\t//Loop File Lines: for line in $(cat file) ...\n\nShell Script: String\n\tRaw Str: ' ... '\n\tInterpreted Str: \" ... \"\n\tEscape Chars: $'\\n'\n\tInterpolation: \"${varName} $(cmd)\"\nShell Script: List\n\tWord List: word1 ...\nShell Script: Expressions\n\tExpressions: expr $x+$y //-, *, /, %\n\n---------------------------------------------------------------\n\nPython: Datatypes\n\tGet Type: type(var) -> str\n\n\tFloat: No // or %\n\tBool: True==1, False==0\n\tInt -> Bool: 0: False, AnythingElse: True\n\nPython: Math\n\tImport: import math as ma\n\n\tSin: .sin(degrees) -> radians\n\tAbs: abs(num) -> num\n\nPython: Unpack\n\tMulti Var: var1, ... = list\n\tUnpack: *list -> val1, ...\n\nPython: Iterator\n\tGet Itr: iter(iterable) -> itr\n\t\tGet Curr: next(iterable) -> element //and progresses itr, or error\n\t//Allows for one-by-one processing\n\tMap Itr: next(map) -> element //deletes used elements\n\nPython: Expressive\n\tTernary: trueVal if Condition else falseVal\n\tList Expressive: [ newElement for Element in List if Condition ] -> newList\n\tDict Expressive: { key : val for element in list } -> newDict\n\nPython: Generator\n\tAdd To Gen: yield(val) //in func\n\tGet Gen: funcName() -> gen\n\t\tNext: next(gen) -> val //and increments\n\tGen Expressive: ( newElement for Element in List ) -> gen\n\nPython: Iterable\n\tIterable: capable of iterating by for loop //__iter__()\n\t\tShallow Copy: collectionObj.copy() -> obj\n\nPython: Class Content\n\tClass Var: classVar = val\n\tAccess Class Var: Class.classVar\n\tClass Method: def classMethod(): //no self\n\nPython: Specials Method\n\tToString: __str__()\n\tHelp: ClassName? //prints top comments\n\nPython: Inheritance\n\tSubclass: class subName(superName):\n\t\tCall Super Constructor: super().__init__()\n\nPython: Exceptions\n\tThrow: raise ExceptionType(\"msg\")\n\n\tTry Catch\n\t\ttry: ...\n\t\texcept ExceptionType: ...\n\t\telse: ... //run if no err\n\t\tfinally: ...\n\n-------------------------------------------------------------\n\nPython: List\n\tContains: val in list -> bool\n\tSlice: list[start:end:inc] //out of bounds: no error\n\tSum: sum(list) -> num\n\tExtend: list.extend(iterable)\n\tRemove: list.remove(element)\n\tRemove Index: list.pop(index)\n\n\tDeep Copy: copy.deepcopy(list) -> clone //import copy\n\tCombine: l1 + l2 -> list\n\tDuplicate: list * 5 -> list\n\n\nPython: Tuple\n\tCount: .count(val) -> int\n\tIndex Of: .index(val) -> int\n\tAddition: tuple1 + tuple2 -> tuple\n\tDuplicate: tuple * 2 -> tuple\n\nPython: Set\n\t\t//Immutable elements\n\tContains: val in set -> bool\n\tAnd: s1 & s2 -> set //.intersection()\n\tOr: s1 | s2 -> set //.union()\n\tDifference: s1 - s2 -> set\n\tNon Shared: s1 ^ s2 -> set\n\nPython: Dict\n\tBy List: dict(list[(key, val)]) //Immutable Keys\n\tBy Args: dict(key1=val1, ...)\n\tDefault Dict: dict.fromkeys(list[key], defaultVal) -> dict\n\t\tContains Key: key in dict -> bool\n\t\tRemove: del dict[key]\n\t\tGet Keys: .keys() -> dict_keys //variant of list\n\t\tGet Values: .values() -> dict_values\n\t\tGet Pairs: .items() -> list[(key, val)] //variant of list\n\t\tUnpack: { **dict1, **dict2 } -> combinedDict\n\nPython: Map Funcs\n\tMap: map(func(element) -> newElement, list) -> map\n\t\tConvert To List: list(map) -> list\n\t\t//Can use: (list, tuple, str, set, dict: overKeys)\n\tFilter: filter(func(element) -> bool, iterable) -> filter\n\t\tConvert To List: list(filter) -> list\n\tSort: sorted(iterable, key=func(element) -> rankNum, reverse: bool) -> list\n\tZip: list(zip(list1, ...)) -> list[(e1, e2)] //ignore overflows\n\n----------------------------------------------------------------------------------------\n\nPython: Str\n\t.capitalize() -> str //first only, .title() -> str //first of each word \n\t.upper() -> str, .lower() -> str, .swapcase() -> str\n\tCount: .count(\"substr\") -> int\n\tIndexOf: .find(\"substr\") -> indexOf\n\tTrim: .strip() -> str //lstrip(), rstrip()\n\tSplit: .split(delimiter) -> str[]\n\tJoin: \"delimiter\".join(str[]) -> str\n\nPython: File Read\n\tGet: open(\"path\") -> file //create/read, from python call location\n\t\tRead: .read() -> str\n\t\tRead Lines: .readlines() -> str[]\n\t\tLine Itr: next(file) -> line\n\t\tClose: .close()\n\nPython: File Write\n\tWrite Mode: open(\"path\", \"w\") -> file //append mode: a\n\t\tWrite: .write(str)\n\nPython: pickle\n\tWrite Mode: open(\"path\", \"wb\") -> file //read mode: rb\n\t\tWrite: pickle.dump(bin/obj, file) //enter in order\n\t\tRead pickle.load(file) -> bin/obj //load in order\n\nPython: datetime\n\tfrom datetime import datetime\n\n\tStr -> Time: datetime.strptime(str, \"%H:%M:%S\") -> time\n\tDiff: time1 - time2 -> diff\n\n-----------------------------------------------------------------\n\nShell Script: Strategies\n\tCmds: (cat, ls, head, tail, wc, nl, sort, uniq, cut, paste, tr, sed, grep)\n\tWords -> Lines: tr \" \" \"\\n\"\n\nPython: One Line Strategies\n\tMax1 -> Max2: find max1, filter entries to find max1 -> max2\n\tSort MultiKeys: Use tuple of keys as key\n\tMerge Maps: [*list(map1), *list(map2)]\n\tEvery Other: list[::2]\n\tFreq: tuple(list).count(find)\n\tFreqs: [freq for item in set(list)]\n\tLines -> Words: \" \".join(lines[]).split(\" \")\n\tRemove Clutter: str.replace(\",\", \"\")","classes\\main.txt":"Neck Pain\n\tbalancedPillow\n\tconstantMotion\n\tworkLess\n\tMassage, heatCold, movement, deskHeight, 2spin, 2x2push\n\t2x2diagonalPush, 4directionPush, linePress\nBeautiful Formula\n\tImprovements: (wash & moisterize, earlierWake, coldEyes)\n\tMorning exercise & shower\n\tHair: Short-balanced length\n\nMotivation\n\tProgression\n\tOrientation\n\tUrgency\n\tPanopticon\nTasking\n\tTask List: Split into 20min sprints\n\tOpen-minded & tolerant\nProgression\n\tBreak Bubble\n\t\tFind more topics\n\t\tWatch project videos\n\t\tWeekly interview prep\n\tMeta-Progression: Analyze & improve progression\nLearn & Note\n\tOrientation\n\tRecompiling\n\tPreplan notetaking format\n\nDebug: Passtive Techniques\n\tCause Unknown: conscious zooming\nDebug: Active Techniques\n\tLack Of Info\n\t\tPrint pts\n\t\tResearch error msg\n\tDeletion Test\n\t\tFind location & cause\n\tRecreate Error\n\t\tEliminate distractions\n\t\tApproach original\n\tUnconscious Assumption\n\t\tSeparate parts\n\t\tWiggle all parts\n\tSurrender\n\t\tAccept workarounds\nDebug: Cognitive Errors\n\tDiversion: attention to diff\n\tHalt: unable to progress zooming\n\tAssumption: misinformation about code","QuickNotes3\\it-notes.txt":"Resources\n\tIT Req https://bpastest-aws.its.nyu.edu/apworkflow/jsp/search.jsp;APWORKFLOWSESSIONID=272E2ilunVAEYPFui9V54N3JGJpHLpMQMKTKOVSF6YU6F7XaYzCX!-1180356867\n\tSetup Doc https://docs.google.com/document/d/19nNyolA_f5xxFasXngfQb6hO2mHvKcFYzYKL3F2wRNg/edit\n\n\tWorkday https://wd5.myworkday.com/nyu/d/unifiedinbox/initialinbox/2998$17139.htmld\n\nInformation\n\tRepository Path: $/DAA/2-Dev/DAA-Spring\n\n\tAWS Workspace User: sak9725\n\tAWS Workspace Password: BlackAlgorithm0011!\n\tAWS Workspace MFA: USE New York University!\n\n\tdawbpats: CpOHk^rfk_b36<({z)U\n\tpawbpats: XCN^ApR`3T8L?i~6\n\nNotes\n\tVisual Studio: Orientation\n\t\tDAA/2-Dev/DAA-Spring/src/main/java\n\n\t\tCheck In Code\n\t\t\tPull: (DAA-Spring) -> (Get Latest Version)\n\t\t\tLock: Lock file from others, prevent conflict\n\t\t\tFILE - Undo Pending Changes: Delete changes\n\t\t\tFILE - Compare: Git view\n\t\t\tMerge Conflict\n\nTasks\n\tAp Workflow: Change styling by database\n\t\tDAWBPATS/Tables/AP_CODE_MESSAGE\n\t\t\t//login as sak9275[apworkflow]\n\t\t1st header: bigger font, red text (inline styles)\n\t\t\tstyle=\"color: #8B0000; font-size: 1rem; font-weight: bold;\"\n\t\tUpload: Use insert command, save changes\n\n\tVisual Studio: Orientation\n\tSQL Developer: Orientation\n\tSQL Developer Setup: Username fix\n\t\t[apworkflow]\n\tMaven Setup: Start\n\tEclipse Setup all steps\n\n\tILearn: Finish PRO-100\n\tOther mandatory tasks: https://drive.google.com/file/d/11zlNXtpZ5NKpJKvjqf0ZG0oHrS58EV7w/view?pli=1\n\tI-9 issue resolve: wait for Form A","QuickNotes3\\tutoring-notes.txt":"Resources\n\tZoom: https://nyu.zoom.us/j/95081149484\n\tSyllabus: https://cs.nyu.edu/courses/fall23/CSCI-UA.0004-004/common-syllabus/#tutoring\n\nTeaching Setup\n\tUnix: Terminal\n\tHtml: vscode + preview\n\nCurrent Topics\n\tInternet\n\t\tCentralized, decentralized, distributed\n\t\tOS: software(CPU, mem, files, IO, network)\n\t\tStorage Sizes: bit, byte8, kilobyte1000, mb, gb, tb, pb\n\t\t\tMegabit: milllion bits\n\tUnix\n\t\tls, pwd, cd, cp, rm\n\t\tchmod permNum file\n\t\tchmod a+x file //-: no perms\n\t\t\tu-rwx, u=r\n\t\t\t-r: Recursive\n\n\t\tssh, putty, winscp\n\t\tCIMS Connect: ()\n\tHTML\n\t\timg, h, p, bold, italic, quote?\n\t\t<hr>: Horizontal line //self closing\n\t\t<blockquote>: quote formatted\n\tHTML: Head\n\t\thtml.lang = \"en\": accessibility, SEO\n\t\tTitle: <title> ... </title>\n\n\t\tChar Encoding: <meta charset=\"utf-8\">\n\t\tDescription: <meta description=\"utf-8\">","QuickNotes3\\main.txt":"Job Search\n\tTargets: FAANG / Known companies only\n\tEfficiency: Fast appliers, preformatted answers\n\tAppearance: exaggerate existing experience\n\nJob Consciousness\n\tCareer: field research, consider others\n\tCompany: validation protocol\n\tConnections: How to use, how to reach recruiters\n\tResume Screening: What they want, keyword finding\n\tInterview: interview info, watch interviews, real practice\n\t\thttps://www.youtube.com/watch?v=RWP9Zmhyv_Q\n\nNeck Pain\n\tSleep: balanced pillow, correct angle\n\tPosture: Back support / lean forward, no energy position\n\tExercise: spin, 4directionPush\n\t\tStiff Point: dotPress, linePress\n\nBeautiful Formula\n\tImprovements: (wash & moisterize, earlierWake, coldEyes)\n\tMorning exercise & shower\n\tHair: Short-balanced length\n\t//Figure out how to speed up day progression\n\t\tWake up earlier?\n\nSocial\n\tConvo: Lack of context\n\tConvo: Silence break by generic question\n\tConvo: Constant ethos\n\tBehavior: Mispronounciation by nervousness\n\tBehavior: Initial uncalmness\n\tBehavior: touchFace\n\tGroup: exploit silent patch\n\n---------------------------------------------------------------------------------\n\nMotivation\n\tLocation: public, flex on others\n\tProgression: numb progress, passionate task first\n\tOrientation: preexisting knowledge\n\tUrgency: timer, divided tasks\n\nCognitive Bias\n\tDebugging: Cognitive bias\n\tLearning Curve First Hit: Cognitive bias\n\tLearning Acceptance: Discomfort bias\n\tInvincibility: Cognitive bias\n\nTime Management\n\tPriority: give time proportional to benefit\n\tHave Too Much Time: rush to finish tasks, then do projs\n\nProgression\n\tBreak Bubble: spontaneous progression\n\t\tFind more topics\n\t\tProject videos\n\t\tWeekly interview prep\n\tMeta-Progression: Analyze & improve progression\n\n-------------------------------------------------------------------------\n\nNotetaking Format\n\tMemory: Section-oriented recall, short sections\n\tMemory: Rich understanding -> reference memory\n\nDiscrete Plan\n\tNotetaking: section(defs, props, critical pts)\n\tPractice Problems: quick span + proofs critical pts\n\tQuiz: constant motion, alt with Ishan\n\tMidterm Prep: paper timed rehearsal\n\nParallel Plan\n\tNotetaking: Important pts only, short sections\n\tAttention: Pick the right place\n\nData Science Plan\n\tIdea Miss: Question or GPT on opening\n\tNotetaking: Unknowns only\n\tStudy: Memorize info rich mem, document critical pts\n\n---------------------------------------------------------------------\n\nDebug: Techniques\n\tNo Info: Research error msg\n\tUnknown Location: Print pts, deletion test\n\tUnknown Cause: Conscious zooming (know your prereqs)\n\tRecreate Error: Eliminate distractions, approach original\n\tUnconscious Assumption: Separate & wiggle all parts\n\tConstant Motion: Constant change\nDebug: Cognitive Errors\n\tDiversion: attention to diff\n\tHalt: unable to progress zooming\n\tAssumption: misinformation about code\n\tTunnel Vision: no debug strat, blank out\n\n-----------------------------------------------------------\n\nProject: Plan\n\tModeling: Draw out (Components: Cases)\n\tTest: after each step\n\tTasking: small tasks","QuickNotes3\\office hour plan.txt":"Sample Proof Review\n\tOverall formatting\n\t\tVariables: Group specification\n\t\tParagraphical inline format\n\t\tNo explain alg\n\tDef/Theorem referencing: By name\n\n\tComments: Policy\n\tNecessary Labeling: Extent (screenshot)\n\tResolution: + button in latex\nConcepts\n\tTheorem: if A then B -> A only if B\nTerms:\n\tClaim: to be proven, true\n\tStatement: general","QuickNotes3\\AIT-HW1.txt":"","jobs\\tutoring-notes.txt":"Resources\n\tZoom: https://nyu.zoom.us/j/95081149484\n\tSyllabus: https://cs.nyu.edu/courses/fall23/CSCI-UA.0004-004/common-syllabus/#tutoring\n\nTeaching Setup\n\tUnix: Terminal\n\tHtml: vscode + preview\n\nErrors\n\tWrong File: Wrong local html opened error\n\tCIMS: public_html deleted error\n\t\t% ln -s /web/NETID public_html\n\nCurrent Topics\n\tInternet\n\t\tCentralized, decentralized, distributed\n\t\tOS: software(CPU, mem, files, IO, network)\n\t\tStorage Sizes: bit, byte8, kilobyte1000, mb, gb, tb, pb\n\t\t\tMegabit: milllion bits\n\tUnix\n\t\tls, pwd, cd, cp, rm\n\t\tchmod permNum file\n\t\tchmod a+x file //-: no perms\n\t\t\tu-rwx, u=r\n\t\t\t-r: Recursive\n\n\t\tssh, putty, winscp\n\t\tCIMS Connect: ()\n\tHTML\n\t\t(img, h, p, bold, italic)\n\t\tHorizontal Line: <hr> //self closing\n\t\tQuote: <blockquote>\n\t\tDesc List: <dl>\n\t\t\tKey: <dt>\n\t\t\tValue: <dd>\n\tHTML: Head\n\t\thtml.lang = \"en\": accessibility, SEO\n\t\tTitle: <title> ... </title>\n\n\t\tChar Encoding: <meta charset=\"utf-8\">\n\t\tDescription: <meta description=\"utf-8\">","temp\\discrete-study-plan.txt":"Tasks\n\t15: find & solve problems ()\n\t\t9: (x - y) = 2n\n\t\tsuppose int x in [1]. Therefore, x R 1.\n\t\t(x - 1) = 2n\n\t\tx - 3 = 2n - 2\n\t\tx - 3 = 2(n - 1)\n\t\t(x - 3) = 2z\n\n\t\tsuppose int x in [3]\n\t13.1: writing\n\tLogic: review all\n\nQuestions\n\tCheck latex chap 12 (12.22, 12.30) with prof\n\t5.21: Composite proof explanation\n\tiff: Reuse vars?\n\nChap 14\n\t14.10: same-size relation R on 2^Z\n\t\tReflexive: consider x in R, we know that |x| = |x| because a given set will always have the same cardinality as itself.\n\t\tIrreflexive: consider the set x such that x = {1}. |x| = |x|.\n\t\tSymmetric: We want to prove that R on 2^Z is symmetric. Let (x, y) in R. We know that |x| = |y| because by definition, R is a same-size relation. Therefore, we also know that |y| = |x|. Therefore, (y, x) in R, so R is symmetric.\n\t\tAntisymm: Consider this:\n\t\t\tLet (x, y) in R such that x = {3} and y = {2}. Therefore, by definition, |x| = |y| and |y| = |x|. Therefore, we know that x R y and y R x. However, x != y. Therefore, R is not antisymmetric.\n\t\tTransitive: We want to prove that R is transitive. So, we want to show that for all (x, y) in R and (y, z) in R, if x R y and y R z, then x R z.\n\t\tLet (x, y) in R and (y, z) in R.\n\t\tSince R is a same-size relation we know that |x| = |y| and |y| = |z|. Therefore, |x| = |z|. Now, we know that x R z and therefore, (x, z) in R.\n\t14.9: Let R be a relation on set A. If asymm -> irreflexive\n\t\tLet (x, y) be an ordered pair in R.\n\t\tSuppose R is antisymm. Therefore, x R y & y R x -> x = y.\n\t\tx !R y\n\t\t//COUNTEREXAMPLE:\n\t\tEquivalence relation on set {1, 2}\n\t\tR = {(1, 1), (1, 2), (2, 1)}\n\t14.8: Let R and S be relations such that R = S^-1. We want to prove that S = R^-1.\n\t\t(->): Suppose (x, y) in S. Therefore, by definition, (y, x) in S^-1. Since S^-1 = R, we know that (y, x) in R. Therefore, by definition, (x, y) in R^-1.\n\t14.6 c: |a - b| <= 2 //irreflexive for all x, x != x\n\t\tWe want to prove that the near-one-another relation defined on Z is irreflexive. We want to show that for all x in Z, x !R x. Let x be an integer. We know that |x - x| = |0| = 0 <= 2, showing that x R x. Therefore, the relation is not irreflexive.\n\t14.5: R on Z: a = b\n\t\tWe want to prove that the equality relation defined on Z is antisymmetric. Therefore, we want to show that for all x, y in Z, if x = y and y = x, then x = y. Let x, y be integers such that x = y and y = x. Therefore, x = y. By definition, the equality relation defined on Z is antisymmetric.\n\t14.4 b: F T F T F\n\t14.3 d: F F T F F\n\t14.2: <, >=, a + b = 6\n\t14.1 a: (2 1) (3 1) (3 2) (4 1) (4 2) (4 3) (5 1) (5 2) (5 3) (5 4)\n\nChap 13\n\t13.1: 2^0 + 2^1 + ... + 2^n-1 = 2^n - 1\n\t\tQ: How many bit strings of length n exist, where the string cannot have all 0s as bits?\n\t\tA1: Since the bit strings are of length n, there are n elements where each element has 2 choices. Therefore, there are 2^n unique bit strings. Considering that the bit string of all 0s is not allowed, we have 2^n - 1 possibilities.\n\n\t\tA2: We want to find all bitStrings such that given an integer i in {1, 2, ..., n}\n\n\t\t{ (0 1 _ _), ... }\n\t\tn: \n\t\ti: bitString group\n\t\t\tfor each\n\n\t13.2: +int n: (x - 1)(1 + x + x^2 + ... + x^n - 1)\n\t\t(x + ... + x^n) - (1 + x + ... + x^n-1)\n\t\t-1 + x^n = x^n - 1\n\n\t\tWe want to prove that 2^0 + 2^1 + ... + 2^n-1 = 2^n - 1. We know that (x - 1)(...) =\n\n\t13.3: 2 * 3^0 + 2 * 3^1 + ... + 2 * 3^n-1 = 3^n - 1\n\t\tQuestion: 3 choices, n slots, exclude all 0\n\t\t\t{ (1, 2, 3), !(3, 3, 3) }\n\t\tAns1: 3 choices, n slots, exclude 3 3 3\n\t\tAns2: E\n\n\t13.4: (a + b)(a - b) = a^2 - b^2\n\t\tQ: How many possible lists such that first element is of A union B and 2nd element is of A - B\n\t\tA1: a^2: all possibles, b^2: those that used b twice\n\t\tA2: (a + b): first slot can do either, (a - b): 2nd slot cant do b\n\n\t13.5: +int n, n^2 = n(n - 1) + n\n\t\tQ: How many n choices, 2 slots?\n\t\tA1: n^2, dupes allowed\n\t\tA2: n(n + 1) that dont repeat\n\t\t\tn lists that repeat\n\t\t\tn(n + 1) + n: combined\n\n\t13.6: # of (a, b) with [0, n] with a < b\n\t\t(a): (n + 1)(n / 2)\n\t\t\ta: n + 1 choices\n\t\t\tb: a 0 -> n, a n -> 0\n\t\t\t-------------\n\t\t\t0 1 2 3 4 n\n\t\t\ta b b b b b\n\t\t\ta a a a a b\n\t\t\t-------------\n\t\t\ta a b b b b\n\t\t\ta a a a b b\n\t\t(b): (n + 1)(n / 2) = 1 + 2 + ... + n\n\t\t\tn + 4 + 3 + 2 + 1\n\n\t13.7: 2lists from [1, n], largest (a: [1, n])\n\t\tProve: 1 + 3 + 5 + ... + (2n - 1) = n^2\n\t\tA1: a gets n choices, 2(a - 1) + 1\n\t\t\ta = 0: 1\n\t\t\ta = 1: 3\n\t\t\ta = n - 1: 2n - 3\n\t\t\ta = n: 2n - 1\n\n\t\t\t1 1\n\t\t\t1 2, 2 1, 2 2\n\t\t\t1 3, 2 3, 3 3, 3 2, 3 1\n\t\tA2: for each a: 2(a - 1) + 1\n\nChap 12\n\t12.22 a: A = B iff A' = B'\n\t\t(=>)(=>): x in A'\n\t\tx notIn A\n\t\tsince x notIn A, x notIn B\n\t\tTherefore x in B'\n\t\t(=>)(<=) x in B'\n\t\tx notIn B\n\t\tsince x notIn B, x notIn A\n\t\tTherefore x in A'\n\t\t(<=)(=>): x in A\n\t\tx notIn A'\n\t\tx notIn \n\t\tx in B\n\t\t\n\t12.22 b: A'' = A\t\n\t(=>) x in A''\n\tx in U - A'\n\tx in A\n\t(<=) x in A\n\tx in U - A'\n\tx in A''\n\n\t12.30 a: A x (B union C) = (A x B) union (A x C)\n\t\t(=>): x in A and y in B union C\n\t\tx in A and (y in B or y in C)\n\t\t(x in A and y in B) or (x in A and y in C)\n\t\tx in A x B or x in A x C\n\t\tx in A x B union A x C\n\n\t12.30 c: A x (B - C) = (A x B) - (A x C)\n\t\t(=>): x in A and y in B - C\n\t\tx in A and (y in B and y notIn C)\n\t\t(x in A and y in B) and (x in A and y notIn C)\n\t\tx in A x B and x notIn A x C\n\n\t12.21 b: (A - B) - C = (A - C) - B\n\t\t(=>): Suppose that x in (A - B) - C\n\t\tx in A - B and x notIn C\n\t\t(x in A and x notIn B) and x notIn C\n\t\tx notIn C and (x in A and x notIn B)\n\t\t(x in A and x notIn C) and (x notIn B and x notIn C)\n\t\tx in A - C and (x notIn B and x notIn C)\n\t\tx in A - C and x notIn B\n\t\tx in (A - C) - B\n\t12.25: A subset B -> x in A ___ x in B\n\t\tsubset: ->\n\t\ttri: XOR\n\n\t12.16: A subset B iff A - B = {}\n\t\t(=>) First, we will prove that if A subset B, then A - B = {}. Suppose x in A. Since A subset B, x is also in B. Therefore, there is no x such that x is in A and x is not in B. Therefore, there are no x in A - B by definition.\n\t\t(<=) Next, we will prove that if A - B = {}, then A subset B. Suppose x in A. Since A - B = {}, there are no elements such that x in A and x notIn B. Therefore, if x in A, then we can say that x in B. Therefore, by definition, A subset B.\n\n\t12.13: |A tri B| = |A - B| + |B - A|\n\t\t|(A - B) union (B - A)|\n\t\tdisjoint: |A - B| + |B - A|\n\n\t12.11: Prove A union B = A inter B iff A = B\n\t\t(->)(->) First, we will prove that if A union B = A inter B, then A subset B. Suppose x in A. Since A union B, we can also say that x in A union B. Since A union B = A inter B, we can conclude that x is also in A inter B. Since x is in A inter B, x is also in B.\n\t\t(->)(<-) Next, we will prove that\n\n\t12.13: (A - B) + (B - A) are disjoint, by addition principle, |(A - B) union (B - A)| = |A - B| + |B - A|.\n\n\t12.15: A tri A = {} and A tri {} = A\n\t\tFirst, we will prove that A tri A = {}.\n\t\tA tri A = (A - A) = (A - A)\n\t\tA tri A = {} + {}\n\t\tA tri A = {}\n\t\n\t\tNext, we will prove that A tri {} = A.\n\t\tA tri {} = (a - {}) + ({} - A)\n\t\tA tri {} = A - A\n\t\tA tri {} = {}\n\n\t12.16: Prove that A subset B iff A - B = {}\n\t\tx in A\n\t\tx in B\n\t\tx notIn A - B\n\n\t12.17: A x B = B x A iff A = B\n\n\t12.20: R is convex: all pts contained in R\n\t\ta: Con1 union Con2 is convex\n\t\t\tSuppose l1 in Con1. Therefore, Con1 must also be in (Con1 union Con2).\n\t\t\tSuppose l2 in Con2.\n\t\tb:\n\n\t12.21\n\t\ta: Counter example\n\t\t\tA {1 2 3} B {1 2 4} C {3}\n\t\tb:\n\t\t\t(A - B) - C\n\t\t\t(x in A and x notIn B) and x notIn C //def\n\t\t\tx in A and x notIn B and x notIn C //assoc\n\t\t\tx in A and x notIn C and x notIn B //comm\n\t\t\t(x in A and x notIn C) and x notIn B //assoc\n\t\t\t(A - C) - B //def\n\t\tc:\n\t\t\t(A union B) - C\n\t\t\t(x in A or x in B) and x notIn C //def\n\t\t\tx notIn C and (x in A or x in B) //comm\n\t\t\t(x notIn C and x in A) or (x notIn C and x in B) //distributive\n\t\t\t(x in A and x notIn C) or (x in B and x notIn C) //comm\n\t\t\t... A{1 2 3} B{4 5} C{3 4}\n\t\t\tA - C{1 2}  B - C{5}\n\t\t\t(A - C) inter (B - C)\n\t\tf:\n\t\t\tA: {1 2 3}\n\t\t\tB: {3 4 5}\n\t\t\t(A - B): {1 2}\n\t\tg:\n\t\t\t(A union B) - B\n\t\t\t(x in A or x in B) and x notInB //def\n\t\t\tx notIn B and (x in A or x in B) //comm\n\t\t\t(x in A and x notInB) or (x in B and x notIn B) //comm\n\t\t\tx in A and x notIn B or (FALSE)\n\t\t\tA\n\t12.22\n\t\tb:\n\t\tx in A''\n\t\tx not in A'\n\t\tnot (x in A')\n\t\tnot (x not in A')\n\t\tx in A'\n\t\tA'' <= A\n\t\tc:\n\t\tx in A or x in B or x in C = A union B union C\n\t\tx notIn A and x notIn B and x notIn C = ...\n\t\tx in A' and x in B' and x in C'\n\t12.24\n\t\t|A union B union C|\n\t\t|A union B| + |C| - |(A union B) inter C|\n\t\t|A| + |B| - |A inter B| + |C| - |(A inter C) union (B inter C)|\n\t\t|A| + |B| + |C| - |A inter B| - (|A inter C| + |B inter C| - |(A inter C) inter (B inter C)|)\n\t\t|A| + |B| + |C| - |A inter B| - |A inter C| - |B inter C| + |C inter (A inter B))|\n\t12.26: A tri B = B tri A\n\t\t(A - B) union (B - A)\n\t\t(B - A) union (A - B)\n\t\tB tri A\n\t12.27: A tri (B tri C) = (A tri B) tri C\n\t\tA tri (B tri C)\n\t\t(A - (B tri C)) union ((B tri C) - A)\n\t\t(A - ((B - C) union (C - B))) union (((B - C) union (C - B)) - A)\n\t\t...\n\t\t(((A - B) union (B - A)) - C) union (C - ((A - B) union (B - A)))\n\t\t((A tri B) - C) union (C - (A tri B))\n\t12.30 a: A x  (B union C) = (A x B) union (A x C)\n\t\t(x, y) in A x B such that x in A, y in B union C\n\t\tx in A and y in (B union C)\n\t\tx in A and (y in B or y in C)\n\t\t(x in A and y in B) or (x in A and y in C)\n\t\tx in A, y in B or y in C \n\nChap 5\n\t5.11: Suppose a, b, d, x, and y are integers. Prove that if d | a and d | b, then d | (ax + by).\n\tProof: Suppose that d | a and d | b.\n\tBy definition, we know that dn = a and dk = b, where n and k are integers. We can multiply dn = a by integer x to get dnx = ax. Similarly, we can also multiple dk = b by integer y to get dky = by. Consider the following.\n\t\tdnx = ax, dky = by\n\t\tdnx + dky = ax + by\n\t\td(nx + ky) = ax + by\n\tSince nx is an integer (product of 2 integers) and ky is an integer (product of 2 integers), nx + ky is also an integer. Therefore, by definition of divisibility, d | ax + by.\n\n\t5.16: Let a and b be integers. Prove that a < b if and only if a <= b - 1.\n\t(=>) Suppose a < b. We will prove that a <= b - 1. Subtracting a from both sides of a < b, we have 0 < b - a. Since b - a is an integer and an integer greater than 0 must be at least 1, we can say that 1 <= b - a. Consider the following.\n\t\t1 <= b - a\n\t\ta + 1 <= b\n\t\ta <= b - 1\n\tTherefore, a <= b - 1.\n\t(<=) Suppose a <= b - 1. We will prove that a < b.\n\t\n\t5.17: Let a be num with a > 1. Prove that 1 < x < rootA <-> rootA < a/x < a.\n\tLet a be a number such that a > 1.\n\t(=>): First, we will prove that if 1 < x < rootA, then rootA < a/x < a. Since x > 1, a number divided by x will be less than its original value. Therefore, a/x < a. Consider x < rootA.\n\t\tx < rootA\n\t\trootA(x) < a\n\t\trootA < a/x\n\tWe know that dividing a given expression by x will not flip the comparison operator because x > 1 and is therefore, a positive number. Therefore, rootA < a/x < a\n\t(<=): Next, we will prove that if rootA < a/x < a, then 1 < x < rootA. Since a > 1, a is a positive number. Diving the expression rootA < a/x < a, we get the following.\n\t\t1/rootA < 1/x < 1\n\t\t1/rootA < 1/x < 1/1\n\tGetting the reciprocal of the expression, we can express as follows.\n\t\trootA > x > 1\n\tTherefore, 1 < x < rootA.\n\n\t5.18: Diff between consecutive perfect sqs is odd. Let x be an integer such that x >= 0. By definition, x^2 and (x + 1)^2 are consecutive perfect squares. Their difference can be expressed as follows.\n\t\t(x + 1)^2 - x^2\n\t\t= x^2 + 2x + 1 - x^2\n\t\t= 2x + 1\n\tSince x is an integer, by definition of odd numbers, 2x + 1, which is the difference of two consecutive perfect squares, is odd.\n\n\t5.19: Let a be perfect sq. Prove that a is sq on a nonnegative integer.\n\n\t5.21: Prove that the diff between distinct, nonconsecutive perfect sqs is comp.\n\tSuppose x^2 and (x + k)^2 are distinct, nonconsecutive perfect squares. k != 1 and k != -1.\n\t(x + k)^2 - x^2 = 2kx + k^2 = k(2x + k)\n\t\tCase 2x + k = 1: not possible\n\t\tCase 2x + k = -1: not possible\n\tTherefore, k(2x + k) = diff, where k and 2x + k are factors other than 1 (since 1 is not possible).\n\t...\n\t1 < b < a, bc = ... //int b, c\nChap 8\n\t8.7: 30 choices, 2 lists, 30 slots\n\t\ta: (30)30 * 2^30\n\t\tb: 2^30\n\n\t8.9: 8^2 * 7^2\n\n\t8.12: 9 slots, 10 choices\n\t\ta: 10^9\n\t\tb: 10^8 * 5\n\t\tc: 5^9\n\t\td: 10^5\n\t\te: 9^9\n\t\tf: 10^9 - 9^9\n\t\tg: 9^8 * 9\n\n\t8.14: 36 choices, [1, 8] slots\n\t\t36^8 + 36^7 + ... + 36^1\n\n\t8.15: 5 slots, 10 choices, 1st slot cant be 0\n\t\t9 * 9^4\n\n\t8.16: 10 choices, 4 slots, no same / ocnsecutive pair\n\t\t10 * 7^3\n\n\t8.18: 10 boys, 10 girls, alternate line, no dupes\n\t\tboy first: (10)10 * (10)10\n\t\tgirl first: (10)10 * (10)10\n\t\tAnswer: ((10)10 * (10)10) + ((10)10 * (10)10)\n\n\t8.19: 4 slots, 52 choices, diff suits/ranks\\\n\t\t_ _ _ _\n\t\t(4 * 13) * (3 * 12) * (2 * 11) * (1 * 10)\n\t\t(4)4 * (13)4\n\n\t\t4 suits * 13 ranks\nChap 10\n\t10.3d: {x in Z : {} in x}\n\n\t10.9: Sets A, B, C, A subset B, B subset C, C subset A, Prove A = C\n\t\tProof: Let A, B, C be sets such that A subset B, B subset C, and C subset A. We will prove that A = C.\n\t\t(=>) First, we will prove that A subset C.\n\t\tSuppose obj x, where x in A. Since A subset B, we can say that x is also in B. Since B subset C, we can also say that x in C. Therefore, A subset C.\n\t\t(<=) Next, we will prove that C subset A. This is already given and is therefore, true.\n\t\tTherefore, A = C.\n\n\t10.11: A subset B iff b | a.\n\t\tLet a, b be integers.\n\t\tLet A be a set such that A = { x in Z : a | x }.\n\t\tLet B be a set such that B = { x in Z : b | x }.\n\t\t(=>): First, we will prove that if A subset B, then b | a. Let x be an integer in set A. Therefore, a | x, so by definition, an = x, where n is an integer. Therefore,\n\t\tbz = a\n\n\t10.15: Let P be the set of Pythagorean triples\n\t\tP = {(a,b,c) : a,b,c in Z and a^2 + b^2 = c^2}\n\t\tT = {(p, q, r} : p = x^2 - y^2, q = 2xy, and r = x^2 + y^2 where int x, y}\n\t\tProve: T != P\n\n\t\tCounterExample: (3, 4, -5) not in T cuz x^2 + y^2 must be positive, but r is negative.\n\t\tTherefore, T != P.\n\nProof 1\n\tProve 14 | a iff 7 | a and 2 | a\n\t\t(=>)\n\t\ta = 14n\n\t\ta = 7(2n), a = 2(7n)\n\t\ta = 7x, a = 2y\n\t\t(<=)\n\t\ta = 7x, a = 2y\n\t\t2y = 7x\n\t\t7x is even\n\t\tx is even\n\t\tx = 2b\n\t\ta = 14b","jobs\\it-notes.txt":"Tasks\n\tHRO Nominee List\n\t\tTable: Checkmark -> Select\n\t\tIntroduction Msg: Show by default\n\tSQL: Strengthen rich knowledge\n\tTFS Source Control: Orientation\n\nDelayed Tasks\n\tOther mandatory tasks (cybersecurity error)\nhttps://drive.google.com/file/d/11zlNXtpZ5NKpJKvjqf0ZG0oHrS58EV7w/view?pli=1\n\tMaven Setup\n\t\tD:\\Users\\sak9725\\Downloads\\fmw_14.1.1.0.0_wls_lite_Disk1_1of1/fmw_14.1.1.0.0_wls_late_generic.jar\n\n\t\tC:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath\\java.exe\n\nCredentials\n\tRepository Path: $/DAA/2-Dev/DAA-Spring\n\n\tAWS Workspace User: sak9725\n\tAWS Workspace Password: BlackAlgorithm0011!\n\tAWS Workspace MFA: USE New York University!\n\n\tdawbpats pass: CpOHk^rfk_b36<({z)U\n\tqawbpats pass: XCN^ApR`3T8L?i~6\n\nProj: Repeated Procedures\n\tAuthController.java: Hardcode username, remove on checkin\n\tsrc/main/resources: Turn on readonly, turn off readonly\n\tapplication.properties: replace with application_local.properties\n\t\tspring.datasource.username: database username\n\t\tspring.datasource.password: database password\n\tProj Dir: Maven -> Update Project\n\nDAA: Submit Nomination\n\t1: Nominee form: (get his netID)\n\t2: Categories: Textbox descs\n\t3: Submit: Confirm -> validateAll\n\t//Refresh: resets progress\n\t//Replenish Progress: Go to my nominations\n\t//NetID Already Saved/Submitted: Error\n\t//Submit: Send email to user\n\n\tSubmitNominationController.java\n\t\t@Autowired: auto-get method by type\n\t\tE\n\tsubmitnomination.html\n\t\tThymeleaf: E\n\nDAA: My Nominations\n\tSaved: Not submitted but has data -> edit nomination\n\tSubmitted: Download nomination report pdf\n\nTFS: Info\n\tRepo: DAA/2-Dev/DAA-Spring\n\n\tClone: map to local folder\n\tFetch: get latest version\n\tPull: Check out\n\tPush: (DAA-Spring) -> (Get Latest Version), check in\n\tReview Changes: file -> (Compare Latest Version)\n\t\t\n\tLock: Lock file from others, prevent conflict\n\tFILE - Undo Pending Changes: Delete changes\n\tFILE - Compare: Git view\n\nTraining Notes: Tables\n\tDAA_ADMIN_DATA_T: daa applications begin/end\n\t\t(nom, hro: picking ppl, committee: rating)\n\tDAA_CODES_CRITERIA_T: criteria list\n\t\tActive: only actives are shown in app\n\tDAA_CONFIG_DATA_T: Configuration data\n\tDAA_ERROR_LOG_T: Error storage log\n\tDAA_MENU_SECURITY_T: role -> menu access map\n\tDAA_MENU_T: E\n\t\tActive: only actives are shown\n\tDAA_ROLES_T: Roles\n\tDAA_MESSAGES_T: id -> desc message map\n\tDAA_NOM_COMMITTEE_T: Rating page: storage\n\t\tDAA_NOM_COMMITTEE_DTL_T: connected by TRANSID, (criteria-code, rating) mapping\n\tDAA_NOM_HRO_T - DAA_NOM_HRO_DEL_WRITEUP_T\n\tDAA_NOMATION - DAA_NOMINATION_HDR_T\n\tDAA_NOTIFICATIONS_T: Emailing sent status -> msg map\n\tDAA_PSEUDONYM_T: Anonymous names for noms\n\tDAA_SECOND_HRO_T: second hro to write in place of primary\n\tDAA_USER_ROLES_T: username -> roleID map\n\tWD_DAA_EMPLOYEE_DATA_T\n\tWD_DAA_HRO_MASTER_T: E\nTraining Notes: Packages\n\t//sql code to be run\n\tDAA_NOMINATION_DATA: E\nTraining Notes: Static\n\ttemplates: html templates for pages\n\tapplication.properties: app configs\n\t\tlogging.level.edu=debug: log in console\n\tapplication_local.properties: local env configs\n\t\tChange username/password to access DB\nTraining Notes: edu.nyu.controller\n\tDaaApplication: main to run\n\n\tApplicationPageController: Route handler\n\t\tSpecifyed by @RequestMapping(/route)\n\t\t@Autowired: autoset data fields (singleton), bring in the service\n\t\t@GetMapping: renderAdministratorPage() //handleModel???\n\t\t\tModel: Page details obj\n\t\t\tReturn value: determines template to use\n\t\tFragment: Part of template rendered\n\tConfigurationController: Config page (devs only)\n\tWelcomeController: Welcome page\n\tSubmitNominationController: E\n\tServletAuthController: Auth page: auth reqs\n\t\tHardcode username: in dev\n\tExceptionController\n\tDAACustomException: Other errors\nTrianing notes: Edu.nyu.daa.aspect\n\tControllerPackageLogger:\n\t\tlog.debug(\"{} {}\", arg1, arg2)\n\t\t@Order: order which aspects run\n\t@Before: Before controller (order low->high)\n\tController runs\n\t@After: After Controller Returns (order high->low)\n\t\tLogs final model\nTraining Notes: Others\n\tdto: Storage\n\tentity: E\n\tservice: middleman client-server, actual logic\n\trepository: DB query comms\n\t\tMethod name -> query\n\t\t@procedure: -> DB procedures\n\t\tQuery: Import jpa.repository.query\n\t\t@Query(queryStr)\n\t\tmethod() -> List<RowObj>\n\tsecurity: E\n\t\tSecurityConfiguratino: Beans for auth","QuickNotes3\\bucket-list.txt":"Visit central park\nGet gf\nCreate friend group","temp\\discrete-quiz.txt":"1.1: any x: all y\n\tx = 3 y = 2\n1.2: all x, any y\n\tx = 5, y = -5\n1.3: any x, any y\n\n1.4: x: any 5 int list, y: any 5 int list\n\tIndices: j: all in {1, 2, 3, 4, 5}\n\tevery index is diff\n\tx[j] != y[j]\n\n2: all x, all y, E j, x = y\n\tall x = (x1, ..., x5), all y = (y1, ..., y5), E j in {1,2,3,4,5}, x = y\n\n3: question: how many 3lists on n choices\n\tquestion: distinct lists?\n\tans1:\n\tans2:\n\t\tn(n^2 - 3n + 2) + 3n^2 - 3n + n\n\t\tn^3 - 3n^2 + 2n + 3n^2 - 3n + n\n\t\tn^3\n\n4: n^3: n choices, 3 slots\n\tA: 3 slots, no dupes\n\tB: n slots, 3 choices\n\tD: n choices, 3 slots\n\n5:\n\tS: 3 6 9\n\tT: evens\n\t{}","temp\\ait-project.txt":"Links\n\tProj: https://cs.nyu.edu/courses/fall23/CSCI-UA.0467-001/_site/homework/03.html\n\nTasks\n\ttraverse directions again\n\tbasic testing\n\teslint check\n\toffice hour check questions\n\nQuestions\n\tLogger Middleware: Log statics as well?\n\tLogger Middleware: Follow exact spacing?\n\tNo filter / sort: Use pinned sort?\n\tEmpty filter: Use pinned sort?\n\tDate Input: required to change format?"}